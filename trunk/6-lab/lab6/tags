!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALT	kern/console.c	216;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARGBEGIN	inc/args.h	79;"	d
ARGC	inc/args.h	98;"	d
ARGEND	inc/args.h	92;"	d
ARGF	inc/args.h	93;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
BLKBITSIZE	inc/fs.h	12;"	d
BLKFILES	inc/fs.h	49;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	11;"	d
BLOCK_BITS	fs/fsformat.c	/^	BLOCK_BITS$/;"	e	enum:__anon4	file:
BLOCK_DIR	fs/fsformat.c	/^	BLOCK_DIR,$/;"	e	enum:__anon4	file:
BLOCK_FILE	fs/fsformat.c	/^	BLOCK_FILE,$/;"	e	enum:__anon4	file:
BLOCK_SUPER	fs/fsformat.c	/^	BLOCK_SUPER,$/;"	e	enum:__anon4	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testmalloc.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
Block	fs/fsformat.c	/^struct Block$/;"	s	file:
C	kern/console.c	283;"	d	file:
CAPSLOCK	kern/console.c	218;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD $/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	16;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COM1	kern/console.c	18;"	d	file:
COM_DLL	kern/console.c	21;"	d	file:
COM_DLM	kern/console.c	22;"	d	file:
COM_FCR	kern/console.c	26;"	d	file:
COM_IER	kern/console.c	23;"	d	file:
COM_IER_RDI	kern/console.c	24;"	d	file:
COM_IIR	kern/console.c	25;"	d	file:
COM_LCR	kern/console.c	27;"	d	file:
COM_LCR_DLAB	kern/console.c	28;"	d	file:
COM_LCR_WLEN8	kern/console.c	29;"	d	file:
COM_LSR	kern/console.c	34;"	d	file:
COM_LSR_DATA	kern/console.c	35;"	d	file:
COM_MCR	kern/console.c	30;"	d	file:
COM_MCR_DTR	kern/console.c	32;"	d	file:
COM_MCR_OUT2	kern/console.c	33;"	d	file:
COM_MCR_RTS	kern/console.c	31;"	d	file:
COM_RX	kern/console.c	20;"	d	file:
CONSBUFSIZE	kern/console.c	382;"	d	file:
CR0_AM	inc/mmu.h	88;"	d
CR0_CD	inc/mmu.h	90;"	d
CR0_EM	inc/mmu.h	83;"	d
CR0_ET	inc/mmu.h	85;"	d
CR0_MP	inc/mmu.h	82;"	d
CR0_NE	inc/mmu.h	86;"	d
CR0_NW	inc/mmu.h	89;"	d
CR0_PE	inc/mmu.h	81;"	d
CR0_PG	inc/mmu.h	91;"	d
CR0_TS	inc/mmu.h	84;"	d
CR0_WP	inc/mmu.h	87;"	d
CR4_DE	inc/mmu.h	96;"	d
CR4_MCE	inc/mmu.h	94;"	d
CR4_PCE	inc/mmu.h	93;"	d
CR4_PSE	inc/mmu.h	95;"	d
CR4_PVI	inc/mmu.h	98;"	d
CR4_TSD	inc/mmu.h	97;"	d
CR4_VME	inc/mmu.h	99;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	215;"	d	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
DEPTH	user/forktree.c	5;"	d	file:
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
Dev	inc/fd.h	/^struct Dev {$/;"	s
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testmalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	222;"	d	file:
EARGF	inc/args.h	95;"	d
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENVGENSHIFT	kern/env.c	20;"	d	file:
ENVX	inc/env.h	31;"	d
ENV_CREATE	kern/env.h	36;"	d
ENV_CREATE2	kern/env.h	31;"	d
ENV_FREE	inc/env.h	34;"	d
ENV_NOT_RUNNABLE	inc/env.h	36;"	d
ENV_PRIO_HIGHEST	inc/env.h	38;"	d
ENV_PRIO_LOWEST	inc/env.h	39;"	d
ENV_RUNNABLE	inc/env.h	35;"	d
EXTPHYSMEM	inc/memlayout.h	88;"	d
E_BAD_ENV	inc/error.h	8;"	d
E_BAD_PATH	inc/error.h	23;"	d
E_EOF	inc/error.h	17;"	d
E_FAULT	inc/error.h	14;"	d
E_FILE_EXISTS	inc/error.h	24;"	d
E_INVAL	inc/error.h	10;"	d
E_IPC_NOT_RECV	inc/error.h	16;"	d
E_MAX_OPEN	inc/error.h	21;"	d
E_NOT_EXEC	inc/error.h	25;"	d
E_NOT_FOUND	inc/error.h	22;"	d
E_NO_DISK	inc/error.h	20;"	d
E_NO_FREE_ENV	inc/error.h	12;"	d
E_NO_MEM	inc/error.h	11;"	d
E_UNSPECIFIED	inc/error.h	7;"	d
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
FDTABLE	lib/fd.c	10;"	d	file:
FEC_PR	inc/mmu.h	125;"	d
FEC_U	inc/mmu.h	127;"	d
FEC_WR	inc/mmu.h	126;"	d
FILEBASE	lib/fd.c	8;"	d	file:
FILEVA	fs/serv.c	23;"	d	file:
FL_AC	inc/mmu.h	119;"	d
FL_AF	inc/mmu.h	104;"	d
FL_CF	inc/mmu.h	102;"	d
FL_DF	inc/mmu.h	109;"	d
FL_ID	inc/mmu.h	122;"	d
FL_IF	inc/mmu.h	108;"	d
FL_IOPL_0	inc/mmu.h	112;"	d
FL_IOPL_1	inc/mmu.h	113;"	d
FL_IOPL_2	inc/mmu.h	114;"	d
FL_IOPL_3	inc/mmu.h	115;"	d
FL_IOPL_MASK	inc/mmu.h	111;"	d
FL_NT	inc/mmu.h	116;"	d
FL_OF	inc/mmu.h	110;"	d
FL_PF	inc/mmu.h	103;"	d
FL_RF	inc/mmu.h	117;"	d
FL_SF	inc/mmu.h	106;"	d
FL_TF	inc/mmu.h	107;"	d
FL_VIF	inc/mmu.h	120;"	d
FL_VIP	inc/mmu.h	121;"	d
FL_VM	inc/mmu.h	118;"	d
FL_ZF	inc/mmu.h	105;"	d
FSREQ_CLOSE	inc/fs.h	71;"	d
FSREQ_DIRTY	inc/fs.h	72;"	d
FSREQ_MAP	inc/fs.h	69;"	d
FSREQ_OPEN	inc/fs.h	68;"	d
FSREQ_REMOVE	inc/fs.h	73;"	d
FSREQ_SET_SIZE	inc/fs.h	70;"	d
FSREQ_SYNC	inc/fs.h	74;"	d
FS_MAGIC	inc/fs.h	58;"	d
FTYPE_DIR	inc/fs.h	53;"	d
FTYPE_REG	inc/fs.h	52;"	d
FVA	user/testfsipc.c	14;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
File	fs/fsformat.c	/^typedef struct File File;$/;"	t	typeref:struct:File	file:
File	inc/fs.h	/^struct File {$/;"	s
Fsreq_close	inc/fs.h	/^struct Fsreq_close {$/;"	s
Fsreq_dirty	inc/fs.h	/^struct Fsreq_dirty {$/;"	s
Fsreq_map	inc/fs.h	/^struct Fsreq_map {$/;"	s
Fsreq_open	inc/fs.h	/^struct Fsreq_open {$/;"	s
Fsreq_remove	inc/fs.h	/^struct Fsreq_remove {$/;"	s
Fsreq_set_size	inc/fs.h	/^struct Fsreq_set_size {$/;"	s
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GD_KD	inc/memlayout.h	17;"	d
GD_KT	inc/memlayout.h	16;"	d
GD_TSS	inc/memlayout.h	20;"	d
GD_UD	inc/memlayout.h	19;"	d
GD_UT	inc/memlayout.h	18;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/bochs.img $(OBJDIR)\/fs\/fs.img$/;"	m
INDEX2DATA	lib/fd.c	15;"	d	file:
INDEX2FD	lib/fd.c	13;"	d	file:
IOM_BEGIN	inc/isareg.h	125;"	d
IOM_END	inc/isareg.h	126;"	d
IOM_SIZE	inc/isareg.h	127;"	d
IOPHYSMEM	inc/memlayout.h	87;"	d
IO_AHA0	inc/isareg.h	63;"	d
IO_AHA1	inc/isareg.h	66;"	d
IO_BMS1	inc/isareg.h	46;"	d
IO_BMS2	inc/isareg.h	45;"	d
IO_BT0	inc/isareg.h	62;"	d
IO_BT1	inc/isareg.h	65;"	d
IO_CGA	inc/isareg.h	82;"	d
IO_CGASIZE	inc/isareg.h	103;"	d
IO_COM1	inc/isareg.h	88;"	d
IO_COM2	inc/isareg.h	58;"	d
IO_COM3	inc/isareg.h	86;"	d
IO_COM4	inc/isareg.h	54;"	d
IO_COMSIZE	inc/isareg.h	102;"	d
IO_DMA1	inc/isareg.h	18;"	d
IO_DMA2	inc/isareg.h	29;"	d
IO_DMAPG	inc/isareg.h	27;"	d
IO_DMASIZE	inc/isareg.h	104;"	d
IO_DPGSIZE	inc/isareg.h	105;"	d
IO_FD1	inc/isareg.h	87;"	d
IO_FD2	inc/isareg.h	74;"	d
IO_FDCSIZE	inc/isareg.h	106;"	d
IO_GAME	inc/isareg.h	41;"	d
IO_GAMSIZE	inc/isareg.h	108;"	d
IO_ICU1	inc/isareg.h	19;"	d
IO_ICU2	inc/isareg.h	28;"	d
IO_ICUSIZE	inc/isareg.h	109;"	d
IO_ISABEGIN	inc/isareg.h	15;"	d
IO_ISAEND	inc/isareg.h	90;"	d
IO_ISASIZES	inc/isareg.h	100;"	d
IO_KBD	inc/isareg.h	23;"	d
IO_KBDSIZE	inc/isareg.h	110;"	d
IO_LPT1	inc/isareg.h	75;"	d
IO_LPT2	inc/isareg.h	50;"	d
IO_LPT3	inc/isareg.h	80;"	d
IO_LPTSIZE	inc/isareg.h	111;"	d
IO_MDA	inc/isareg.h	79;"	d
IO_MDASIZE	inc/isareg.h	112;"	d
IO_NMI	inc/isareg.h	26;"	d
IO_NPX	inc/isareg.h	30;"	d
IO_NPXSIZE	inc/isareg.h	115;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_PMP1	inc/isareg.h	20;"	d
IO_PMP2	inc/isareg.h	36;"	d
IO_PMPSIZE	inc/isareg.h	117;"	d
IO_PPI	inc/isareg.h	24;"	d
IO_RTC	inc/isareg.h	25;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTCSIZE	inc/isareg.h	113;"	d
IO_TIMER1	inc/isareg.h	21;"	d
IO_TIMER2	inc/isareg.h	22;"	d
IO_TMRSIZE	inc/isareg.h	114;"	d
IO_UHA0	inc/isareg.h	64;"	d
IO_VGA	inc/isareg.h	81;"	d
IO_VGASIZE	inc/isareg.h	116;"	d
IO_WD1	inc/isareg.h	40;"	d
IO_WD2	inc/isareg.h	35;"	d
IO_WDCSIZE	inc/isareg.h	107;"	d
IO_WDS	inc/isareg.h	70;"	d
IRQ_ERROR	inc/trap.h	36;"	d
IRQ_IDE	inc/trap.h	35;"	d
IRQ_KBD	inc/trap.h	34;"	d
IRQ_OFFSET	kern/picirq.h	16;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	37;"	d
IRQ_TIMER	inc/trap.h	33;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MALLOC_H	inc/malloc.h	2;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_QUEUE_H	inc/queue.h	36;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	27;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_MULTIENV	kern/env.h	11;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	29;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	82;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	95;"	d
KSTKSIZE	inc/memlayout.h	96;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=6$/;"	m
LABADJUST	GNUmakefile	/^LABADJUST := 0$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP := .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LIST_EMPTY	inc/queue.h	142;"	d
LIST_ENTRY	inc/queue.h	129;"	d
LIST_FIRST	inc/queue.h	147;"	d
LIST_FOREACH	inc/queue.h	160;"	d
LIST_HEAD	inc/queue.h	109;"	d
LIST_HEAD_INITIALIZER	inc/queue.h	118;"	d
LIST_INIT	inc/queue.h	168;"	d
LIST_INSERT_AFTER	inc/queue.h	177;"	d
LIST_INSERT_BEFORE	inc/queue.h	190;"	d
LIST_INSERT_HEAD	inc/queue.h	201;"	d
LIST_NEXT	inc/queue.h	153;"	d
LIST_REMOVE	inc/queue.h	212;"	d
LOG2NENV	inc/env.h	29;"	d
MAX	inc/types.h	48;"	d
MAXARGS	kern/monitor.c	300;"	d	file:
MAXARGS	obj/kern/kernel.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	27;"	d
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	26;"	d
MAXMALLOC	lib/malloc.c	/^	MAXMALLOC = 1024*1024	\/* max size of one allocated chunk *\/$/;"	e	enum:__anon5	file:
MAXNAMELEN	inc/fs.h	16;"	d
MAXOPEN	fs/serv.c	22;"	d	file:
MAXPATHLEN	inc/fs.h	19;"	d
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	42;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (MULTIBOOT_MEMORY_INFO | MULTIBOOT_PAGE_ALIGN)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
MULTIBOOT_MEMORY_INFO	kern/entry.S	/^#define MULTIBOOT_MEMORY_INFO (1<<1)$/;"	d
MULTIBOOT_PAGE_ALIGN	kern/entry.S	/^#define MULTIBOOT_PAGE_ALIGN  (1<<0)$/;"	d
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	47;"	d	file:
NDIRECT	inc/fs.h	22;"	d
NENV	inc/env.h	30;"	d
NINDIRECT	inc/fs.h	24;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	212;"	d	file:
NPDENTRIES	inc/mmu.h	47;"	d
NPTENTRIES	inc/mmu.h	48;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon3
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	219;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
O_ACCMODE	inc/lib.h	133;"	d
O_CREAT	inc/lib.h	135;"	d
O_EXCL	inc/lib.h	137;"	d
O_MKDIR	inc/lib.h	138;"	d
O_RDONLY	inc/lib.h	130;"	d
O_RDWR	inc/lib.h	132;"	d
O_TRUNC	inc/lib.h	136;"	d
O_WRONLY	inc/lib.h	131;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Mon Nov 19 20:24:47 EST 2007$/;"	m
PADDR	kern/pmap.h	19;"	d
PDX	inc/mmu.h	34;"	d
PDXSHIFT	inc/mmu.h	57;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	130;"	d
PGADDR	inc/mmu.h	44;"	d
PGOFF	inc/mmu.h	41;"	d
PGSHIFT	inc/mmu.h	51;"	d
PGSIZE	inc/mmu.h	50;"	d
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PPN	inc/mmu.h	30;"	d
PTE_A	inc/mmu.h	65;"	d
PTE_ADDR	inc/mmu.h	78;"	d
PTE_AVAIL	inc/mmu.h	72;"	d
PTE_CONTINUED	lib/malloc.c	23;"	d	file:
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	66;"	d
PTE_MBZ	inc/mmu.h	68;"	d
PTE_P	inc/mmu.h	60;"	d
PTE_PCD	inc/mmu.h	64;"	d
PTE_PS	inc/mmu.h	67;"	d
PTE_PWT	inc/mmu.h	63;"	d
PTE_SHARE	inc/lib.h	78;"	d
PTE_U	inc/mmu.h	62;"	d
PTE_USER	inc/mmu.h	75;"	d
PTE_W	inc/mmu.h	61;"	d
PTSHIFT	inc/mmu.h	54;"	d
PTSIZE	inc/mmu.h	53;"	d
PTX	inc/mmu.h	38;"	d
PTXSHIFT	inc/mmu.h	56;"	d
Page	inc/memlayout.h	/^struct Page {$/;"	s
Page_LIST_entry_t	inc/memlayout.h	/^typedef LIST_ENTRY(Page) Page_LIST_entry_t;$/;"	t
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
REQVA	fs/serv.c	31;"	d	file:
REQVA	obj/fs/fs.asm	/^#define REQVA		0x0ffff000$/;"	d
ROUNDDOWN	inc/types.h	57;"	d
ROUNDUP	inc/types.h	63;"	d
SCROLLLOCK	kern/console.c	220;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	144;"	d
SEG	inc/mmu.h	174;"	d
SEG16	inc/mmu.h	178;"	d
SEG_FAULT	inc/mmu.h	172;"	d
SEG_NULL	inc/mmu.h	141;"	d
SEG_NULL	inc/mmu.h	170;"	d
SETCALLGATE	inc/mmu.h	291;"	d
SETGATE	inc/mmu.h	277;"	d
SETTINGLAB	GNUmakefile	/^SETTINGLAB := true$/;"	m
SHIFT	kern/console.c	214;"	d	file:
SIZEOF_STRUCT_TRAPFRAME	inc/trap.h	90;"	d
SOL	GNUmakefile	/^SOL := 0$/;"	m
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STA_A	inc/mmu.h	191;"	d
STA_C	inc/mmu.h	188;"	d
STA_E	inc/mmu.h	187;"	d
STA_R	inc/mmu.h	190;"	d
STA_W	inc/mmu.h	189;"	d
STA_X	inc/mmu.h	186;"	d
STS_CG16	inc/mmu.h	197;"	d
STS_CG32	inc/mmu.h	203;"	d
STS_IG16	inc/mmu.h	199;"	d
STS_IG32	inc/mmu.h	204;"	d
STS_LDT	inc/mmu.h	195;"	d
STS_T16A	inc/mmu.h	194;"	d
STS_T16B	inc/mmu.h	196;"	d
STS_T32A	inc/mmu.h	201;"	d
STS_T32B	inc/mmu.h	202;"	d
STS_TG	inc/mmu.h	198;"	d
STS_TG16	inc/mmu.h	200;"	d
STS_TG32	inc/mmu.h	205;"	d
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	187;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon3
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon3
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon3
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon3
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon3
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon3
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon3
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon3
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon3
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon3
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon3
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon3
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon3
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon3
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
Super	fs/fsformat.c	/^typedef struct Super Super;$/;"	t	typeref:struct:Super	file:
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TIMER_16BIT	inc/timerreg.h	64;"	d
TIMER_BCD	inc/timerreg.h	65;"	d
TIMER_CNTR0	inc/timerreg.h	48;"	d
TIMER_CNTR1	inc/timerreg.h	49;"	d
TIMER_CNTR2	inc/timerreg.h	50;"	d
TIMER_DIV	inc/timerreg.h	43;"	d
TIMER_FREQ	inc/timerreg.h	42;"	d
TIMER_HWSTROBE	inc/timerreg.h	60;"	d
TIMER_INTTC	inc/timerreg.h	55;"	d
TIMER_LATCH	inc/timerreg.h	61;"	d
TIMER_LSB	inc/timerreg.h	62;"	d
TIMER_MODE	inc/timerreg.h	51;"	d
TIMER_MSB	inc/timerreg.h	63;"	d
TIMER_ONESHOT	inc/timerreg.h	56;"	d
TIMER_RATEGEN	inc/timerreg.h	57;"	d
TIMER_SEL0	inc/timerreg.h	52;"	d
TIMER_SEL1	inc/timerreg.h	53;"	d
TIMER_SEL2	inc/timerreg.h	54;"	d
TIMER_SQWAVE	inc/timerreg.h	58;"	d
TIMER_SWSTROBE	inc/timerreg.h	59;"	d
TOP	GNUmakefile	/^TOP = .$/;"	m
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	109;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	97;"	d
UPAGES	inc/memlayout.h	107;"	d
USED	inc/lib.h	25;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	132;"	d
USTACKTOP	inc/memlayout.h	121;"	d
UTEMP	inc/memlayout.h	127;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	124;"	d
UTOP	inc/memlayout.h	116;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	105;"	d
UXSTACKTOP	inc/memlayout.h	118;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	3;"	d	file:
VPD	inc/mmu.h	35;"	d
VPN	inc/mmu.h	31;"	d
VPT	inc/memlayout.h	94;"	d
WHITESPACE	kern/monitor.c	299;"	d	file:
WHITESPACE	obj/kern/kernel.asm	/^#define WHITESPACE "\\t\\r\\n "$/;"	d
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	186;"	d	file:
_ARGSET	inc/args.h	76;"	d
_ARGUSED	inc/args.h	77;"	d
_BSD_EXTENSION	fs/fsformat.c	5;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
__va_size	inc/stdarg.h	8;"	d
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
_start	kern/entry.S	/^_start:$/;"	l
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testmalloc.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr	obj/fs/fs.asm	/^	addr = diskaddr(blockno);$/;"	d
addr	obj/user/forktree.asm	/^	addr = (void *)(pn * PGSIZE);$/;"	d
addr	obj/user/pingpong.asm	/^	addr = (void *)(pn * PGSIZE);$/;"	d
addr	obj/user/primes.asm	/^	addr = (void *)(pn * PGSIZE);$/;"	d
addr	obj/user/primespipe.asm	/^	addr = (void *)(pn * PGSIZE);$/;"	d
addr	obj/user/sh.asm	/^	addr = (void *)(pn * PGSIZE);$/;"	d
addr	obj/user/testfdsharing.asm	/^	addr = (void *)(pn * PGSIZE);$/;"	d
addr	obj/user/testpipe.asm	/^	addr = (void *)(pn * PGSIZE);$/;"	d
addr	obj/user/testpiperace.asm	/^	addr = (void *)(pn * PGSIZE);$/;"	d
addr	obj/user/testpiperace2.asm	/^	addr = (void *)(pn * PGSIZE);$/;"	d
addr	obj/user/testpteshare.asm	/^	addr = (void *)(pn * PGSIZE);$/;"	d
addr	obj/user/testshell.asm	/^	addr = (void *)(pn * PGSIZE);$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
again	obj/user/sh.asm	/^again:$/;"	l
alloc	obj/fs/fs.asm	/^			alloc = 0;	\/\/ we did not allocate a block$/;"	d
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
alloc_block_num	fs/fs.c	/^alloc_block_num(void)$/;"	f
alloc_range	user/testpmap.c	/^alloc_range(int initaddr, int maxpa, int startn) {$/;"	f
allocfile	fs/fsformat.c	/^allocfile(struct File *dirf, const char *name, struct Block **dirb)$/;"	f
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testmalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testmalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testmalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
argv0	lib/panic.c	/^char *argv0;$/;"	v
argv0	obj/user/cat.asm	/^	argv0 = "cat";$/;"	d
argv0	obj/user/num.asm	/^	argv0 = "num";$/;"	d
argv0	obj/user/primespipe.asm	/^	argv0 = "primespipe";$/;"	d
argv0	obj/user/testpipe.asm	/^	argv0 = "pipereadeof";$/;"	d
argv0	obj/user/testpipe.asm	/^	argv0 = "pipewriteeof";$/;"	d
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
assert	inc/assert.h	14;"	d
bad	obj/boot/boot.asm	/^bad:$/;"	l
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testmalloc.asm	/^			base = 10;$/;"	d
base	obj/user/testmalloc.asm	/^			base = 16;$/;"	d
base	obj/user/testmalloc.asm	/^			base = 8;$/;"	d
base	obj/user/testmalloc.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
basemem	kern/pmap.c	/^static size_t basemem;		\/\/ Amount of base memory (in bytes)$/;"	v	file:
basemem	obj/kern/kernel.asm	/^	basemem = ROUNDDOWN(nvram_read(NVRAM_BASELO)*1024, PGSIZE);$/;"	d
begin_addr	obj/kern/kernel.asm	/^	begin_addr = strtol(argv[1], NULL, 0);$/;"	d
binaryname	lib/libmain.c	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^        binaryname = "fs";$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testmalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
bitmap	fs/fs.c	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = (uint32_t *)diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_dirty	fs/fs.c	/^block_is_dirty(uint32_t blockno)$/;"	f
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
block_is_mapped	fs/fs.c	/^block_is_mapped(uint32_t blockno)$/;"	f
bno	fs/fsformat.c	/^	uint32_t bno;$/;"	m	struct:Block	file:
bno	obj/fs/fs.asm	/^	bno = r;$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	23;"	d	file:
bool	fs/fsformat.c	9;"	d	file:
bool	inc/types.h	/^typedef int bool;$/;"	t
bool	obj/fs/fs.asm	/^bool block_is_free(uint32_t blockno);$/;"	l
bool	obj/fs/fs.asm	/^bool$/;"	l
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n, uint32_t align)$/;"	f	file:
boot_cr3	kern/pmap.c	/^physaddr_t boot_cr3;		\/\/ Physical address of boot time page directory$/;"	v
boot_cr3	obj/kern/kernel.asm	/^	boot_cr3 = PADDR(pgdir);$/;"	d
boot_freemem	kern/pmap.c	/^static char* boot_freemem;	\/\/ Pointer to next byte of free mem   --- char*为什么用来指向地址？$/;"	v	file:
boot_freemem	obj/kern/kernel.asm	/^		boot_freemem = end;$/;"	d
boot_freemem	obj/kern/kernel.asm	/^	boot_freemem = ROUNDUP(boot_freemem, align);$/;"	d
boot_map_segment	kern/pmap.c	/^boot_map_segment(pde_t *pgdir, uintptr_t la, size_t size, physaddr_t pa, int perm)$/;"	f	file:
boot_pgdir	kern/pmap.c	/^pde_t* boot_pgdir;		\/\/ Virtual address of boot time page directory$/;"	v
boot_pgdir	obj/kern/kernel.asm	/^	boot_pgdir = pgdir;$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	fs/fsformat.c	/^	uint8_t buf[BLKSIZE];$/;"	m	struct:Block	file:
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon1	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testmalloc.asm	/^		buf = readline("> ");$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
busy	fs/fsformat.c	/^	uint32_t busy;$/;"	m	struct:Block	file:
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testmalloc.asm	/^		c = getchar();$/;"	d
c	obj/user/testmalloc.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
cache	fs/fsformat.c	/^struct Block cache[16];$/;"	v	typeref:struct:Block
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testmalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/fs/fs.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char char_map(uintptr_t i){$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/ls.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/testmalloc.asm	/^char *$/;"	l
char	obj/user/testmalloc.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char_map	kern/monitor.c	/^char char_map(uintptr_t i){$/;"	f
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_boot_pgdir	kern/pmap.c	/^check_boot_pgdir(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc()$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
check_write_block	fs/fs.c	/^check_write_block(void)$/;"	f
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
close	lib/fd.c	/^close(int fdnum)$/;"	f
close_all	lib/fd.c	/^close_all(void)$/;"	f
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testmalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testmalloc.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testmalloc.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon1	file:
cons_close	lib/console.c	/^cons_close(struct Fd *fd)$/;"	f
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f
cons_read	lib/console.c	/^cons_read(struct Fd *fd, void *vbuf, size_t n, off_t offset)$/;"	f
cons_stat	lib/console.c	/^cons_stat(struct Fd *fd, struct Stat *stat)$/;"	f
cons_write	lib/console.c	/^cons_write(struct Fd *fd, const void *vbuf, size_t n, off_t offset)$/;"	f
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
cont	obj/user/testmalloc.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
continuetest	grade.sh	/^continuetest () {$/;"	f
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] = $/;"	v	file:
curenv	kern/env.c	/^struct Env *curenv = NULL;	        \/\/ The current env$/;"	v	typeref:struct:Env
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = e;$/;"	d
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testmalloc.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon6
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/fsipc.c	4;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^	default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^	default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^	default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testmalloc.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len, off_t offset);$/;"	m	struct:Dev
dev_seek	inc/fd.h	/^	int (*dev_seek)(struct Fd *fd, off_t pos);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len, off_t offset);$/;"	m	struct:Dev
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testmalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testmalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testmalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f
diskaddr	fs/fs.c	/^diskaddr(uint32_t blockno)$/;"	f
diskfd	fs/fsformat.c	/^int diskfd;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testmalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
duplicate_range	user/testpmap.c	/^duplicate_range(int startva, int dupeva, int nbytes) {$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)(*ebp);$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = *(uint32_t *) ebp;  \/\/ get caller$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_n	grade.sh	/^echo_n () {$/;"	f
echocmds	obj/user/sh.asm	/^		echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testmalloc.asm	/^	echoing = iscons(0);$/;"	d
eip	obj/kern/kernel.asm	/^		eip = ebp[1];$/;"	d
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
end_addr	obj/kern/kernel.asm	/^	end_addr = strtol(argv[2], NULL, 0);$/;"	d
end_va	obj/boot/boot.asm	/^	end_va = va + count;$/;"	d
env	lib/libmain.c	/^volatile struct Env *env;$/;"	v	typeref:struct:Env
env	obj/fs/fs.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/cat.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/echo.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/forktree.asm	/^		env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/forktree.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/icode.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/idle.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/init.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/ls.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/lsfd.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/num.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/pingpong.asm	/^		env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/pingpong.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/primes.asm	/^		env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/primes.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/primespipe.asm	/^		env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/primespipe.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/sh.asm	/^		env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/sh.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testfdsharing.asm	/^		env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testfdsharing.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testkbd.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testmalloc.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testpipe.asm	/^		env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testpipe.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testpiperace.asm	/^		env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testpiperace.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testpiperace2.asm	/^		env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testpiperace2.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testpteshare.asm	/^		env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testpteshare.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testshell.asm	/^		env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testshell.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cr3	inc/env.h	/^	physaddr_t env_cr3;		\/\/ Physical address of page dir$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, size_t size)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e) $/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env_list env_free_list;	\/\/ Free list$/;"	v	typeref:struct:Env_list	file:
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ va at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender	$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ data value sent to us $/;"	m	struct:Env
env_link	inc/env.h	/^	LIST_ENTRY(Env) env_link;	\/\/ Free list link pointers$/;"	m	struct:Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
envid	obj/user/forktree.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/pingpong.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/primes.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/primespipe.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/sh.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testfdsharing.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testpipe.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testpiperace.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testpiperace2.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testpteshare.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testshell.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testmalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = boot_alloc(NENV * sizeof(struct Env), PGSIZE);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
eph	obj/user/icode.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
eph	obj/user/init.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
eph	obj/user/sh.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
eph	obj/user/testpteshare.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
eph	obj/user/testshell.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testmalloc.asm	/^				err = -err;$/;"	d
err	obj/user/testmalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testmalloc.asm	/^    err:$/;"	l
err	obj/user/testmalloc.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testmalloc.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testmalloc.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testmalloc.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR + 1] =$/;"	v	file:
exit	lib/exit.c	/^exit(void)$/;"	f
extmem	kern/pmap.c	/^static size_t extmem;		\/\/ Amount of extended memory (in bytes)$/;"	v	file:
extmem	obj/kern/kernel.asm	/^	extmem = ROUNDDOWN(nvram_read(NVRAM_EXTLO)*1024, PGSIZE);$/;"	d
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start-0xc>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 03 00    	add    0x31bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fb                   	sti    $/;"	l
f0100009	obj/kern/kernel.asm	/^f0100009:	4f                   	dec    %edi$/;"	l
f010000a	obj/kern/kernel.asm	/^f010000a:	52                   	push   %edx$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <_start>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	0f 01 15 18 d0 11 00 	lgdtl  0x11d018$/;"	l
f010001c	obj/kern/kernel.asm	/^f010001c:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0100021	obj/kern/kernel.asm	/^f0100021:	8e d8                	mov    %eax,%ds$/;"	l
f0100023	obj/kern/kernel.asm	/^f0100023:	8e c0                	mov    %eax,%es$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	8e d0                	mov    %eax,%ss$/;"	l
f0100027	obj/kern/kernel.asm	/^f0100027:	ea 2e 00 10 f0 08 00 	ljmp   $0x8,$0xf010002e$/;"	l
f010002e	obj/kern/kernel.asm	/^f010002e <relocated>:$/;"	l
f010002e	obj/kern/kernel.asm	/^f010002e:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100033	obj/kern/kernel.asm	/^f0100033:	bc bc cf 11 f0       	mov    $0xf011cfbc,%esp$/;"	l
f0100038	obj/kern/kernel.asm	/^f0100038:	e8 03 00 00 00       	call   f0100040 <i386_init>$/;"	l
f010003d	obj/kern/kernel.asm	/^f010003d <spin>:$/;"	l
f010003d	obj/kern/kernel.asm	/^f010003d:	eb fe                	jmp    f010003d <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <i386_init>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100046	obj/kern/kernel.asm	/^f0100046:	b8 d0 42 21 f0       	mov    $0xf02142d0,%eax$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	2d bd 33 21 f0       	sub    $0xf02133bd,%eax$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	00 $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	c7 04 24 bd 33 21 f0 	movl   $0xf02133bd,(%esp)$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	e8 b8 54 00 00       	call   f0105520 <memset>$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	e8 1b 06 00 00       	call   f0100688 <cons_init>$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	e8 6f 10 00 00       	call   f01010e1 <i386_detect_memory>$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	e8 4d 11 00 00       	call   f01011c4 <i386_vm_init>$/;"	l
f0100077	obj/kern/kernel.asm	/^f0100077:	e8 10 32 00 00       	call   f010328c <env_init>$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	e8 d7 3a 00 00       	call   f0103b58 <idt_init>$/;"	l
f0100081	obj/kern/kernel.asm	/^f0100081:	e8 36 39 00 00       	call   f01039bc <pic_init>$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	e8 e4 38 00 00       	call   f010396f <kclock_init>$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	c7 44 24 04 d2 02 01 	movl   $0x102d2,0x4(%esp)$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	00 $/;"	l
f0100093	obj/kern/kernel.asm	/^f0100093:	c7 04 24 33 fa 12 f0 	movl   $0xf012fa33,(%esp)$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	e8 1f 36 00 00       	call   f01036be <env_create>$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	c7 44 24 04 1b ba 01 	movl   $0x1ba1b,0x4(%esp)$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	00 $/;"	l
f01000a7	obj/kern/kernel.asm	/^f01000a7:	c7 04 24 a2 79 1f f0 	movl   $0xf01f79a2,(%esp)$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	e8 0b 36 00 00       	call   f01036be <env_create>$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	c7 44 24 04 1b 24 01 	movl   $0x1241b,0x4(%esp)$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	00 $/;"	l
f01000bb	obj/kern/kernel.asm	/^f01000bb:	c7 04 24 05 fd 13 f0 	movl   $0xf013fd05,(%esp)$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	e8 f7 35 00 00       	call   f01036be <env_create>$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	e8 db 04 00 00       	call   f01005a7 <kbd_intr>$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 cf 40 00 00       	call   f01041a0 <sched_yield>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1 <_panic>:$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	55                   	push   %ebp$/;"	l
f01000d2	obj/kern/kernel.asm	/^f01000d2:	89 e5                	mov    %esp,%ebp$/;"	l
f01000d4	obj/kern/kernel.asm	/^f01000d4:	53                   	push   %ebx$/;"	l
f01000d5	obj/kern/kernel.asm	/^f01000d5:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01000d8	obj/kern/kernel.asm	/^f01000d8:	83 3d c0 33 21 f0 00 	cmpl   $0x0,0xf02133c0$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	75 40                	jne    f0100121 <_panic+0x50>$/;"	l
f01000e1	obj/kern/kernel.asm	/^f01000e1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01000e4	obj/kern/kernel.asm	/^f01000e4:	a3 c0 33 21 f0       	mov    %eax,0xf02133c0$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000ec	obj/kern/kernel.asm	/^f01000ec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01000f3	obj/kern/kernel.asm	/^f01000f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01000f6	obj/kern/kernel.asm	/^f01000f6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000fa	obj/kern/kernel.asm	/^f01000fa:	c7 04 24 20 5a 10 f0 	movl   $0xf0105a20,(%esp)$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	e8 04 3a 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010010a	obj/kern/kernel.asm	/^f010010a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010010d	obj/kern/kernel.asm	/^f010010d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100110	obj/kern/kernel.asm	/^f0100110:	e8 c2 39 00 00       	call   f0103ad7 <vcprintf>$/;"	l
f0100115	obj/kern/kernel.asm	/^f0100115:	c7 04 24 e0 5b 10 f0 	movl   $0xf0105be0,(%esp)$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	e8 e9 39 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0100128	obj/kern/kernel.asm	/^f0100128:	e8 21 0f 00 00       	call   f010104e <monitor>$/;"	l
f010012d	obj/kern/kernel.asm	/^f010012d:	eb f2                	jmp    f0100121 <_panic+0x50>$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f <_warn>:$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	55                   	push   %ebp$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	89 e5                	mov    %esp,%ebp$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	53                   	push   %ebx$/;"	l
f0100133	obj/kern/kernel.asm	/^f0100133:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100136	obj/kern/kernel.asm	/^f0100136:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100139	obj/kern/kernel.asm	/^f0100139:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010013c	obj/kern/kernel.asm	/^f010013c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	c7 04 24 38 5a 10 f0 	movl   $0xf0105a38,(%esp)$/;"	l
f010014e	obj/kern/kernel.asm	/^f010014e:	e8 b7 39 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010015a	obj/kern/kernel.asm	/^f010015a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	e8 75 39 00 00       	call   f0103ad7 <vcprintf>$/;"	l
f0100162	obj/kern/kernel.asm	/^f0100162:	c7 04 24 e0 5b 10 f0 	movl   $0xf0105be0,(%esp)$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	e8 9c 39 00 00       	call   f0103b0a <cprintf>$/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100171	obj/kern/kernel.asm	/^f0100171:	5b                   	pop    %ebx$/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172:	5d                   	pop    %ebp$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	c3                   	ret    $/;"	l
f0100174	obj/kern/kernel.asm	/^f0100174 <serial_proc_data>:$/;"	l
f0100174	obj/kern/kernel.asm	/^f0100174:	55                   	push   %ebp$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	89 e5                	mov    %esp,%ebp$/;"	l
f0100177	obj/kern/kernel.asm	/^f0100177:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	ec                   	in     (%dx),%al$/;"	l
f010017d	obj/kern/kernel.asm	/^f010017d:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100182	obj/kern/kernel.asm	/^f0100182:	a8 01                	test   $0x1,%al$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	74 09                	je     f010018f <serial_proc_data+0x1b>$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	ec                   	in     (%dx),%al$/;"	l
f010018c	obj/kern/kernel.asm	/^f010018c:	0f b6 d0             	movzbl %al,%edx$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	89 d0                	mov    %edx,%eax$/;"	l
f0100191	obj/kern/kernel.asm	/^f0100191:	5d                   	pop    %ebp$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	c3                   	ret    $/;"	l
f0100193	obj/kern/kernel.asm	/^f0100193 <serial_intr>:$/;"	l
f0100193	obj/kern/kernel.asm	/^f0100193:	55                   	push   %ebp$/;"	l
f0100194	obj/kern/kernel.asm	/^f0100194:	89 e5                	mov    %esp,%ebp$/;"	l
f0100196	obj/kern/kernel.asm	/^f0100196:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199:	83 3d e4 33 21 f0 00 	cmpl   $0x0,0xf02133e4$/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0:	3e 74 0c             	je,pt  f01001af <serial_intr+0x1c>$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	c7 04 24 74 01 10 f0 	movl   $0xf0100174,(%esp)$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	e8 2d 04 00 00       	call   f01005dc <cons_intr>$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	c9                   	leave  $/;"	l
f01001b0	obj/kern/kernel.asm	/^f01001b0:	c3                   	ret    $/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1 <serial_init>:$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	55                   	push   %ebp$/;"	l
f01001b2	obj/kern/kernel.asm	/^f01001b2:	89 e5                	mov    %esp,%ebp$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	53                   	push   %ebx$/;"	l
f01001b5	obj/kern/kernel.asm	/^f01001b5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01001c2	obj/kern/kernel.asm	/^f01001c2:	89 da                	mov    %ebx,%edx$/;"	l
f01001c4	obj/kern/kernel.asm	/^f01001c4:	ee                   	out    %al,(%dx)$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01001c7	obj/kern/kernel.asm	/^f01001c7:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	ee                   	out    %al,(%dx)$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01001d7	obj/kern/kernel.asm	/^f01001d7:	89 ca                	mov    %ecx,%edx$/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9:	ee                   	out    %al,(%dx)$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01001e1	obj/kern/kernel.asm	/^f01001e1:	ee                   	out    %al,(%dx)$/;"	l
f01001e2	obj/kern/kernel.asm	/^f01001e2:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	ee                   	out    %al,(%dx)$/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	b2 fc                	mov    $0xfc,%dl$/;"	l
f01001ec	obj/kern/kernel.asm	/^f01001ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	ee                   	out    %al,(%dx)$/;"	l
f01001f2	obj/kern/kernel.asm	/^f01001f2:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01001f9	obj/kern/kernel.asm	/^f01001f9:	ee                   	out    %al,(%dx)$/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	b2 fd                	mov    $0xfd,%dl$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	ec                   	in     (%dx),%al$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	3c ff                	cmp    $0xff,%al$/;"	l
f01001ff	obj/kern/kernel.asm	/^f01001ff:	0f 95 c0             	setne  %al$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100205	obj/kern/kernel.asm	/^f0100205:	a3 e4 33 21 f0       	mov    %eax,0xf02133e4$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	89 da                	mov    %ebx,%edx$/;"	l
f010020c	obj/kern/kernel.asm	/^f010020c:	ec                   	in     (%dx),%al$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	89 ca                	mov    %ecx,%edx$/;"	l
f010020f	obj/kern/kernel.asm	/^f010020f:	ec                   	in     (%dx),%al$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	83 3d e4 33 21 f0 00 	cmpl   $0x0,0xf02133e4$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217:	3e 74 14             	je,pt  f010022e <serial_init+0x7d>$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	0f b7 05 f8 d5 11 f0 	movzwl 0xf011d5f8,%eax$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100229	obj/kern/kernel.asm	/^f0100229:	e8 1b 38 00 00       	call   f0103a49 <irq_setmask_8259A>$/;"	l
f010022e	obj/kern/kernel.asm	/^f010022e:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	5b                   	pop    %ebx$/;"	l
f0100232	obj/kern/kernel.asm	/^f0100232:	5d                   	pop    %ebp$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	c3                   	ret    $/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234 <delay>:$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	55                   	push   %ebp$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	89 e5                	mov    %esp,%ebp$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	ec                   	in     (%dx),%al$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	ec                   	in     (%dx),%al$/;"	l
f010023e	obj/kern/kernel.asm	/^f010023e:	ec                   	in     (%dx),%al$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	ec                   	in     (%dx),%al$/;"	l
f0100240	obj/kern/kernel.asm	/^f0100240:	5d                   	pop    %ebp$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	c3                   	ret    $/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242 <lpt_putc>:$/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242:	55                   	push   %ebp$/;"	l
f0100243	obj/kern/kernel.asm	/^f0100243:	89 e5                	mov    %esp,%ebp$/;"	l
f0100245	obj/kern/kernel.asm	/^f0100245:	56                   	push   %esi$/;"	l
f0100246	obj/kern/kernel.asm	/^f0100246:	53                   	push   %ebx$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	ba 79 03 00 00       	mov    $0x379,%edx$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	ec                   	in     (%dx),%al$/;"	l
f0100252	obj/kern/kernel.asm	/^f0100252:	84 c0                	test   %al,%al$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	78 1c                	js     f0100272 <lpt_putc+0x30>$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	e8 d4 ff ff ff       	call   f0100234 <delay>$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	89 f2                	mov    %esi,%edx$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	ec                   	in     (%dx),%al$/;"	l
f0100266	obj/kern/kernel.asm	/^f0100266:	84 c0                	test   %al,%al$/;"	l
f0100268	obj/kern/kernel.asm	/^f0100268:	78 08                	js     f0100272 <lpt_putc+0x30>$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	7e e9                	jle    f010025b <lpt_putc+0x19>$/;"	l
f0100272	obj/kern/kernel.asm	/^f0100272:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100277	obj/kern/kernel.asm	/^f0100277:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	ee                   	out    %al,(%dx)$/;"	l
f010027c	obj/kern/kernel.asm	/^f010027c:	b2 7a                	mov    $0x7a,%dl$/;"	l
f010027e	obj/kern/kernel.asm	/^f010027e:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100283	obj/kern/kernel.asm	/^f0100283:	ee                   	out    %al,(%dx)$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289:	ee                   	out    %al,(%dx)$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	5b                   	pop    %ebx$/;"	l
f010028b	obj/kern/kernel.asm	/^f010028b:	5e                   	pop    %esi$/;"	l
f010028c	obj/kern/kernel.asm	/^f010028c:	5d                   	pop    %ebp$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	c3                   	ret    $/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e <cga_init>:$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	55                   	push   %ebp$/;"	l
f010028f	obj/kern/kernel.asm	/^f010028f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100291	obj/kern/kernel.asm	/^f0100291:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010029b	obj/kern/kernel.asm	/^f010029b:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	5a a5 $/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01002bf	obj/kern/kernel.asm	/^f01002bf:	74 10                	je     f01002d1 <cga_init+0x43>$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	66 be 00 00          	mov    $0x0,%si$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	c7 05 e8 33 21 f0 b4 	movl   $0x3b4,0xf02133e8$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	03 00 00 $/;"	l
f01002cf	obj/kern/kernel.asm	/^f01002cf:	eb 0d                	jmp    f01002de <cga_init+0x50>$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	66 89 16             	mov    %dx,(%esi)$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	c7 05 e8 33 21 f0 d4 	movl   $0x3d4,0xf02133e8$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	03 00 00 $/;"	l
f01002de	obj/kern/kernel.asm	/^f01002de:	8b 0d e8 33 21 f0    	mov    0xf02133e8,%ecx$/;"	l
f01002e4	obj/kern/kernel.asm	/^f01002e4:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	89 ca                	mov    %ecx,%edx$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	ee                   	out    %al,(%dx)$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	8d 79 01             	lea    0x1(%ecx),%edi$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	89 fa                	mov    %edi,%edx$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	ec                   	in     (%dx),%al$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	89 ca                	mov    %ecx,%edx$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	ee                   	out    %al,(%dx)$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	89 fa                	mov    %edi,%edx$/;"	l
f0100302	obj/kern/kernel.asm	/^f0100302:	ec                   	in     (%dx),%al$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	09 c3                	or     %eax,%ebx$/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308:	89 35 ec 33 21 f0    	mov    %esi,0xf02133ec$/;"	l
f010030e	obj/kern/kernel.asm	/^f010030e:	66 89 1d f0 33 21 f0 	mov    %bx,0xf02133f0$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f0100318	obj/kern/kernel.asm	/^f0100318:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f0100320	obj/kern/kernel.asm	/^f0100320:	89 ec                	mov    %ebp,%esp$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	5d                   	pop    %ebp$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	c3                   	ret    $/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324 <cga_putc>:$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	55                   	push   %ebp$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	89 e5                	mov    %esp,%ebp$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	56                   	push   %esi$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	53                   	push   %ebx$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010032c	obj/kern/kernel.asm	/^f010032c:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	83 e8 30             	sub    $0x30,%eax$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	77 05                	ja     f010033f <cga_putc+0x1b>$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	80 cd 02             	or     $0x2,%ch$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	eb 03                	jmp    f0100342 <cga_putc+0x1e>$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	80 cd 03             	or     $0x3,%ch$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100348	obj/kern/kernel.asm	/^f0100348:	74 7b                	je     f01003c5 <cga_putc+0xa1>$/;"	l
f010034a	obj/kern/kernel.asm	/^f010034a:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010034d	obj/kern/kernel.asm	/^f010034d:	7f 0a                	jg     f0100359 <cga_putc+0x35>$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100352	obj/kern/kernel.asm	/^f0100352:	74 14                	je     f0100368 <cga_putc+0x44>$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	e9 aa 00 00 00       	jmp    f0100403 <cga_putc+0xdf>$/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	74 3d                	je     f010039b <cga_putc+0x77>$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	74 40                	je     f01003a3 <cga_putc+0x7f>$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	e9 9b 00 00 00       	jmp    f0100403 <cga_putc+0xdf>$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	66 83 3d f0 33 21 f0 	cmpw   $0x0,0xf02133f0$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	00 $/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	0f 84 a5 00 00 00    	je     f010041b <cga_putc+0xf7>$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	66 83 2d f0 33 21 f0 	subw   $0x1,0xf02133f0$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	01 $/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	0f b7 05 f0 33 21 f0 	movzwl 0xf02133f0,%eax$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	89 ca                	mov    %ecx,%edx$/;"	l
f0100387	obj/kern/kernel.asm	/^f0100387:	b2 00                	mov    $0x0,%dl$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	83 ca 20             	or     $0x20,%edx$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	8b 0d ec 33 21 f0    	mov    0xf02133ec,%ecx$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	e9 80 00 00 00       	jmp    f010041b <cga_putc+0xf7>$/;"	l
f010039b	obj/kern/kernel.asm	/^f010039b:	66 83 05 f0 33 21 f0 	addw   $0x50,0xf02133f0$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	50 $/;"	l
f01003a3	obj/kern/kernel.asm	/^f01003a3:	0f b7 05 f0 33 21 f0 	movzwl 0xf02133f0,%eax$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	66 c1 e8 06          	shr    $0x6,%ax$/;"	l
f01003b7	obj/kern/kernel.asm	/^f01003b7:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01003ba	obj/kern/kernel.asm	/^f01003ba:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01003bd	obj/kern/kernel.asm	/^f01003bd:	66 a3 f0 33 21 f0    	mov    %ax,0xf02133f0$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	eb 56                	jmp    f010041b <cga_putc+0xf7>$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	e8 97 02 00 00       	call   f0100668 <cons_putc>$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	e8 8b 02 00 00       	call   f0100668 <cons_putc>$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f01003e4	obj/kern/kernel.asm	/^f01003e4:	e8 7f 02 00 00       	call   f0100668 <cons_putc>$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	e8 73 02 00 00       	call   f0100668 <cons_putc>$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	e8 67 02 00 00       	call   f0100668 <cons_putc>$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	eb 18                	jmp    f010041b <cga_putc+0xf7>$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	0f b7 15 f0 33 21 f0 	movzwl 0xf02133f0,%edx$/;"	l
f010040a	obj/kern/kernel.asm	/^f010040a:	a1 ec 33 21 f0       	mov    0xf02133ec,%eax$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	66 89 0c 50          	mov    %cx,(%eax,%edx,2)$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	66 83 05 f0 33 21 f0 	addw   $0x1,0xf02133f0$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	01 $/;"	l
f010041b	obj/kern/kernel.asm	/^f010041b:	66 81 3d f0 33 21 f0 	cmpw   $0x7cf,0xf02133f0$/;"	l
f0100422	obj/kern/kernel.asm	/^f0100422:	cf 07 $/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	3e 76 43             	jbe,pt f010046a <cga_putc+0x146>$/;"	l
f0100427	obj/kern/kernel.asm	/^f0100427:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	00 $/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	8b 15 ec 33 21 f0    	mov    0xf02133ec,%edx$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	8d 82 a0 00 00 00    	lea    0xa0(%edx),%eax$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	e8 fc 50 00 00       	call   f0105543 <memmove>$/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	ba 80 07 00 00       	mov    $0x780,%edx$/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	a1 ec 33 21 f0       	mov    0xf02133ec,%eax$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	66 c7 04 50 20 07    	movw   $0x720,(%eax,%edx,2)$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	83 c2 01             	add    $0x1,%edx$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	81 fa cf 07 00 00    	cmp    $0x7cf,%edx$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	7e ea                	jle    f010044c <cga_putc+0x128>$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	66 83 2d f0 33 21 f0 	subw   $0x50,0xf02133f0$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	50 $/;"	l
f010046a	obj/kern/kernel.asm	/^f010046a:	8b 1d e8 33 21 f0    	mov    0xf02133e8,%ebx$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	89 da                	mov    %ebx,%edx$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	ee                   	out    %al,(%dx)$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f010047b	obj/kern/kernel.asm	/^f010047b:	0f b7 0d f0 33 21 f0 	movzwl 0xf02133f0,%ecx$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	89 c8                	mov    %ecx,%eax$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	89 f2                	mov    %esi,%edx$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	ee                   	out    %al,(%dx)$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	89 da                	mov    %ebx,%edx$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	ee                   	out    %al,(%dx)$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	89 c8                	mov    %ecx,%eax$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	89 f2                	mov    %esi,%edx$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	ee                   	out    %al,(%dx)$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	83 c4 10             	add    $0x10,%esp$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	5b                   	pop    %ebx$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	5e                   	pop    %esi$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	5d                   	pop    %ebp$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	c3                   	ret    $/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f <kbd_proc_data>:$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	55                   	push   %ebp$/;"	l
f01004a0	obj/kern/kernel.asm	/^f01004a0:	89 e5                	mov    %esp,%ebp$/;"	l
f01004a2	obj/kern/kernel.asm	/^f01004a2:	53                   	push   %ebx$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	ec                   	in     (%dx),%al$/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	a8 01                	test   $0x1,%al$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	0f 84 e6 00 00 00    	je     f010059f <kbd_proc_data+0x100>$/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	ec                   	in     (%dx),%al$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	89 c2                	mov    %eax,%edx$/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1:	3c e0                	cmp    $0xe0,%al$/;"	l
f01004c3	obj/kern/kernel.asm	/^f01004c3:	3e 75 11             	jne,pt f01004d7 <kbd_proc_data+0x38>$/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6:	83 0d e0 33 21 f0 40 	orl    $0x40,0xf02133e0$/;"	l
f01004cd	obj/kern/kernel.asm	/^f01004cd:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	e9 c8 00 00 00       	jmp    f010059f <kbd_proc_data+0x100>$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	84 c0                	test   %al,%al$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	3e 79 2d             	jns,pt f0100509 <kbd_proc_data+0x6a>$/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc:	f6 05 e0 33 21 f0 40 	testb  $0x40,0xf02133e0$/;"	l
f01004e3	obj/kern/kernel.asm	/^f01004e3:	75 03                	jne    f01004e8 <kbd_proc_data+0x49>$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	80 e2 7f             	and    $0x7f,%dl$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	0f b6 c2             	movzbl %dl,%eax$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	0f b6 80 20 d0 11 f0 	movzbl -0xfee2fe0(%eax),%eax$/;"	l
f01004f2	obj/kern/kernel.asm	/^f01004f2:	0c 40                	or     $0x40,%al$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01004f7	obj/kern/kernel.asm	/^f01004f7:	f7 d0                	not    %eax$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	21 05 e0 33 21 f0    	and    %eax,0xf02133e0$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	e9 96 00 00 00       	jmp    f010059f <kbd_proc_data+0x100>$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	a1 e0 33 21 f0       	mov    0xf02133e0,%eax$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	a8 40                	test   $0x40,%al$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	74 0b                	je     f010051d <kbd_proc_data+0x7e>$/;"	l
f0100512	obj/kern/kernel.asm	/^f0100512:	80 ca 80             	or     $0x80,%dl$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	a3 e0 33 21 f0       	mov    %eax,0xf02133e0$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	0f b6 ca             	movzbl %dl,%ecx$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	0f b6 81 20 d0 11 f0 	movzbl -0xfee2fe0(%ecx),%eax$/;"	l
f0100527	obj/kern/kernel.asm	/^f0100527:	0b 05 e0 33 21 f0    	or     0xf02133e0,%eax$/;"	l
f010052d	obj/kern/kernel.asm	/^f010052d:	0f b6 91 20 d1 11 f0 	movzbl -0xfee2ee0(%ecx),%edx$/;"	l
f0100534	obj/kern/kernel.asm	/^f0100534:	31 c2                	xor    %eax,%edx$/;"	l
f0100536	obj/kern/kernel.asm	/^f0100536:	89 15 e0 33 21 f0    	mov    %edx,0xf02133e0$/;"	l
f010053c	obj/kern/kernel.asm	/^f010053c:	89 d0                	mov    %edx,%eax$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	83 e0 03             	and    $0x3,%eax$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	8b 04 85 20 d5 11 f0 	mov    -0xfee2ae0(,%eax,4),%eax$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	0f b6 1c 08          	movzbl (%eax,%ecx,1),%ebx$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	f6 c2 08             	test   $0x8,%dl$/;"	l
f010054f	obj/kern/kernel.asm	/^f010054f:	74 18                	je     f0100569 <kbd_proc_data+0xca>$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	8d 43 9f             	lea    -0x61(%ebx),%eax$/;"	l
f0100554	obj/kern/kernel.asm	/^f0100554:	83 f8 19             	cmp    $0x19,%eax$/;"	l
f0100557	obj/kern/kernel.asm	/^f0100557:	77 05                	ja     f010055e <kbd_proc_data+0xbf>$/;"	l
f0100559	obj/kern/kernel.asm	/^f0100559:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	eb 0b                	jmp    f0100569 <kbd_proc_data+0xca>$/;"	l
f010055e	obj/kern/kernel.asm	/^f010055e:	8d 43 bf             	lea    -0x41(%ebx),%eax$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	83 f8 19             	cmp    $0x19,%eax$/;"	l
f0100564	obj/kern/kernel.asm	/^f0100564:	77 03                	ja     f0100569 <kbd_proc_data+0xca>$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0100569	obj/kern/kernel.asm	/^f0100569:	a1 e0 33 21 f0       	mov    0xf02133e0,%eax$/;"	l
f010056e	obj/kern/kernel.asm	/^f010056e:	f7 d0                	not    %eax$/;"	l
f0100570	obj/kern/kernel.asm	/^f0100570:	a8 06                	test   $0x6,%al$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	0f 94 c0             	sete   %al$/;"	l
f0100575	obj/kern/kernel.asm	/^f0100575:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f010057b	obj/kern/kernel.asm	/^f010057b:	0f 94 c2             	sete   %dl$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	85 d0                	test   %edx,%eax$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	3e 74 17             	je,pt  f010059d <kbd_proc_data+0xfe>$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	c7 04 24 52 5a 10 f0 	movl   $0xf0105a52,(%esp)$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	e8 78 35 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010059c	obj/kern/kernel.asm	/^f010059c:	ee                   	out    %al,(%dx)$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	89 da                	mov    %ebx,%edx$/;"	l
f010059f	obj/kern/kernel.asm	/^f010059f:	89 d0                	mov    %edx,%eax$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	83 c4 04             	add    $0x4,%esp$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	5b                   	pop    %ebx$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	5d                   	pop    %ebp$/;"	l
f01005a6	obj/kern/kernel.asm	/^f01005a6:	c3                   	ret    $/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7 <kbd_intr>:$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	55                   	push   %ebp$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	89 e5                	mov    %esp,%ebp$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	c7 04 24 9f 04 10 f0 	movl   $0xf010049f,(%esp)$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	e8 23 00 00 00       	call   f01005dc <cons_intr>$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	c9                   	leave  $/;"	l
f01005ba	obj/kern/kernel.asm	/^f01005ba:	c3                   	ret    $/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb <kbd_init>:$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	55                   	push   %ebp$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	89 e5                	mov    %esp,%ebp$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	e8 e1 ff ff ff       	call   f01005a7 <kbd_intr>$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	0f b7 05 f8 d5 11 f0 	movzwl 0xf011d5f8,%eax$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01005d5	obj/kern/kernel.asm	/^f01005d5:	e8 6f 34 00 00       	call   f0103a49 <irq_setmask_8259A>$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	c9                   	leave  $/;"	l
f01005db	obj/kern/kernel.asm	/^f01005db:	c3                   	ret    $/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc <cons_intr>:$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	55                   	push   %ebp$/;"	l
f01005dd	obj/kern/kernel.asm	/^f01005dd:	89 e5                	mov    %esp,%ebp$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	53                   	push   %ebx$/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	eb 2a                	jmp    f0100612 <cons_intr+0x36>$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	85 d2                	test   %edx,%edx$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	3e 74 25             	je,pt  f0100612 <cons_intr+0x36>$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	a1 04 36 21 f0       	mov    0xf0213604,%eax$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	88 90 00 34 21 f0    	mov    %dl,-0xfdecc00(%eax)$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	a3 04 36 21 f0       	mov    %eax,0xf0213604$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f0100605	obj/kern/kernel.asm	/^f0100605:	3e 75 0a             	jne,pt f0100612 <cons_intr+0x36>$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	c7 05 04 36 21 f0 00 	movl   $0x0,0xf0213604$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	00 00 00 $/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	ff d3                	call   *%ebx$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	89 c2                	mov    %eax,%edx$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	75 cd                	jne    f01005e8 <cons_intr+0xc>$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	83 c4 04             	add    $0x4,%esp$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	5b                   	pop    %ebx$/;"	l
f010061f	obj/kern/kernel.asm	/^f010061f:	5d                   	pop    %ebp$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	c3                   	ret    $/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621 <cons_getc>:$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	55                   	push   %ebp$/;"	l
f0100622	obj/kern/kernel.asm	/^f0100622:	89 e5                	mov    %esp,%ebp$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	e8 67 fb ff ff       	call   f0100193 <serial_intr>$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	e8 76 ff ff ff       	call   f01005a7 <kbd_intr>$/;"	l
f0100631	obj/kern/kernel.asm	/^f0100631:	a1 00 36 21 f0       	mov    0xf0213600,%eax$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010063b	obj/kern/kernel.asm	/^f010063b:	3b 05 04 36 21 f0    	cmp    0xf0213604,%eax$/;"	l
f0100641	obj/kern/kernel.asm	/^f0100641:	74 21                	je     f0100664 <cons_getc+0x43>$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	0f b6 90 00 34 21 f0 	movzbl -0xfdecc00(%eax),%edx$/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	a3 00 36 21 f0       	mov    %eax,0xf0213600$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	3e 75 0a             	jne,pt f0100664 <cons_getc+0x43>$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	c7 05 00 36 21 f0 00 	movl   $0x0,0xf0213600$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	00 00 00 $/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	89 d0                	mov    %edx,%eax$/;"	l
f0100666	obj/kern/kernel.asm	/^f0100666:	c9                   	leave  $/;"	l
f0100667	obj/kern/kernel.asm	/^f0100667:	c3                   	ret    $/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668 <cons_putc>:$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	55                   	push   %ebp$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	89 e5                	mov    %esp,%ebp$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	53                   	push   %ebx$/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	e8 c8 fb ff ff       	call   f0100242 <lpt_putc>$/;"	l
f010067a	obj/kern/kernel.asm	/^f010067a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	e8 a2 fc ff ff       	call   f0100324 <cga_putc>$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100685	obj/kern/kernel.asm	/^f0100685:	5b                   	pop    %ebx$/;"	l
f0100686	obj/kern/kernel.asm	/^f0100686:	5d                   	pop    %ebp$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	c3                   	ret    $/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688 <cons_init>:$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	55                   	push   %ebp$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	89 e5                	mov    %esp,%ebp$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	e8 fb fb ff ff       	call   f010028e <cga_init>$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	e8 23 ff ff ff       	call   f01005bb <kbd_init>$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	e8 14 fb ff ff       	call   f01001b1 <serial_init>$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	83 3d e4 33 21 f0 00 	cmpl   $0x0,0xf02133e4$/;"	l
f01006a4	obj/kern/kernel.asm	/^f01006a4:	3e 75 0c             	jne,pt f01006b3 <cons_init+0x2b>$/;"	l
f01006a7	obj/kern/kernel.asm	/^f01006a7:	c7 04 24 5e 5a 10 f0 	movl   $0xf0105a5e,(%esp)$/;"	l
f01006ae	obj/kern/kernel.asm	/^f01006ae:	e8 57 34 00 00       	call   f0103b0a <cprintf>$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	c9                   	leave  $/;"	l
f01006b4	obj/kern/kernel.asm	/^f01006b4:	c3                   	ret    $/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5 <cputchar>:$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	55                   	push   %ebp$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01006be	obj/kern/kernel.asm	/^f01006be:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	e8 a2 ff ff ff       	call   f0100668 <cons_putc>$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	c9                   	leave  $/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	c3                   	ret    $/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8 <getchar>:$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	55                   	push   %ebp$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	e8 4e ff ff ff       	call   f0100621 <cons_getc>$/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3:	85 c0                	test   %eax,%eax$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	74 f7                	je     f01006ce <getchar+0x6>$/;"	l
f01006d7	obj/kern/kernel.asm	/^f01006d7:	c9                   	leave  $/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	c3                   	ret    $/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9 <iscons>:$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	55                   	push   %ebp$/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	89 e5                	mov    %esp,%ebp$/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	5d                   	pop    %ebp$/;"	l
f01006e2	obj/kern/kernel.asm	/^f01006e2:	c3                   	ret    $/;"	l
f01006e4	obj/kern/kernel.asm	/^f01006e4 <mon_help>:$/;"	l
f01006e4	obj/kern/kernel.asm	/^f01006e4:	55                   	push   %ebp$/;"	l
f01006e5	obj/kern/kernel.asm	/^f01006e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	53                   	push   %ebx$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01006eb	obj/kern/kernel.asm	/^f01006eb:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f01006f3	obj/kern/kernel.asm	/^f01006f3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01006f6	obj/kern/kernel.asm	/^f01006f6:	8b 90 44 d5 11 f0    	mov    -0xfee2abc(%eax),%edx$/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	8b 80 40 d5 11 f0    	mov    -0xfee2ac0(%eax),%eax$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	c7 04 24 58 5b 10 f0 	movl   $0xf0105b58,(%esp)$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	e8 f4 33 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	76 d2                	jbe    f01006f0 <mon_help+0xc>$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	5b                   	pop    %ebx$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	5d                   	pop    %ebp$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	c3                   	ret    $/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729 <mon_kerninfo>:$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	55                   	push   %ebp$/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a:	89 e5                	mov    %esp,%ebp$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	c7 04 24 61 5b 10 f0 	movl   $0xf0105b61,(%esp)$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	e8 cf 33 00 00       	call   f0103b0a <cprintf>$/;"	l
f010073b	obj/kern/kernel.asm	/^f010073b:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	00 $/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	f0 $/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	c7 04 24 3c 5d 10 f0 	movl   $0xf0105d3c,(%esp)$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	e8 b3 33 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100757	obj/kern/kernel.asm	/^f0100757:	c7 44 24 08 08 5a 10 	movl   $0x105a08,0x8(%esp)$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	00 $/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	c7 44 24 04 08 5a 10 	movl   $0xf0105a08,0x4(%esp)$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	f0 $/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	c7 04 24 60 5d 10 f0 	movl   $0xf0105d60,(%esp)$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	e8 97 33 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	c7 44 24 08 bd 33 21 	movl   $0x2133bd,0x8(%esp)$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	00 $/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	c7 44 24 04 bd 33 21 	movl   $0xf02133bd,0x4(%esp)$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	f0 $/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	c7 04 24 84 5d 10 f0 	movl   $0xf0105d84,(%esp)$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	e8 7b 33 00 00       	call   f0103b0a <cprintf>$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	c7 44 24 08 d0 42 21 	movl   $0x2142d0,0x8(%esp)$/;"	l
f0100796	obj/kern/kernel.asm	/^f0100796:	00 $/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	c7 44 24 04 d0 42 21 	movl   $0xf02142d0,0x4(%esp)$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	f0 $/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	c7 04 24 a8 5d 10 f0 	movl   $0xf0105da8,(%esp)$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	e8 5f 33 00 00       	call   f0103b0a <cprintf>$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	b8 cf 46 21 f0       	mov    $0xf02146cf,%eax$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	3e 79 05             	jns,pt f01007bd <mon_kerninfo+0x94>$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	05 ff 03 00 00       	add    $0x3ff,%eax$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	c7 04 24 cc 5d 10 f0 	movl   $0xf0105dcc,(%esp)$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	e8 3a 33 00 00       	call   f0103b0a <cprintf>$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	c9                   	leave  $/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	c3                   	ret    $/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7 <mon_backtrace>:$/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7:	55                   	push   %ebp$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	57                   	push   %edi$/;"	l
f01007db	obj/kern/kernel.asm	/^f01007db:	56                   	push   %esi$/;"	l
f01007dc	obj/kern/kernel.asm	/^f01007dc:	53                   	push   %ebx$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	81 ec 8c 00 00 00    	sub    $0x8c,%esp$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	c7 04 24 7a 5b 10 f0 	movl   $0xf0105b7a,(%esp)$/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	e8 1b 33 00 00       	call   f0103b0a <cprintf>$/;"	l
f01007ef	obj/kern/kernel.asm	/^f01007ef:	89 eb                	mov    %ebp,%ebx$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	e8 ad 08 00 00       	call   f01010a3 <read_eip>$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	89 c6                	mov    %eax,%esi$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	85 db                	test   %ebx,%ebx$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	0f 84 9b 00 00 00    	je     f010089b <mon_backtrace+0xc4>$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	8d 45 88             	lea    -0x78(%ebp),%eax$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	e8 c6 42 00 00       	call   f0104ad8 <debuginfo_eip>$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
f010081c	obj/kern/kernel.asm	/^f010081c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	e8 c6 4b 00 00       	call   f01053ee <strncpy>$/;"	l
f0100828	obj/kern/kernel.asm	/^f0100828:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
f010082b	obj/kern/kernel.asm	/^f010082b:	c6 44 05 a8 00       	movb   $0x0,-0x58(%ebp,%eax,1)$/;"	l
f0100830	obj/kern/kernel.asm	/^f0100830:	89 f0                	mov    %esi,%eax$/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	2b 45 98             	sub    -0x68(%ebp),%eax$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
f0100840	obj/kern/kernel.asm	/^f0100840:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b:	c7 04 24 8b 5b 10 f0 	movl   $0xf0105b8b,(%esp)$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	e8 b3 32 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100857	obj/kern/kernel.asm	/^f0100857:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0100868	obj/kern/kernel.asm	/^f0100868:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	c7 04 24 f8 5d 10 f0 	movl   $0xf0105df8,(%esp)$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	e8 7c 32 00 00       	call   f0103b0a <cprintf>$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	8b 73 04             	mov    0x4(%ebx),%esi$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	85 db                	test   %ebx,%ebx$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	0f 85 68 ff ff ff    	jne    f0100803 <mon_backtrace+0x2c>$/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	81 c4 8c 00 00 00    	add    $0x8c,%esp$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	5b                   	pop    %ebx$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	5e                   	pop    %esi$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	5f                   	pop    %edi$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	5d                   	pop    %ebp$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	c3                   	ret    $/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab <char_map>:$/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	55                   	push   %ebp$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	89 e5                	mov    %esp,%ebp$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	19 c0                	sbb    %eax,%eax$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	83 c0 31             	add    $0x31,%eax$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	5d                   	pop    %ebp$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	c3                   	ret    $/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9 <mon_show_map>:$/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	55                   	push   %ebp$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	89 e5                	mov    %esp,%ebp$/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc:	57                   	push   %edi$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	56                   	push   %esi$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	53                   	push   %ebx$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	74 16                	je     f01008e1 <mon_show_map+0x28>$/;"	l
f01008cb	obj/kern/kernel.asm	/^f01008cb:	c7 04 24 30 5e 10 f0 	movl   $0xf0105e30,(%esp)$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	e8 33 32 00 00       	call   f0103b0a <cprintf>$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008dc	obj/kern/kernel.asm	/^f01008dc:	e9 4d 02 00 00       	jmp    f0100b2e <mon_show_map+0x275>$/;"	l
f01008e1	obj/kern/kernel.asm	/^f01008e1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01008e8	obj/kern/kernel.asm	/^f01008e8:	00 $/;"	l
f01008e9	obj/kern/kernel.asm	/^f01008e9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	00 $/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f01008f4	obj/kern/kernel.asm	/^f01008f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01008f7	obj/kern/kernel.asm	/^f01008f7:	e8 24 4d 00 00       	call   f0105620 <strtol>$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	89 c3                	mov    %eax,%ebx$/;"	l
f01008fe	obj/kern/kernel.asm	/^f01008fe:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100905	obj/kern/kernel.asm	/^f0100905:	00 $/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	00 $/;"	l
f010090e	obj/kern/kernel.asm	/^f010090e:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	e8 07 4d 00 00       	call   f0105620 <strtol>$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	89 c7                	mov    %eax,%edi$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	74 0c                	je     f010092f <mon_show_map+0x76>$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	81 eb 00 10 00 00    	sub    $0x1000,%ebx$/;"	l
f0100929	obj/kern/kernel.asm	/^f0100929:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi$/;"	l
f0100935	obj/kern/kernel.asm	/^f0100935:	74 0c                	je     f0100943 <mon_show_map+0x8a>$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	c7 04 24 84 5e 10 f0 	movl   $0xf0105e84,(%esp)$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	e8 bb 31 00 00       	call   f0103b0a <cprintf>$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	0f 87 d2 01 00 00    	ja     f0100b29 <mon_show_map+0x270>$/;"	l
f0100957	obj/kern/kernel.asm	/^f0100957:	89 d8                	mov    %ebx,%eax$/;"	l
f0100959	obj/kern/kernel.asm	/^f0100959:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	8b 04 85 00 f0 fb ef 	mov    -0x10041000(,%eax,4),%eax$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	a8 01                	test   $0x1,%al$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	3e 75 1c             	jne,pt f0100984 <mon_show_map+0xcb>$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	89 d8                	mov    %ebx,%eax$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	c7 04 24 99 5b 10 f0 	movl   $0xf0105b99,(%esp)$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	e8 8b 31 00 00       	call   f0103b0a <cprintf>$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	e9 97 01 00 00       	jmp    f0100b1b <mon_show_map+0x262>$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	89 da                	mov    %ebx,%edx$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	89 d8                	mov    %ebx,%eax$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0100993	obj/kern/kernel.asm	/^f0100993:	c1 e2 0a             	shl    $0xa,%edx$/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	01 c2                	add    %eax,%edx$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	8b 34 95 00 00 c0 ef 	mov    -0x10400000(,%edx,4),%esi$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f01009a5	obj/kern/kernel.asm	/^f01009a5:	75 1c                	jne    f01009c3 <mon_show_map+0x10a>$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	89 d8                	mov    %ebx,%eax$/;"	l
f01009a9	obj/kern/kernel.asm	/^f01009a9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	c7 04 24 99 5b 10 f0 	movl   $0xf0105b99,(%esp)$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	e8 4c 31 00 00       	call   f0103b0a <cprintf>$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	e9 58 01 00 00       	jmp    f0100b1b <mon_show_map+0x262>$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	89 f0                	mov    %esi,%eax$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01009ca	obj/kern/kernel.asm	/^f01009ca:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	89 d8                	mov    %ebx,%eax$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	c7 04 24 b4 5b 10 f0 	movl   $0xf0105bb4,(%esp)$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	e8 25 31 00 00       	call   f0103b0a <cprintf>$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	89 f0                	mov    %esi,%eax$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	83 e0 01             	and    $0x1,%eax$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	e8 b9 fe ff ff       	call   f01008ab <char_map>$/;"	l
f01009f2	obj/kern/kernel.asm	/^f01009f2:	0f be c0             	movsbl %al,%eax$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	c7 04 24 c4 5b 10 f0 	movl   $0xf0105bc4,(%esp)$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	e8 05 31 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	89 f0                	mov    %esi,%eax$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	83 e0 02             	and    $0x2,%eax$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a0d	obj/kern/kernel.asm	/^f0100a0d:	e8 99 fe ff ff       	call   f01008ab <char_map>$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	c7 04 24 c4 5b 10 f0 	movl   $0xf0105bc4,(%esp)$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	e8 e5 30 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	89 f0                	mov    %esi,%eax$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	83 e0 04             	and    $0x4,%eax$/;"	l
f0100a2a	obj/kern/kernel.asm	/^f0100a2a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	e8 79 fe ff ff       	call   f01008ab <char_map>$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a35	obj/kern/kernel.asm	/^f0100a35:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	c7 04 24 c4 5b 10 f0 	movl   $0xf0105bc4,(%esp)$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	e8 c5 30 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	89 f0                	mov    %esi,%eax$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	83 e0 08             	and    $0x8,%eax$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	e8 59 fe ff ff       	call   f01008ab <char_map>$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	c7 04 24 c8 5b 10 f0 	movl   $0xf0105bc8,(%esp)$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	e8 a5 30 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	89 f0                	mov    %esi,%eax$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	83 e0 10             	and    $0x10,%eax$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a6d	obj/kern/kernel.asm	/^f0100a6d:	e8 39 fe ff ff       	call   f01008ab <char_map>$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a75	obj/kern/kernel.asm	/^f0100a75:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a79	obj/kern/kernel.asm	/^f0100a79:	c7 04 24 c8 5b 10 f0 	movl   $0xf0105bc8,(%esp)$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	e8 85 30 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	89 f0                	mov    %esi,%eax$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	83 e0 20             	and    $0x20,%eax$/;"	l
f0100a8a	obj/kern/kernel.asm	/^f0100a8a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	e8 19 fe ff ff       	call   f01008ab <char_map>$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a95	obj/kern/kernel.asm	/^f0100a95:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	c7 04 24 c4 5b 10 f0 	movl   $0xf0105bc4,(%esp)$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	e8 65 30 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	89 f0                	mov    %esi,%eax$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	83 e0 40             	and    $0x40,%eax$/;"	l
f0100aaa	obj/kern/kernel.asm	/^f0100aaa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	e8 f9 fd ff ff       	call   f01008ab <char_map>$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	0f be c0             	movsbl %al,%eax$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	c7 04 24 c4 5b 10 f0 	movl   $0xf0105bc4,(%esp)$/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	e8 45 30 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	89 f0                	mov    %esi,%eax$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
f0100acc	obj/kern/kernel.asm	/^f0100acc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	e8 d7 fd ff ff       	call   f01008ab <char_map>$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	0f be c0             	movsbl %al,%eax$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	c7 04 24 ce 5b 10 f0 	movl   $0xf0105bce,(%esp)$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	e8 23 30 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	89 f0                	mov    %esi,%eax$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	25 80 01 00 00       	and    $0x180,%eax$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	c1 e8 07             	shr    $0x7,%eax$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	c7 04 24 d3 5b 10 f0 	movl   $0xf0105bd3,(%esp)$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	e8 09 30 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	89 f0                	mov    %esi,%eax$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	25 00 0e 00 00       	and    $0xe00,%eax$/;"	l
f0100b08	obj/kern/kernel.asm	/^f0100b08:	c1 e8 09             	shr    $0x9,%eax$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	c7 04 24 da 5b 10 f0 	movl   $0xf0105bda,(%esp)$/;"	l
f0100b16	obj/kern/kernel.asm	/^f0100b16:	e8 ef 2f 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	0f 86 2e fe ff ff    	jbe    f0100957 <mon_show_map+0x9e>$/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100b31	obj/kern/kernel.asm	/^f0100b31:	5b                   	pop    %ebx$/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	5e                   	pop    %esi$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	5f                   	pop    %edi$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	5d                   	pop    %ebp$/;"	l
f0100b35	obj/kern/kernel.asm	/^f0100b35:	c3                   	ret    $/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36 <mon_set_perm>:$/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36:	55                   	push   %ebp$/;"	l
f0100b37	obj/kern/kernel.asm	/^f0100b37:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	57                   	push   %edi$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	56                   	push   %esi$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	53                   	push   %ebx$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	74 16                	je     f0100b5e <mon_set_perm+0x28>$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	c7 04 24 30 5e 10 f0 	movl   $0xf0105e30,(%esp)$/;"	l
f0100b4f	obj/kern/kernel.asm	/^f0100b4f:	e8 b6 2f 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	e9 15 01 00 00       	jmp    f0100c73 <mon_set_perm+0x13d>$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	00 $/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100b6d	obj/kern/kernel.asm	/^f0100b6d:	00 $/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b74	obj/kern/kernel.asm	/^f0100b74:	e8 a7 4a 00 00       	call   f0105620 <strtol>$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	89 c3                	mov    %eax,%ebx$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	00 $/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	00 $/;"	l
f0100b8b	obj/kern/kernel.asm	/^f0100b8b:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b91	obj/kern/kernel.asm	/^f0100b91:	e8 8a 4a 00 00       	call   f0105620 <strtol>$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	89 c6                	mov    %eax,%esi$/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100b9f	obj/kern/kernel.asm	/^f0100b9f:	00 $/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	00 $/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	e8 6d 4a 00 00       	call   f0105620 <strtol>$/;"	l
f0100bb3	obj/kern/kernel.asm	/^f0100bb3:	89 c7                	mov    %eax,%edi$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	85 c0                	test   %eax,%eax$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	74 05                	je     f0100bbe <mon_set_perm+0x88>$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx$/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	74 0c                	je     f0100bd2 <mon_set_perm+0x9c>$/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6:	81 eb 00 10 00 00    	sub    $0x1000,%ebx$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0100bd2	obj/kern/kernel.asm	/^f0100bd2:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	74 0c                	je     f0100be6 <mon_set_perm+0xb0>$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	0f 87 80 00 00 00    	ja     f0100c6e <mon_set_perm+0x138>$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	89 d8                	mov    %ebx,%eax$/;"	l
f0100bf0	obj/kern/kernel.asm	/^f0100bf0:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	8b 04 85 00 f0 fb ef 	mov    -0x10041000(,%eax,4),%eax$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	a8 01                	test   $0x1,%al$/;"	l
f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	3e 75 19             	jne,pt f0100c18 <mon_set_perm+0xe2>$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	c7 04 24 99 5b 10 f0 	movl   $0xf0105b99,(%esp)$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	e8 f4 2e 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	eb 4c                	jmp    f0100c64 <mon_set_perm+0x12e>$/;"	l
f0100c18	obj/kern/kernel.asm	/^f0100c18:	89 da                	mov    %ebx,%edx$/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	c1 e2 0a             	shl    $0xa,%edx$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	01 c2                	add    %eax,%edx$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	8d 82 00 00 c0 ef    	lea    -0x10400000(%edx),%eax$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	f6 82 00 00 c0 ef 01 	testb  $0x1,-0x10400000(%edx)$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	3e 75 19             	jne,pt f0100c58 <mon_set_perm+0x122>$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c46	obj/kern/kernel.asm	/^f0100c46:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	c7 04 24 99 5b 10 f0 	movl   $0xf0105b99,(%esp)$/;"	l
f0100c51	obj/kern/kernel.asm	/^f0100c51:	e8 b4 2e 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100c56	obj/kern/kernel.asm	/^f0100c56:	eb 0c                	jmp    f0100c64 <mon_set_perm+0x12e>$/;"	l
f0100c58	obj/kern/kernel.asm	/^f0100c58:	85 ff                	test   %edi,%edi$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	75 05                	jne    f0100c61 <mon_set_perm+0x12b>$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	83 20 fb             	andl   $0xfffffffb,(%eax)$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	eb 03                	jmp    f0100c64 <mon_set_perm+0x12e>$/;"	l
f0100c61	obj/kern/kernel.asm	/^f0100c61:	83 08 04             	orl    $0x4,(%eax)$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	76 80                	jbe    f0100bee <mon_set_perm+0xb8>$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100c76	obj/kern/kernel.asm	/^f0100c76:	5b                   	pop    %ebx$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	5e                   	pop    %esi$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	5f                   	pop    %edi$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	5d                   	pop    %ebp$/;"	l
f0100c7a	obj/kern/kernel.asm	/^f0100c7a:	c3                   	ret    $/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b <mon_dump_va>:$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	55                   	push   %ebp$/;"	l
f0100c7c	obj/kern/kernel.asm	/^f0100c7c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	56                   	push   %esi$/;"	l
f0100c7f	obj/kern/kernel.asm	/^f0100c7f:	53                   	push   %ebx$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	74 13                	je     f0100c9f <mon_dump_va+0x24>$/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	c7 04 24 30 5e 10 f0 	movl   $0xf0105e30,(%esp)$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	e8 72 2e 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	eb 69                	jmp    f0100d08 <mon_dump_va+0x8d>$/;"	l
f0100c9f	obj/kern/kernel.asm	/^f0100c9f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	00 $/;"	l
f0100ca7	obj/kern/kernel.asm	/^f0100ca7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	00 $/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100cb5	obj/kern/kernel.asm	/^f0100cb5:	e8 66 49 00 00       	call   f0105620 <strtol>$/;"	l
f0100cba	obj/kern/kernel.asm	/^f0100cba:	89 c3                	mov    %eax,%ebx$/;"	l
f0100cbc	obj/kern/kernel.asm	/^f0100cbc:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	00 $/;"	l
f0100cc4	obj/kern/kernel.asm	/^f0100cc4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	00 $/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	e8 49 49 00 00       	call   f0105620 <strtol>$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	89 c6                	mov    %eax,%esi$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	77 26                	ja     f0100d03 <mon_dump_va+0x88>$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	3e 76 16             	jbe,pt f0100cfc <mon_dump_va+0x81>$/;"	l
f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	c7 04 24 e2 5b 10 f0 	movl   $0xf0105be2,(%esp)$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	e8 0e 2e 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	76 da                	jbe    f0100cdd <mon_dump_va+0x62>$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	5b                   	pop    %ebx$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	5e                   	pop    %esi$/;"	l
f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	5d                   	pop    %ebp$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	c3                   	ret    $/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f <mon_dump_pa>:$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	55                   	push   %ebp$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	56                   	push   %esi$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	53                   	push   %ebx$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100d1a	obj/kern/kernel.asm	/^f0100d1a:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	74 13                	je     f0100d33 <mon_dump_pa+0x24>$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	c7 04 24 30 5e 10 f0 	movl   $0xf0105e30,(%esp)$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	e8 de 2d 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100d2c	obj/kern/kernel.asm	/^f0100d2c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	eb 73                	jmp    f0100da6 <mon_dump_pa+0x97>$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	00 $/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	00 $/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	e8 d2 48 00 00       	call   f0105620 <strtol>$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	89 c3                	mov    %eax,%ebx$/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100d57	obj/kern/kernel.asm	/^f0100d57:	00 $/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100d5f	obj/kern/kernel.asm	/^f0100d5f:	00 $/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	e8 b5 48 00 00       	call   f0105620 <strtol>$/;"	l
f0100d6b	obj/kern/kernel.asm	/^f0100d6b:	89 c6                	mov    %eax,%esi$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100d6f	obj/kern/kernel.asm	/^f0100d6f:	77 30                	ja     f0100da1 <mon_dump_pa+0x92>$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	81 fb ff ff ff 0f    	cmp    $0xfffffff,%ebx$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	3e 77 20             	ja,pt  f0100d9a <mon_dump_pa+0x8b>$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	8b 83 00 00 00 f0    	mov    -0x10000000(%ebx),%eax$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100d84	obj/kern/kernel.asm	/^f0100d84:	8d 83 00 00 00 f0    	lea    -0x10000000(%ebx),%eax$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	c7 04 24 fb 5b 10 f0 	movl   $0xf0105bfb,(%esp)$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	e8 70 2d 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	76 d0                	jbe    f0100d71 <mon_dump_pa+0x62>$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100da6	obj/kern/kernel.asm	/^f0100da6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	5b                   	pop    %ebx$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	5e                   	pop    %esi$/;"	l
f0100dab	obj/kern/kernel.asm	/^f0100dab:	5d                   	pop    %ebp$/;"	l
f0100dac	obj/kern/kernel.asm	/^f0100dac:	c3                   	ret    $/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad <mon_alloc_page>:$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	55                   	push   %ebp$/;"	l
f0100dae	obj/kern/kernel.asm	/^f0100dae:	89 e5                	mov    %esp,%ebp$/;"	l
f0100db0	obj/kern/kernel.asm	/^f0100db0:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	74 13                	je     f0100dcc <mon_alloc_page+0x1f>$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	c7 04 24 bc 5e 10 f0 	movl   $0xf0105ebc,(%esp)$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	e8 45 2d 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	eb 54                	jmp    f0100e20 <mon_alloc_page+0x73>$/;"	l
f0100dcc	obj/kern/kernel.asm	/^f0100dcc:	8d 45 fc             	lea    -0x4(%ebp),%eax$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	e8 55 10 00 00       	call   f0101e2c <page_alloc>$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	85 c0                	test   %eax,%eax$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	74 13                	je     f0100dee <mon_alloc_page+0x41>$/;"	l
f0100ddb	obj/kern/kernel.asm	/^f0100ddb:	c7 04 24 14 5c 10 f0 	movl   $0xf0105c14,(%esp)$/;"	l
f0100de2	obj/kern/kernel.asm	/^f0100de2:	e8 23 2d 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100de7	obj/kern/kernel.asm	/^f0100de7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	eb 32                	jmp    f0100e20 <mon_alloc_page+0x73>$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0100df1	obj/kern/kernel.asm	/^f0100df1:	66 83 40 08 01       	addw   $0x1,0x8(%eax)$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	c7 04 24 f4 5e 10 f0 	movl   $0xf0105ef4,(%esp)$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	e8 ef 2c 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	c9                   	leave  $/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	c3                   	ret    $/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22 <mon_page_status>:$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	55                   	push   %ebp$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	74 13                	je     f0100e41 <mon_page_status+0x1f>$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	c7 04 24 1c 5f 10 f0 	movl   $0xf0105f1c,(%esp)$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	e8 d0 2c 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	eb 7d                	jmp    f0100ebe <mon_page_status+0x9c>$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	00 $/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	00 $/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100e57	obj/kern/kernel.asm	/^f0100e57:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a:	e8 c1 47 00 00       	call   f0105620 <strtol>$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	89 c2                	mov    %eax,%edx$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	3e 72 1c             	jb,pt  f0100e89 <mon_page_status+0x67>$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	c7 44 24 08 5c 5f 10 	movl   $0xf0105f5c,0x8(%esp)$/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	f0 $/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	00 $/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	c7 04 24 2c 5c 10 f0 	movl   $0xf0105c2c,(%esp)$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	e8 48 f2 ff ff       	call   f01000d1 <_panic>$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	89 d0                	mov    %edx,%eax$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100e8e	obj/kern/kernel.asm	/^f0100e8e:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	8b 15 cc 42 21 f0    	mov    0xf02142cc,%edx$/;"	l
f0100e97	obj/kern/kernel.asm	/^f0100e97:	66 83 7c 82 08 00    	cmpw   $0x0,0x8(%edx,%eax,4)$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	74 0e                	je     f0100ead <mon_page_status+0x8b>$/;"	l
f0100e9f	obj/kern/kernel.asm	/^f0100e9f:	c7 04 24 3a 5c 10 f0 	movl   $0xf0105c3a,(%esp)$/;"	l
f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	e8 5f 2c 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	eb 0c                	jmp    f0100eb9 <mon_page_status+0x97>$/;"	l
f0100ead	obj/kern/kernel.asm	/^f0100ead:	c7 04 24 46 5c 10 f0 	movl   $0xf0105c46,(%esp)$/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	e8 51 2c 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	c9                   	leave  $/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf:	c3                   	ret    $/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0 <mon_free_page>:$/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0:	55                   	push   %ebp$/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ec3	obj/kern/kernel.asm	/^f0100ec3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)$/;"	l
f0100eca	obj/kern/kernel.asm	/^f0100eca:	74 13                	je     f0100edf <mon_free_page+0x1f>$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	c7 04 24 7c 5f 10 f0 	movl   $0xf0105f7c,(%esp)$/;"	l
f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	e8 32 2c 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	eb 65                	jmp    f0100f44 <mon_free_page+0x84>$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	00 $/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	00 $/;"	l
f0100eef	obj/kern/kernel.asm	/^f0100eef:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ef8	obj/kern/kernel.asm	/^f0100ef8:	e8 23 47 00 00       	call   f0105620 <strtol>$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	89 c2                	mov    %eax,%edx$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	3e 72 1c             	jb,pt  f0100f27 <mon_free_page+0x67>$/;"	l
f0100f0b	obj/kern/kernel.asm	/^f0100f0b:	c7 44 24 08 5c 5f 10 	movl   $0xf0105f5c,0x8(%esp)$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	f0 $/;"	l
f0100f13	obj/kern/kernel.asm	/^f0100f13:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	00 $/;"	l
f0100f1b	obj/kern/kernel.asm	/^f0100f1b:	c7 04 24 2c 5c 10 f0 	movl   $0xf0105c2c,(%esp)$/;"	l
f0100f22	obj/kern/kernel.asm	/^f0100f22:	e8 aa f1 ff ff       	call   f01000d1 <_panic>$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	89 d0                	mov    %edx,%eax$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	a1 cc 42 21 f0       	mov    0xf02142cc,%eax$/;"	l
f0100f34	obj/kern/kernel.asm	/^f0100f34:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	e8 83 0f 00 00       	call   f0101ec2 <page_decref>$/;"	l
f0100f3f	obj/kern/kernel.asm	/^f0100f3f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f44	obj/kern/kernel.asm	/^f0100f44:	c9                   	leave  $/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	c3                   	ret    $/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46 <runcmd>:$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	55                   	push   %ebp$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	57                   	push   %edi$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	56                   	push   %esi$/;"	l
f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	53                   	push   %ebx$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100f5e	obj/kern/kernel.asm	/^f0100f5e:	eb 06                	jmp    f0100f66 <runcmd+0x20>$/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100f63	obj/kern/kernel.asm	/^f0100f63:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100f66	obj/kern/kernel.asm	/^f0100f66:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	74 4b                	je     f0100fb6 <runcmd+0x70>$/;"	l
f0100f6b	obj/kern/kernel.asm	/^f0100f6b:	0f be 03             	movsbl (%ebx),%eax$/;"	l
f0100f6e	obj/kern/kernel.asm	/^f0100f6e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	c7 04 24 4d 5c 10 f0 	movl   $0xf0105c4d,(%esp)$/;"	l
f0100f79	obj/kern/kernel.asm	/^f0100f79:	e8 63 45 00 00       	call   f01054e1 <strchr>$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	85 c0                	test   %eax,%eax$/;"	l
f0100f80	obj/kern/kernel.asm	/^f0100f80:	75 de                	jne    f0100f60 <runcmd+0x1a>$/;"	l
f0100f82	obj/kern/kernel.asm	/^f0100f82:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	74 2f                	je     f0100fb6 <runcmd+0x70>$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	83 ff 0f             	cmp    $0xf,%edi$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	74 3d                	je     f0100fc9 <runcmd+0x83>$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	89 5c bd a8          	mov    %ebx,-0x58(%ebp,%edi,4)$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100f93	obj/kern/kernel.asm	/^f0100f93:	eb 03                	jmp    f0100f98 <runcmd+0x52>$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100f98	obj/kern/kernel.asm	/^f0100f98:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100f9b	obj/kern/kernel.asm	/^f0100f9b:	74 19                	je     f0100fb6 <runcmd+0x70>$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	0f be 03             	movsbl (%ebx),%eax$/;"	l
f0100fa0	obj/kern/kernel.asm	/^f0100fa0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100fa4	obj/kern/kernel.asm	/^f0100fa4:	c7 04 24 4d 5c 10 f0 	movl   $0xf0105c4d,(%esp)$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	e8 31 45 00 00       	call   f01054e1 <strchr>$/;"	l
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	85 c0                	test   %eax,%eax$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	74 e1                	je     f0100f95 <runcmd+0x4f>$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	eb b0                	jmp    f0100f66 <runcmd+0x20>$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	c7 44 bd a8 00 00 00 	movl   $0x0,-0x58(%ebp,%edi,4)$/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	00 $/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	85 ff                	test   %edi,%edi$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	74 7f                	je     f0101046 <runcmd+0x100>$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	eb 34                	jmp    f0100ffd <runcmd+0xb7>$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	00 $/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	c7 04 24 52 5c 10 f0 	movl   $0xf0105c52,(%esp)$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	e8 2d 2b 00 00       	call   f0103b0a <cprintf>$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	eb 62                	jmp    f0101046 <runcmd+0x100>$/;"	l
f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f0100fee	obj/kern/kernel.asm	/^f0100fee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	ff 96 48 d5 11 f0    	call   *-0xfee2ab8(%esi)$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	eb 49                	jmp    f0101046 <runcmd+0x100>$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	8d 34 85 00 00 00 00 	lea    0x0(,%eax,4),%esi$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	8b 86 40 d5 11 f0    	mov    -0xfee2ac0(%esi),%eax$/;"	l
f0101012	obj/kern/kernel.asm	/^f0101012:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0101019	obj/kern/kernel.asm	/^f0101019:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	e8 41 44 00 00       	call   f0105462 <strcmp>$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	85 c0                	test   %eax,%eax$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	2e 74 be             	je,pn  f0100fe4 <runcmd+0x9e>$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	76 d4                	jbe    f0101002 <runcmd+0xbc>$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	c7 04 24 6f 5c 10 f0 	movl   $0xf0105c6f,(%esp)$/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	e8 c9 2a 00 00       	call   f0103b0a <cprintf>$/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0101049	obj/kern/kernel.asm	/^f0101049:	5b                   	pop    %ebx$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	5e                   	pop    %esi$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	5f                   	pop    %edi$/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	5d                   	pop    %ebp$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	c3                   	ret    $/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e <monitor>:$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	55                   	push   %ebp$/;"	l
f010104f	obj/kern/kernel.asm	/^f010104f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	53                   	push   %ebx$/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101055	obj/kern/kernel.asm	/^f0101055:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101058	obj/kern/kernel.asm	/^f0101058:	c7 04 24 b8 5f 10 f0 	movl   $0xf0105fb8,(%esp)$/;"	l
f010105f	obj/kern/kernel.asm	/^f010105f:	e8 a6 2a 00 00       	call   f0103b0a <cprintf>$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	c7 04 24 dc 5f 10 f0 	movl   $0xf0105fdc,(%esp)$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	e8 9a 2a 00 00       	call   f0103b0a <cprintf>$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	85 db                	test   %ebx,%ebx$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	74 08                	je     f010107c <monitor+0x2e>$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101077	obj/kern/kernel.asm	/^f0101077:	e8 8b 2c 00 00       	call   f0103d07 <print_trapframe>$/;"	l
f010107c	obj/kern/kernel.asm	/^f010107c:	c7 04 24 85 5c 10 f0 	movl   $0xf0105c85,(%esp)$/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	e8 18 42 00 00       	call   f01052a0 <readline>$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	85 c0                	test   %eax,%eax$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	2e 74 ef             	je,pn  f010107c <monitor+0x2e>$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	e8 ad fe ff ff       	call   f0100f46 <runcmd>$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	85 c0                	test   %eax,%eax$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	79 df                	jns    f010107c <monitor+0x2e>$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	83 c4 14             	add    $0x14,%esp$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	5b                   	pop    %ebx$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	5d                   	pop    %ebp$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	c3                   	ret    $/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3 <read_eip>:$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	55                   	push   %ebp$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	89 e5                	mov    %esp,%ebp$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	5d                   	pop    %ebp$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	c3                   	ret    $/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac <nvram_read>:$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	55                   	push   %ebp$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f01010b5	obj/kern/kernel.asm	/^f01010b5:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01010bb	obj/kern/kernel.asm	/^f01010bb:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	e8 81 28 00 00       	call   f0103944 <mc146818_read>$/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	89 c6                	mov    %eax,%esi$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01010c8	obj/kern/kernel.asm	/^f01010c8:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01010cb	obj/kern/kernel.asm	/^f01010cb:	e8 74 28 00 00       	call   f0103944 <mc146818_read>$/;"	l
f01010d0	obj/kern/kernel.asm	/^f01010d0:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01010d3	obj/kern/kernel.asm	/^f01010d3:	09 c6                	or     %eax,%esi$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	89 f0                	mov    %esi,%eax$/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f01010da	obj/kern/kernel.asm	/^f01010da:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	89 ec                	mov    %ebp,%esp$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	5d                   	pop    %ebp$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	c3                   	ret    $/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1 <i386_detect_memory>:$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	55                   	push   %ebp$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	c7 04 24 15 00 00 00 	movl   $0x15,(%esp)$/;"	l
f01010ee	obj/kern/kernel.asm	/^f01010ee:	e8 b9 ff ff ff       	call   f01010ac <nvram_read>$/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	a3 0c 36 21 f0       	mov    %eax,0xf021360c$/;"	l
f0101100	obj/kern/kernel.asm	/^f0101100:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	e8 a0 ff ff ff       	call   f01010ac <nvram_read>$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	a3 10 36 21 f0       	mov    %eax,0xf0213610$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	85 c0                	test   %eax,%eax$/;"	l
f010111b	obj/kern/kernel.asm	/^f010111b:	74 0c                	je     f0101129 <i386_detect_memory+0x48>$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	05 00 00 10 00       	add    $0x100000,%eax$/;"	l
f0101122	obj/kern/kernel.asm	/^f0101122:	a3 08 36 21 f0       	mov    %eax,0xf0213608$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	eb 0a                	jmp    f0101133 <i386_detect_memory+0x52>$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	a1 0c 36 21 f0       	mov    0xf021360c,%eax$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	a3 08 36 21 f0       	mov    %eax,0xf0213608$/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	a1 08 36 21 f0       	mov    0xf0213608,%eax$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	89 c2                	mov    %eax,%edx$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010113d	obj/kern/kernel.asm	/^f010113d:	89 15 c0 42 21 f0    	mov    %edx,0xf02142c0$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a:	c7 04 24 04 60 10 f0 	movl   $0xf0106004,(%esp)$/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	e8 b4 29 00 00       	call   f0103b0a <cprintf>$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	a1 10 36 21 f0       	mov    0xf0213610,%eax$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010115e	obj/kern/kernel.asm	/^f010115e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101162	obj/kern/kernel.asm	/^f0101162:	a1 0c 36 21 f0       	mov    0xf021360c,%eax$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010116a	obj/kern/kernel.asm	/^f010116a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	c7 04 24 72 65 10 f0 	movl   $0xf0106572,(%esp)$/;"	l
f0101175	obj/kern/kernel.asm	/^f0101175:	e8 90 29 00 00       	call   f0103b0a <cprintf>$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	c9                   	leave  $/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	c3                   	ret    $/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c <boot_alloc>:$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	55                   	push   %ebp$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	89 e5                	mov    %esp,%ebp$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	53                   	push   %ebx$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	83 3d 14 36 21 f0 00 	cmpl   $0x0,0xf0213614$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	75 0a                	jne    f0101199 <boot_alloc+0x1d>$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	c7 05 14 36 21 f0 d0 	movl   $0xf02142d0,0xf0213614$/;"	l
f0101196	obj/kern/kernel.asm	/^f0101196:	42 21 f0 $/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	89 d3                	mov    %edx,%ebx$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	03 1d 14 36 21 f0    	add    0xf0213614,%ebx$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	89 d8                	mov    %ebx,%eax$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	89 d1                	mov    %edx,%ecx$/;"	l
f01011a8	obj/kern/kernel.asm	/^f01011a8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01011ad	obj/kern/kernel.asm	/^f01011ad:	f7 f1                	div    %ecx$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	89 d8                	mov    %ebx,%eax$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	29 d0                	sub    %edx,%eax$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	01 c2                	add    %eax,%edx$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	89 15 14 36 21 f0    	mov    %edx,0xf0213614$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	83 c4 04             	add    $0x4,%esp$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	5b                   	pop    %ebx$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	5d                   	pop    %ebp$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	c3                   	ret    $/;"	l
f01011c4	obj/kern/kernel.asm	/^f01011c4 <i386_vm_init>:$/;"	l
f01011c4	obj/kern/kernel.asm	/^f01011c4:	55                   	push   %ebp$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	53                   	push   %ebx$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01011d2	obj/kern/kernel.asm	/^f01011d2:	00 $/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	e8 9d ff ff ff       	call   f010117c <boot_alloc>$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	89 c3                	mov    %eax,%ebx$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	00 $/;"	l
f01011e9	obj/kern/kernel.asm	/^f01011e9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	00 $/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4:	e8 27 43 00 00       	call   f0105520 <memset>$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	89 1d c8 42 21 f0    	mov    %ebx,0xf02142c8$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	89 d8                	mov    %ebx,%eax$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	3e 77 20             	ja,pt  f010122a <i386_vm_init+0x66>$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	c7 44 24 08 28 60 10 	movl   $0xf0106028,0x8(%esp)$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	f0 $/;"	l
f0101216	obj/kern/kernel.asm	/^f0101216:	c7 44 24 04 9f 00 00 	movl   $0x9f,0x4(%esp)$/;"	l
f010121d	obj/kern/kernel.asm	/^f010121d:	00 $/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	e8 a7 ee ff ff       	call   f01000d1 <_panic>$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	a3 c4 42 21 f0       	mov    %eax,0xf02142c4$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	89 d8                	mov    %ebx,%eax$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c:	3e 77 20             	ja,pt  f010125f <i386_vm_init+0x9b>$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	c7 44 24 08 28 60 10 	movl   $0xf0106028,0x8(%esp)$/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a:	f0 $/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	c7 44 24 04 a8 00 00 	movl   $0xa8,0x4(%esp)$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	00 $/;"	l
f0101253	obj/kern/kernel.asm	/^f0101253:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	e8 72 ee ff ff       	call   f01000d1 <_panic>$/;"	l
f010125f	obj/kern/kernel.asm	/^f010125f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0101264	obj/kern/kernel.asm	/^f0101264:	83 c8 03             	or     $0x3,%eax$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	89 83 fc 0e 00 00    	mov    %eax,0xefc(%ebx)$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	89 d8                	mov    %ebx,%eax$/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0101275	obj/kern/kernel.asm	/^f0101275:	3e 77 20             	ja,pt  f0101298 <i386_vm_init+0xd4>$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010127c	obj/kern/kernel.asm	/^f010127c:	c7 44 24 08 28 60 10 	movl   $0xf0106028,0x8(%esp)$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	f0 $/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	c7 44 24 04 ac 00 00 	movl   $0xac,0x4(%esp)$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	00 $/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	e8 39 ee ff ff       	call   f01000d1 <_panic>$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	83 c8 05             	or     $0x5,%eax$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	89 83 f4 0e 00 00    	mov    %eax,0xef4(%ebx)$/;"	l
f01012a6	obj/kern/kernel.asm	/^f01012a6:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	00 $/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	a1 c0 42 21 f0       	mov    0xf02142c0,%eax$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	e8 bb fe ff ff       	call   f010117c <boot_alloc>$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	a3 cc 42 21 f0       	mov    %eax,0xf02142cc$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd:	00 $/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	c7 04 24 00 f0 01 00 	movl   $0x1f000,(%esp)$/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5:	e8 a2 fe ff ff       	call   f010117c <boot_alloc>$/;"	l
f01012da	obj/kern/kernel.asm	/^f01012da:	a3 20 36 21 f0       	mov    %eax,0xf0213620$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	e8 c7 09 00 00       	call   f0101cab <page_init>$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	e8 b2 01 00 00       	call   f010149b <check_page_alloc>$/;"	l
f01012e9	obj/kern/kernel.asm	/^f01012e9:	e8 f4 10 00 00       	call   f01023e2 <page_check>$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	a1 cc 42 21 f0       	mov    0xf02142cc,%eax$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	3e 77 20             	ja,pt  f010131b <i386_vm_init+0x157>$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	c7 44 24 08 28 60 10 	movl   $0xf0106028,0x8(%esp)$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	f0 $/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	c7 44 24 04 d2 00 00 	movl   $0xd2,0x4(%esp)$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	00 $/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	e8 b6 ed ff ff       	call   f01000d1 <_panic>$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	c7 44 24 10 05 00 00 	movl   $0x5,0x10(%esp)$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	00 $/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	00 $/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	c7 44 24 04 00 00 00 	movl   $0xef000000,0x4(%esp)$/;"	l
f010133b	obj/kern/kernel.asm	/^f010133b:	ef $/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010133f	obj/kern/kernel.asm	/^f010133f:	e8 bc 0d 00 00       	call   f0102100 <boot_map_segment>$/;"	l
f0101344	obj/kern/kernel.asm	/^f0101344:	a1 20 36 21 f0       	mov    0xf0213620,%eax$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	3e 77 20             	ja,pt  f0101371 <i386_vm_init+0x1ad>$/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	c7 44 24 08 28 60 10 	movl   $0xf0106028,0x8(%esp)$/;"	l
f010135c	obj/kern/kernel.asm	/^f010135c:	f0 $/;"	l
f010135d	obj/kern/kernel.asm	/^f010135d:	c7 44 24 04 da 00 00 	movl   $0xda,0x4(%esp)$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	00 $/;"	l
f0101365	obj/kern/kernel.asm	/^f0101365:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	e8 60 ed ff ff       	call   f01000d1 <_panic>$/;"	l
f0101371	obj/kern/kernel.asm	/^f0101371:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	c7 44 24 10 05 00 00 	movl   $0x5,0x10(%esp)$/;"	l
f010137d	obj/kern/kernel.asm	/^f010137d:	00 $/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101382	obj/kern/kernel.asm	/^f0101382:	c7 44 24 08 00 f0 01 	movl   $0x1f000,0x8(%esp)$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	00 $/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	c7 44 24 04 00 00 c0 	movl   $0xeec00000,0x4(%esp)$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	ee $/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	e8 66 0d 00 00       	call   f0102100 <boot_map_segment>$/;"	l
f010139a	obj/kern/kernel.asm	/^f010139a:	b8 00 50 11 f0       	mov    $0xf0115000,%eax$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	3e 77 20             	ja,pt  f01013c7 <i386_vm_init+0x203>$/;"	l
f01013a7	obj/kern/kernel.asm	/^f01013a7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	c7 44 24 08 28 60 10 	movl   $0xf0106028,0x8(%esp)$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	f0 $/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	c7 44 24 04 e6 00 00 	movl   $0xe6,0x4(%esp)$/;"	l
f01013ba	obj/kern/kernel.asm	/^f01013ba:	00 $/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	e8 0a ed ff ff       	call   f01000d1 <_panic>$/;"	l
f01013c7	obj/kern/kernel.asm	/^f01013c7:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01013cc	obj/kern/kernel.asm	/^f01013cc:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%esp)$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	00 $/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	c7 44 24 08 00 80 00 	movl   $0x8000,0x8(%esp)$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	00 $/;"	l
f01013e0	obj/kern/kernel.asm	/^f01013e0:	c7 44 24 04 00 80 bf 	movl   $0xefbf8000,0x4(%esp)$/;"	l
f01013e7	obj/kern/kernel.asm	/^f01013e7:	ef $/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	e8 10 0d 00 00       	call   f0102100 <boot_map_segment>$/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	00 $/;"	l
f01013f8	obj/kern/kernel.asm	/^f01013f8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	00 $/;"	l
f0101400	obj/kern/kernel.asm	/^f0101400:	c7 44 24 08 00 80 3f 	movl   $0x3f8000,0x8(%esp)$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	00 $/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	c7 44 24 04 00 00 80 	movl   $0xef800000,0x4(%esp)$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	ef $/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	e8 e8 0c 00 00       	call   f0102100 <boot_map_segment>$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%esp)$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	00 $/;"	l
f0101420	obj/kern/kernel.asm	/^f0101420:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	00 $/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	c7 44 24 08 00 00 00 	movl   $0x10000000,0x8(%esp)$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	10 $/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	c7 44 24 04 00 00 00 	movl   $0xf0000000,0x4(%esp)$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	f0 $/;"	l
f0101438	obj/kern/kernel.asm	/^f0101438:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010143b	obj/kern/kernel.asm	/^f010143b:	e8 c0 0c 00 00       	call   f0102100 <boot_map_segment>$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	e8 0b 05 00 00       	call   f0101950 <check_boot_pgdir>$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	8b 83 00 0f 00 00    	mov    0xf00(%ebx),%eax$/;"	l
f010144b	obj/kern/kernel.asm	/^f010144b:	89 03                	mov    %eax,(%ebx)$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	a1 c4 42 21 f0       	mov    0xf02142c4,%eax$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	0d 2f 00 05 80       	or     $0x8005002f,%eax$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	0f 01 15 f0 d5 11 f0 	lgdtl  0xf011d5f0$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	8e e8                	mov    %eax,%gs$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	8e e0                	mov    %eax,%fs$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	b0 10                	mov    $0x10,%al$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	8e c0                	mov    %eax,%es$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	8e d8                	mov    %eax,%ds$/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	8e d0                	mov    %eax,%ss$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	ea 82 14 10 f0 08 00 	ljmp   $0x8,$0xf0101482$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	b0 00                	mov    $0x0,%al$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	0f 00 d0             	lldt   %ax$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f010148d	obj/kern/kernel.asm	/^f010148d:	a1 c4 42 21 f0       	mov    0xf02142c4,%eax$/;"	l
f0101492	obj/kern/kernel.asm	/^f0101492:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101498	obj/kern/kernel.asm	/^f0101498:	5b                   	pop    %ebx$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	5d                   	pop    %ebp$/;"	l
f010149a	obj/kern/kernel.asm	/^f010149a:	c3                   	ret    $/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b <check_page_alloc>:$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	55                   	push   %ebp$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	89 e5                	mov    %esp,%ebp$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	53                   	push   %ebx$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	83 ec 24             	sub    $0x24,%esp$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	a1 18 36 21 f0       	mov    0xf0213618,%eax$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	85 c0                	test   %eax,%eax$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	74 6f                	je     f010151d <check_page_alloc+0x82>$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f01014b1	obj/kern/kernel.asm	/^f01014b1:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0:	89 c2                	mov    %eax,%edx$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	89 d0                	mov    %edx,%eax$/;"	l
f01014c7	obj/kern/kernel.asm	/^f01014c7:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	3e 72 20             	jb,pt  f01014f3 <check_page_alloc+0x58>$/;"	l
f01014d3	obj/kern/kernel.asm	/^f01014d3:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	c7 44 24 08 4c 60 10 	movl   $0xf010604c,0x8(%esp)$/;"	l
f01014de	obj/kern/kernel.asm	/^f01014de:	f0 $/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	c7 44 24 04 5a 00 00 	movl   $0x5a,0x4(%esp)$/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	00 $/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	c7 04 24 2c 5c 10 f0 	movl   $0xf0105c2c,(%esp)$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	e8 de eb ff ff       	call   f01000d1 <_panic>$/;"	l
f01014f3	obj/kern/kernel.asm	/^f01014f3:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01014f9	obj/kern/kernel.asm	/^f01014f9:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	00 $/;"	l
f0101501	obj/kern/kernel.asm	/^f0101501:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	00 $/;"	l
f0101509	obj/kern/kernel.asm	/^f0101509:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010150c	obj/kern/kernel.asm	/^f010150c:	e8 0f 40 00 00       	call   f0105520 <memset>$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	8b 00                	mov    (%eax),%eax$/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	85 c0                	test   %eax,%eax$/;"	l
f010151b	obj/kern/kernel.asm	/^f010151b:	75 91                	jne    f01014ae <check_page_alloc+0x13>$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	8d 45 f8             	lea    -0x8(%ebp),%eax$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	e8 ef 08 00 00       	call   f0101e2c <page_alloc>$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	85 c0                	test   %eax,%eax$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	3e 74 24             	je,pt  f0101566 <check_page_alloc+0xcb>$/;"	l
f0101542	obj/kern/kernel.asm	/^f0101542:	c7 44 24 0c 9a 65 10 	movl   $0xf010659a,0xc(%esp)$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	f0 $/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	f0 $/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	c7 44 24 04 3b 01 00 	movl   $0x13b,0x4(%esp)$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	00 $/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	e8 6b eb ff ff       	call   f01000d1 <_panic>$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	e8 bb 08 00 00       	call   f0101e2c <page_alloc>$/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571:	85 c0                	test   %eax,%eax$/;"	l
f0101573	obj/kern/kernel.asm	/^f0101573:	3e 74 24             	je,pt  f010159a <check_page_alloc+0xff>$/;"	l
f0101576	obj/kern/kernel.asm	/^f0101576:	c7 44 24 0c c5 65 10 	movl   $0xf01065c5,0xc(%esp)$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	f0 $/;"	l
f010157e	obj/kern/kernel.asm	/^f010157e:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	f0 $/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	c7 44 24 04 3c 01 00 	movl   $0x13c,0x4(%esp)$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	00 $/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	e8 37 eb ff ff       	call   f01000d1 <_panic>$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	e8 87 08 00 00       	call   f0101e2c <page_alloc>$/;"	l
f01015a5	obj/kern/kernel.asm	/^f01015a5:	85 c0                	test   %eax,%eax$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	3e 74 24             	je,pt  f01015ce <check_page_alloc+0x133>$/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	c7 44 24 0c db 65 10 	movl   $0xf01065db,0xc(%esp)$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	f0 $/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	f0 $/;"	l
f01015ba	obj/kern/kernel.asm	/^f01015ba:	c7 44 24 04 3d 01 00 	movl   $0x13d,0x4(%esp)$/;"	l
f01015c1	obj/kern/kernel.asm	/^f01015c1:	00 $/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9:	e8 03 eb ff ff       	call   f01000d1 <_panic>$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	3e 75 24             	jne,pt f01015f9 <check_page_alloc+0x15e>$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	c7 44 24 0c ff 65 10 	movl   $0xf01065ff,0xc(%esp)$/;"	l
f01015dc	obj/kern/kernel.asm	/^f01015dc:	f0 $/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	f0 $/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	c7 44 24 04 3f 01 00 	movl   $0x13f,0x4(%esp)$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	00 $/;"	l
f01015ed	obj/kern/kernel.asm	/^f01015ed:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	e8 d8 ea ff ff       	call   f01000d1 <_panic>$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f01015fd	obj/kern/kernel.asm	/^f01015fd:	74 08                	je     f0101607 <check_page_alloc+0x16c>$/;"	l
f01015ff	obj/kern/kernel.asm	/^f01015ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	75 24                	jne    f010162b <check_page_alloc+0x190>$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	c7 44 24 0c f1 65 10 	movl   $0xf01065f1,0xc(%esp)$/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	f0 $/;"	l
f010160f	obj/kern/kernel.asm	/^f010160f:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	f0 $/;"	l
f0101617	obj/kern/kernel.asm	/^f0101617:	c7 44 24 04 40 01 00 	movl   $0x140,0x4(%esp)$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	00 $/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101626	obj/kern/kernel.asm	/^f0101626:	e8 a6 ea ff ff       	call   f01000d1 <_panic>$/;"	l
f010162b	obj/kern/kernel.asm	/^f010162b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	74 0d                	je     f010163e <check_page_alloc+0x1a3>$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	74 05                	je     f010163e <check_page_alloc+0x1a3>$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
f010163c	obj/kern/kernel.asm	/^f010163c:	75 24                	jne    f0101662 <check_page_alloc+0x1c7>$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	c7 44 24 0c 70 60 10 	movl   $0xf0106070,0xc(%esp)$/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	f0 $/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f010164d	obj/kern/kernel.asm	/^f010164d:	f0 $/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	c7 44 24 04 41 01 00 	movl   $0x141,0x4(%esp)$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	00 $/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f010165d	obj/kern/kernel.asm	/^f010165d:	e8 6f ea ff ff       	call   f01000d1 <_panic>$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f0101665	obj/kern/kernel.asm	/^f0101665:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f010166b	obj/kern/kernel.asm	/^f010166b:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101677	obj/kern/kernel.asm	/^f0101677:	8b 15 c0 42 21 f0    	mov    0xf02142c0,%edx$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	39 d0                	cmp    %edx,%eax$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	3e 72 24             	jb,pt  f01016a9 <check_page_alloc+0x20e>$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	c7 44 24 0c 03 66 10 	movl   $0xf0106603,0xc(%esp)$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	f0 $/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101694	obj/kern/kernel.asm	/^f0101694:	f0 $/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	c7 44 24 04 42 01 00 	movl   $0x142,0x4(%esp)$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	00 $/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01016a4	obj/kern/kernel.asm	/^f01016a4:	e8 28 ea ff ff       	call   f01000d1 <_panic>$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	8b 15 c0 42 21 f0    	mov    0xf02142c0,%edx$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	39 d0                	cmp    %edx,%eax$/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	3e 72 24             	jb,pt  f01016f0 <check_page_alloc+0x255>$/;"	l
f01016cc	obj/kern/kernel.asm	/^f01016cc:	c7 44 24 0c 1f 66 10 	movl   $0xf010661f,0xc(%esp)$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	f0 $/;"	l
f01016d4	obj/kern/kernel.asm	/^f01016d4:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	f0 $/;"	l
f01016dc	obj/kern/kernel.asm	/^f01016dc:	c7 44 24 04 43 01 00 	movl   $0x143,0x4(%esp)$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	00 $/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	e8 e1 e9 ff ff       	call   f01000d1 <_panic>$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01016fc	obj/kern/kernel.asm	/^f01016fc:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	8b 15 c0 42 21 f0    	mov    0xf02142c0,%edx$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	39 d0                	cmp    %edx,%eax$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	3e 72 24             	jb,pt  f0101737 <check_page_alloc+0x29c>$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	c7 44 24 0c 3b 66 10 	movl   $0xf010663b,0xc(%esp)$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	f0 $/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101722	obj/kern/kernel.asm	/^f0101722:	f0 $/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	c7 44 24 04 44 01 00 	movl   $0x144,0x4(%esp)$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	00 $/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	e8 9a e9 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101737	obj/kern/kernel.asm	/^f0101737:	8b 1d 18 36 21 f0    	mov    0xf0213618,%ebx$/;"	l
f010173d	obj/kern/kernel.asm	/^f010173d:	c7 05 18 36 21 f0 00 	movl   $0x0,0xf0213618$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	00 00 00 $/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	e8 da 06 00 00       	call   f0101e2c <page_alloc>$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	3e 74 24             	je,pt  f010177c <check_page_alloc+0x2e1>$/;"	l
f0101758	obj/kern/kernel.asm	/^f0101758:	c7 44 24 0c 57 66 10 	movl   $0xf0106657,0xc(%esp)$/;"	l
f010175f	obj/kern/kernel.asm	/^f010175f:	f0 $/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101767	obj/kern/kernel.asm	/^f0101767:	f0 $/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	c7 44 24 04 4b 01 00 	movl   $0x14b,0x4(%esp)$/;"	l
f010176f	obj/kern/kernel.asm	/^f010176f:	00 $/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	e8 55 e9 ff ff       	call   f01000d1 <_panic>$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	e8 ec 06 00 00       	call   f0101e73 <page_free>$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010178d	obj/kern/kernel.asm	/^f010178d:	e8 e1 06 00 00       	call   f0101e73 <page_free>$/;"	l
f0101792	obj/kern/kernel.asm	/^f0101792:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101795	obj/kern/kernel.asm	/^f0101795:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	e8 d6 06 00 00       	call   f0101e73 <page_free>$/;"	l
f010179d	obj/kern/kernel.asm	/^f010179d:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
f01017b2	obj/kern/kernel.asm	/^f01017b2:	8d 45 f8             	lea    -0x8(%ebp),%eax$/;"	l
f01017b5	obj/kern/kernel.asm	/^f01017b5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	e8 6f 06 00 00       	call   f0101e2c <page_alloc>$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	85 c0                	test   %eax,%eax$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	3e 74 24             	je,pt  f01017e6 <check_page_alloc+0x34b>$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	c7 44 24 0c 9a 65 10 	movl   $0xf010659a,0xc(%esp)$/;"	l
f01017c9	obj/kern/kernel.asm	/^f01017c9:	f0 $/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f01017d1	obj/kern/kernel.asm	/^f01017d1:	f0 $/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	c7 44 24 04 52 01 00 	movl   $0x152,0x4(%esp)$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	00 $/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01017e1	obj/kern/kernel.asm	/^f01017e1:	e8 eb e8 ff ff       	call   f01000d1 <_panic>$/;"	l
f01017e6	obj/kern/kernel.asm	/^f01017e6:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01017e9	obj/kern/kernel.asm	/^f01017e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01017ec	obj/kern/kernel.asm	/^f01017ec:	e8 3b 06 00 00       	call   f0101e2c <page_alloc>$/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	85 c0                	test   %eax,%eax$/;"	l
f01017f3	obj/kern/kernel.asm	/^f01017f3:	3e 74 24             	je,pt  f010181a <check_page_alloc+0x37f>$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	c7 44 24 0c c5 65 10 	movl   $0xf01065c5,0xc(%esp)$/;"	l
f01017fd	obj/kern/kernel.asm	/^f01017fd:	f0 $/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	f0 $/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	c7 44 24 04 53 01 00 	movl   $0x153,0x4(%esp)$/;"	l
f010180d	obj/kern/kernel.asm	/^f010180d:	00 $/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	e8 b7 e8 ff ff       	call   f01000d1 <_panic>$/;"	l
f010181a	obj/kern/kernel.asm	/^f010181a:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	e8 07 06 00 00       	call   f0101e2c <page_alloc>$/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	85 c0                	test   %eax,%eax$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	3e 74 24             	je,pt  f010184e <check_page_alloc+0x3b3>$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	c7 44 24 0c db 65 10 	movl   $0xf01065db,0xc(%esp)$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	f0 $/;"	l
f0101832	obj/kern/kernel.asm	/^f0101832:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	f0 $/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	c7 44 24 04 54 01 00 	movl   $0x154,0x4(%esp)$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	00 $/;"	l
f0101842	obj/kern/kernel.asm	/^f0101842:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	e8 83 e8 ff ff       	call   f01000d1 <_panic>$/;"	l
f010184e	obj/kern/kernel.asm	/^f010184e:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)$/;"	l
f0101852	obj/kern/kernel.asm	/^f0101852:	3e 75 24             	jne,pt f0101879 <check_page_alloc+0x3de>$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	c7 44 24 0c ff 65 10 	movl   $0xf01065ff,0xc(%esp)$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	f0 $/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	f0 $/;"	l
f0101865	obj/kern/kernel.asm	/^f0101865:	c7 44 24 04 55 01 00 	movl   $0x155,0x4(%esp)$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	00 $/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101874	obj/kern/kernel.asm	/^f0101874:	e8 58 e8 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101879	obj/kern/kernel.asm	/^f0101879:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	74 08                	je     f0101887 <check_page_alloc+0x3ec>$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101882	obj/kern/kernel.asm	/^f0101882:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	75 24                	jne    f01018ab <check_page_alloc+0x410>$/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	c7 44 24 0c f1 65 10 	movl   $0xf01065f1,0xc(%esp)$/;"	l
f010188e	obj/kern/kernel.asm	/^f010188e:	f0 $/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101896	obj/kern/kernel.asm	/^f0101896:	f0 $/;"	l
f0101897	obj/kern/kernel.asm	/^f0101897:	c7 44 24 04 56 01 00 	movl   $0x156,0x4(%esp)$/;"	l
f010189e	obj/kern/kernel.asm	/^f010189e:	00 $/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	e8 26 e8 ff ff       	call   f01000d1 <_panic>$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f01018af	obj/kern/kernel.asm	/^f01018af:	74 0d                	je     f01018be <check_page_alloc+0x423>$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	74 05                	je     f01018be <check_page_alloc+0x423>$/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	75 24                	jne    f01018e2 <check_page_alloc+0x447>$/;"	l
f01018be	obj/kern/kernel.asm	/^f01018be:	c7 44 24 0c 70 60 10 	movl   $0xf0106070,0xc(%esp)$/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	f0 $/;"	l
f01018c6	obj/kern/kernel.asm	/^f01018c6:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	f0 $/;"	l
f01018ce	obj/kern/kernel.asm	/^f01018ce:	c7 44 24 04 57 01 00 	movl   $0x157,0x4(%esp)$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	00 $/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	e8 ef e7 ff ff       	call   f01000d1 <_panic>$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01018e8	obj/kern/kernel.asm	/^f01018e8:	e8 3f 05 00 00       	call   f0101e2c <page_alloc>$/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	3e 74 24             	je,pt  f0101917 <check_page_alloc+0x47c>$/;"	l
f01018f3	obj/kern/kernel.asm	/^f01018f3:	c7 44 24 0c 57 66 10 	movl   $0xf0106657,0xc(%esp)$/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	f0 $/;"	l
f01018fb	obj/kern/kernel.asm	/^f01018fb:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	f0 $/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	c7 44 24 04 58 01 00 	movl   $0x158,0x4(%esp)$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	00 $/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	e8 ba e7 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917:	89 1d 18 36 21 f0    	mov    %ebx,0xf0213618$/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f0101920	obj/kern/kernel.asm	/^f0101920:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	e8 4b 05 00 00       	call   f0101e73 <page_free>$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	e8 40 05 00 00       	call   f0101e73 <page_free>$/;"	l
f0101933	obj/kern/kernel.asm	/^f0101933:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	e8 35 05 00 00       	call   f0101e73 <page_free>$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	c7 04 24 90 60 10 f0 	movl   $0xf0106090,(%esp)$/;"	l
f0101945	obj/kern/kernel.asm	/^f0101945:	e8 c0 21 00 00       	call   f0103b0a <cprintf>$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	83 c4 24             	add    $0x24,%esp$/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d:	5b                   	pop    %ebx$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	5d                   	pop    %ebp$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	c3                   	ret    $/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950 <check_boot_pgdir>:$/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	55                   	push   %ebp$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	89 e5                	mov    %esp,%ebp$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	57                   	push   %edi$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	56                   	push   %esi$/;"	l
f0101955	obj/kern/kernel.asm	/^f0101955:	53                   	push   %ebx$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	8b 35 c8 42 21 f0    	mov    0xf02142c8,%esi$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	a1 c0 42 21 f0       	mov    0xf02142c0,%eax$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0101967	obj/kern/kernel.asm	/^f0101967:	8d 04 85 ff 0f 00 00 	lea    0xfff(,%eax,4),%eax$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	89 c7                	mov    %eax,%edi$/;"	l
f0101970	obj/kern/kernel.asm	/^f0101970:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0101976	obj/kern/kernel.asm	/^f0101976:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010197b	obj/kern/kernel.asm	/^f010197b:	39 fb                	cmp    %edi,%ebx$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	3e 73 7b             	jae,pt f01019fb <check_boot_pgdir+0xab>$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	8d 83 00 00 00 ef    	lea    -0x11000000(%ebx),%eax$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010198a	obj/kern/kernel.asm	/^f010198a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	e8 8e 02 00 00       	call   f0101c20 <check_va2pa>$/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992:	89 c2                	mov    %eax,%edx$/;"	l
f0101994	obj/kern/kernel.asm	/^f0101994:	a1 cc 42 21 f0       	mov    0xf02142cc,%eax$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	3e 77 20             	ja,pt  f01019c1 <check_boot_pgdir+0x71>$/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	c7 44 24 08 28 60 10 	movl   $0xf0106028,0x8(%esp)$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	f0 $/;"	l
f01019ad	obj/kern/kernel.asm	/^f01019ad:	c7 44 24 04 7a 01 00 	movl   $0x17a,0x4(%esp)$/;"	l
f01019b4	obj/kern/kernel.asm	/^f01019b4:	00 $/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01019bc	obj/kern/kernel.asm	/^f01019bc:	e8 10 e7 ff ff       	call   f01000d1 <_panic>$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	8d 84 18 00 00 00 10 	lea    0x10000000(%eax,%ebx,1),%eax$/;"	l
f01019c8	obj/kern/kernel.asm	/^f01019c8:	39 c2                	cmp    %eax,%edx$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	3e 74 24             	je,pt  f01019f1 <check_boot_pgdir+0xa1>$/;"	l
f01019cd	obj/kern/kernel.asm	/^f01019cd:	c7 44 24 0c b0 60 10 	movl   $0xf01060b0,0xc(%esp)$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	f0 $/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	f0 $/;"	l
f01019dd	obj/kern/kernel.asm	/^f01019dd:	c7 44 24 04 7a 01 00 	movl   $0x17a,0x4(%esp)$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	00 $/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	e8 e0 e6 ff ff       	call   f01000d1 <_panic>$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01019f7	obj/kern/kernel.asm	/^f01019f7:	39 fb                	cmp    %edi,%ebx$/;"	l
f01019f9	obj/kern/kernel.asm	/^f01019f9:	72 85                	jb     f0101980 <check_boot_pgdir+0x30>$/;"	l
f01019fb	obj/kern/kernel.asm	/^f01019fb:	bf 00 f0 01 00       	mov    $0x1f000,%edi$/;"	l
f0101a00	obj/kern/kernel.asm	/^f0101a00:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101a05	obj/kern/kernel.asm	/^f0101a05:	8d 83 00 00 c0 ee    	lea    -0x11400000(%ebx),%eax$/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	e8 09 02 00 00       	call   f0101c20 <check_va2pa>$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	89 c2                	mov    %eax,%edx$/;"	l
f0101a19	obj/kern/kernel.asm	/^f0101a19:	a1 20 36 21 f0       	mov    0xf0213620,%eax$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101a23	obj/kern/kernel.asm	/^f0101a23:	3e 77 20             	ja,pt  f0101a46 <check_boot_pgdir+0xf6>$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	c7 44 24 08 28 60 10 	movl   $0xf0106028,0x8(%esp)$/;"	l
f0101a31	obj/kern/kernel.asm	/^f0101a31:	f0 $/;"	l
f0101a32	obj/kern/kernel.asm	/^f0101a32:	c7 44 24 04 7f 01 00 	movl   $0x17f,0x4(%esp)$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	00 $/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	e8 8b e6 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	8d 84 18 00 00 00 10 	lea    0x10000000(%eax,%ebx,1),%eax$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	39 c2                	cmp    %eax,%edx$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	3e 74 24             	je,pt  f0101a76 <check_boot_pgdir+0x126>$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	c7 44 24 0c e4 60 10 	movl   $0xf01060e4,0xc(%esp)$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	f0 $/;"	l
f0101a5a	obj/kern/kernel.asm	/^f0101a5a:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101a61	obj/kern/kernel.asm	/^f0101a61:	f0 $/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	c7 44 24 04 7f 01 00 	movl   $0x17f,0x4(%esp)$/;"	l
f0101a69	obj/kern/kernel.asm	/^f0101a69:	00 $/;"	l
f0101a6a	obj/kern/kernel.asm	/^f0101a6a:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	e8 5b e6 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101a76	obj/kern/kernel.asm	/^f0101a76:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101a7c	obj/kern/kernel.asm	/^f0101a7c:	39 fb                	cmp    %edi,%ebx$/;"	l
f0101a7e	obj/kern/kernel.asm	/^f0101a7e:	72 85                	jb     f0101a05 <check_boot_pgdir+0xb5>$/;"	l
f0101a80	obj/kern/kernel.asm	/^f0101a80:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	3b 1d c0 42 21 f0    	cmp    0xf02142c0,%ebx$/;"	l
f0101a8b	obj/kern/kernel.asm	/^f0101a8b:	3e 73 49             	jae,pt f0101ad7 <check_boot_pgdir+0x187>$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	8d 83 00 00 00 f0    	lea    -0x10000000(%ebx),%eax$/;"	l
f0101a94	obj/kern/kernel.asm	/^f0101a94:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	e8 80 01 00 00       	call   f0101c20 <check_va2pa>$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	39 d8                	cmp    %ebx,%eax$/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	3e 74 24             	je,pt  f0101ac9 <check_boot_pgdir+0x179>$/;"	l
f0101aa5	obj/kern/kernel.asm	/^f0101aa5:	c7 44 24 0c 18 61 10 	movl   $0xf0106118,0xc(%esp)$/;"	l
f0101aac	obj/kern/kernel.asm	/^f0101aac:	f0 $/;"	l
f0101aad	obj/kern/kernel.asm	/^f0101aad:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	f0 $/;"	l
f0101ab5	obj/kern/kernel.asm	/^f0101ab5:	c7 44 24 04 83 01 00 	movl   $0x183,0x4(%esp)$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	00 $/;"	l
f0101abd	obj/kern/kernel.asm	/^f0101abd:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101ac4	obj/kern/kernel.asm	/^f0101ac4:	e8 08 e6 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	3b 1d c0 42 21 f0    	cmp    0xf02142c0,%ebx$/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	72 b7                	jb     f0101a8e <check_boot_pgdir+0x13e>$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	bf 00 50 11 f0       	mov    $0xf0115000,%edi$/;"	l
f0101ae1	obj/kern/kernel.asm	/^f0101ae1:	8d 83 00 80 bf ef    	lea    -0x10408000(%ebx),%eax$/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101aee	obj/kern/kernel.asm	/^f0101aee:	e8 2d 01 00 00       	call   f0101c20 <check_va2pa>$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	89 c2                	mov    %eax,%edx$/;"	l
f0101af5	obj/kern/kernel.asm	/^f0101af5:	81 ff ff ff ff ef    	cmp    $0xefffffff,%edi$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	3e 77 24             	ja,pt  f0101b22 <check_boot_pgdir+0x1d2>$/;"	l
f0101afe	obj/kern/kernel.asm	/^f0101afe:	c7 44 24 0c 00 50 11 	movl   $0xf0115000,0xc(%esp)$/;"	l
f0101b05	obj/kern/kernel.asm	/^f0101b05:	f0 $/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	c7 44 24 08 28 60 10 	movl   $0xf0106028,0x8(%esp)$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	f0 $/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	c7 44 24 04 87 01 00 	movl   $0x187,0x4(%esp)$/;"	l
f0101b15	obj/kern/kernel.asm	/^f0101b15:	00 $/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	e8 af e5 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	8d 84 1f 00 00 00 10 	lea    0x10000000(%edi,%ebx,1),%eax$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	39 c2                	cmp    %eax,%edx$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	3e 74 24             	je,pt  f0101b52 <check_boot_pgdir+0x202>$/;"	l
f0101b2e	obj/kern/kernel.asm	/^f0101b2e:	c7 44 24 0c 40 61 10 	movl   $0xf0106140,0xc(%esp)$/;"	l
f0101b35	obj/kern/kernel.asm	/^f0101b35:	f0 $/;"	l
f0101b36	obj/kern/kernel.asm	/^f0101b36:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101b3d	obj/kern/kernel.asm	/^f0101b3d:	f0 $/;"	l
f0101b3e	obj/kern/kernel.asm	/^f0101b3e:	c7 44 24 04 87 01 00 	movl   $0x187,0x4(%esp)$/;"	l
f0101b45	obj/kern/kernel.asm	/^f0101b45:	00 $/;"	l
f0101b46	obj/kern/kernel.asm	/^f0101b46:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	e8 7f e5 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101b52	obj/kern/kernel.asm	/^f0101b52:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101b58	obj/kern/kernel.asm	/^f0101b58:	81 fb ff 7f 00 00    	cmp    $0x7fff,%ebx$/;"	l
f0101b5e	obj/kern/kernel.asm	/^f0101b5e:	76 81                	jbe    f0101ae1 <check_boot_pgdir+0x191>$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	8d 83 45 fc ff ff    	lea    -0x3bb(%ebx),%eax$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0101b6e	obj/kern/kernel.asm	/^f0101b6e:	77 2f                	ja     f0101b9f <check_boot_pgdir+0x24f>$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	83 3c 9e 00          	cmpl   $0x0,(%esi,%ebx,4)$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	3e 0f 85 82 00 00 00 	jne,pt f0101bfd <check_boot_pgdir+0x2ad>$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	c7 44 24 0c 74 66 10 	movl   $0xf0106674,0xc(%esp)$/;"	l
f0101b82	obj/kern/kernel.asm	/^f0101b82:	f0 $/;"	l
f0101b83	obj/kern/kernel.asm	/^f0101b83:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101b8a	obj/kern/kernel.asm	/^f0101b8a:	f0 $/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	c7 44 24 04 91 01 00 	movl   $0x191,0x4(%esp)$/;"	l
f0101b92	obj/kern/kernel.asm	/^f0101b92:	00 $/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	e8 32 e5 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	81 fb bf 03 00 00    	cmp    $0x3bf,%ebx$/;"	l
f0101ba5	obj/kern/kernel.asm	/^f0101ba5:	76 2b                	jbe    f0101bd2 <check_boot_pgdir+0x282>$/;"	l
f0101ba7	obj/kern/kernel.asm	/^f0101ba7:	83 3c 9e 00          	cmpl   $0x0,(%esi,%ebx,4)$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	3e 75 4f             	jne,pt f0101bfd <check_boot_pgdir+0x2ad>$/;"	l
f0101bae	obj/kern/kernel.asm	/^f0101bae:	c7 44 24 0c 74 66 10 	movl   $0xf0106674,0xc(%esp)$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	f0 $/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	f0 $/;"	l
f0101bbe	obj/kern/kernel.asm	/^f0101bbe:	c7 44 24 04 95 01 00 	movl   $0x195,0x4(%esp)$/;"	l
f0101bc5	obj/kern/kernel.asm	/^f0101bc5:	00 $/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101bcd	obj/kern/kernel.asm	/^f0101bcd:	e8 ff e4 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101bd2	obj/kern/kernel.asm	/^f0101bd2:	83 3c 9e 00          	cmpl   $0x0,(%esi,%ebx,4)$/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	3e 74 24             	je,pt  f0101bfd <check_boot_pgdir+0x2ad>$/;"	l
f0101bd9	obj/kern/kernel.asm	/^f0101bd9:	c7 44 24 0c 7d 66 10 	movl   $0xf010667d,0xc(%esp)$/;"	l
f0101be0	obj/kern/kernel.asm	/^f0101be0:	f0 $/;"	l
f0101be1	obj/kern/kernel.asm	/^f0101be1:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	f0 $/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	c7 44 24 04 97 01 00 	movl   $0x197,0x4(%esp)$/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	00 $/;"	l
f0101bf1	obj/kern/kernel.asm	/^f0101bf1:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	e8 d4 e4 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101c00	obj/kern/kernel.asm	/^f0101c00:	81 fb ff 03 00 00    	cmp    $0x3ff,%ebx$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	0f 86 59 ff ff ff    	jbe    f0101b65 <check_boot_pgdir+0x215>$/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	c7 04 24 88 61 10 f0 	movl   $0xf0106188,(%esp)$/;"	l
f0101c13	obj/kern/kernel.asm	/^f0101c13:	e8 f2 1e 00 00       	call   f0103b0a <cprintf>$/;"	l
f0101c18	obj/kern/kernel.asm	/^f0101c18:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101c1b	obj/kern/kernel.asm	/^f0101c1b:	5b                   	pop    %ebx$/;"	l
f0101c1c	obj/kern/kernel.asm	/^f0101c1c:	5e                   	pop    %esi$/;"	l
f0101c1d	obj/kern/kernel.asm	/^f0101c1d:	5f                   	pop    %edi$/;"	l
f0101c1e	obj/kern/kernel.asm	/^f0101c1e:	5d                   	pop    %ebp$/;"	l
f0101c1f	obj/kern/kernel.asm	/^f0101c1f:	c3                   	ret    $/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20 <check_va2pa>:$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	55                   	push   %ebp$/;"	l
f0101c21	obj/kern/kernel.asm	/^f0101c21:	89 e5                	mov    %esp,%ebp$/;"	l
f0101c23	obj/kern/kernel.asm	/^f0101c23:	53                   	push   %ebx$/;"	l
f0101c24	obj/kern/kernel.asm	/^f0101c24:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	89 d8                	mov    %ebx,%eax$/;"	l
f0101c2c	obj/kern/kernel.asm	/^f0101c2c:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0101c2f	obj/kern/kernel.asm	/^f0101c2f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0101c32	obj/kern/kernel.asm	/^f0101c32:	03 45 08             	add    0x8(%ebp),%eax$/;"	l
f0101c35	obj/kern/kernel.asm	/^f0101c35:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f0101c3a	obj/kern/kernel.asm	/^f0101c3a:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0101c3d	obj/kern/kernel.asm	/^f0101c3d:	74 64                	je     f0101ca3 <check_va2pa+0x83>$/;"	l
f0101c3f	obj/kern/kernel.asm	/^f0101c3f:	8b 10                	mov    (%eax),%edx$/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101c47	obj/kern/kernel.asm	/^f0101c47:	89 d0                	mov    %edx,%eax$/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f0101c52	obj/kern/kernel.asm	/^f0101c52:	3e 72 20             	jb,pt  f0101c75 <check_va2pa+0x55>$/;"	l
f0101c55	obj/kern/kernel.asm	/^f0101c55:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101c59	obj/kern/kernel.asm	/^f0101c59:	c7 44 24 08 4c 60 10 	movl   $0xf010604c,0x8(%esp)$/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	f0 $/;"	l
f0101c61	obj/kern/kernel.asm	/^f0101c61:	c7 44 24 04 ab 01 00 	movl   $0x1ab,0x4(%esp)$/;"	l
f0101c68	obj/kern/kernel.asm	/^f0101c68:	00 $/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101c70	obj/kern/kernel.asm	/^f0101c70:	e8 5c e4 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101c75	obj/kern/kernel.asm	/^f0101c75:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0101c7b	obj/kern/kernel.asm	/^f0101c7b:	89 d8                	mov    %ebx,%eax$/;"	l
f0101c7d	obj/kern/kernel.asm	/^f0101c7d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101c80	obj/kern/kernel.asm	/^f0101c80:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0101c85	obj/kern/kernel.asm	/^f0101c85:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f0101c8a	obj/kern/kernel.asm	/^f0101c8a:	f6 04 82 01          	testb  $0x1,(%edx,%eax,4)$/;"	l
f0101c8e	obj/kern/kernel.asm	/^f0101c8e:	74 13                	je     f0101ca3 <check_va2pa+0x83>$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	89 d8                	mov    %ebx,%eax$/;"	l
f0101c92	obj/kern/kernel.asm	/^f0101c92:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101c95	obj/kern/kernel.asm	/^f0101c95:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0101c9a	obj/kern/kernel.asm	/^f0101c9a:	8b 0c 82             	mov    (%edx,%eax,4),%ecx$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0101ca3	obj/kern/kernel.asm	/^f0101ca3:	89 c8                	mov    %ecx,%eax$/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	5b                   	pop    %ebx$/;"	l
f0101ca9	obj/kern/kernel.asm	/^f0101ca9:	5d                   	pop    %ebp$/;"	l
f0101caa	obj/kern/kernel.asm	/^f0101caa:	c3                   	ret    $/;"	l
f0101cab	obj/kern/kernel.asm	/^f0101cab <page_init>:$/;"	l
f0101cab	obj/kern/kernel.asm	/^f0101cab:	55                   	push   %ebp$/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	89 e5                	mov    %esp,%ebp$/;"	l
f0101cae	obj/kern/kernel.asm	/^f0101cae:	53                   	push   %ebx$/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101cb2	obj/kern/kernel.asm	/^f0101cb2:	c7 05 18 36 21 f0 00 	movl   $0x0,0xf0213618$/;"	l
f0101cb9	obj/kern/kernel.asm	/^f0101cb9:	00 00 00 $/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	a1 cc 42 21 f0       	mov    0xf02142cc,%eax$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	66 c7 40 08 01 00    	movw   $0x1,0x8(%eax)$/;"	l
f0101cc7	obj/kern/kernel.asm	/^f0101cc7:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0101ccc	obj/kern/kernel.asm	/^f0101ccc:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0101ccf	obj/kern/kernel.asm	/^f0101ccf:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx$/;"	l
f0101cd6	obj/kern/kernel.asm	/^f0101cd6:	a1 cc 42 21 f0       	mov    0xf02142cc,%eax$/;"	l
f0101cdb	obj/kern/kernel.asm	/^f0101cdb:	66 c7 44 01 08 00 00 	movw   $0x0,0x8(%ecx,%eax,1)$/;"	l
f0101ce2	obj/kern/kernel.asm	/^f0101ce2:	8b 15 18 36 21 f0    	mov    0xf0213618,%edx$/;"	l
f0101ce8	obj/kern/kernel.asm	/^f0101ce8:	a1 cc 42 21 f0       	mov    0xf02142cc,%eax$/;"	l
f0101ced	obj/kern/kernel.asm	/^f0101ced:	89 14 01             	mov    %edx,(%ecx,%eax,1)$/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	85 d2                	test   %edx,%edx$/;"	l
f0101cf2	obj/kern/kernel.asm	/^f0101cf2:	74 10                	je     f0101d04 <page_init+0x59>$/;"	l
f0101cf4	obj/kern/kernel.asm	/^f0101cf4:	89 ca                	mov    %ecx,%edx$/;"	l
f0101cf6	obj/kern/kernel.asm	/^f0101cf6:	03 15 cc 42 21 f0    	add    0xf02142cc,%edx$/;"	l
f0101cfc	obj/kern/kernel.asm	/^f0101cfc:	a1 18 36 21 f0       	mov    0xf0213618,%eax$/;"	l
f0101d01	obj/kern/kernel.asm	/^f0101d01:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0101d04	obj/kern/kernel.asm	/^f0101d04:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0101d0a	obj/kern/kernel.asm	/^f0101d0a:	8b 0d cc 42 21 f0    	mov    0xf02142cc,%ecx$/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	8d 14 08             	lea    (%eax,%ecx,1),%edx$/;"	l
f0101d13	obj/kern/kernel.asm	/^f0101d13:	89 15 18 36 21 f0    	mov    %edx,0xf0213618$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	c7 44 08 04 18 36 21 	movl   $0xf0213618,0x4(%eax,%ecx,1)$/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	f0 $/;"	l
f0101d21	obj/kern/kernel.asm	/^f0101d21:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101d24	obj/kern/kernel.asm	/^f0101d24:	81 fb 9f 00 00 00    	cmp    $0x9f,%ebx$/;"	l
f0101d2a	obj/kern/kernel.asm	/^f0101d2a:	7e a0                	jle    f0101ccc <page_init+0x21>$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f0101d32	obj/kern/kernel.asm	/^f0101d32:	7f 2e                	jg     f0101d62 <page_init+0xb7>$/;"	l
f0101d34	obj/kern/kernel.asm	/^f0101d34:	8d 14 5b             	lea    (%ebx,%ebx,2),%edx$/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	a1 cc 42 21 f0       	mov    0xf02142cc,%eax$/;"	l
f0101d3c	obj/kern/kernel.asm	/^f0101d3c:	66 c7 44 90 08 01 00 	movw   $0x1,0x8(%eax,%edx,4)$/;"	l
f0101d43	obj/kern/kernel.asm	/^f0101d43:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101d46	obj/kern/kernel.asm	/^f0101d46:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f0101d4c	obj/kern/kernel.asm	/^f0101d4c:	7e e6                	jle    f0101d34 <page_init+0x89>$/;"	l
f0101d4e	obj/kern/kernel.asm	/^f0101d4e:	eb 12                	jmp    f0101d62 <page_init+0xb7>$/;"	l
f0101d50	obj/kern/kernel.asm	/^f0101d50:	8d 14 5b             	lea    (%ebx,%ebx,2),%edx$/;"	l
f0101d53	obj/kern/kernel.asm	/^f0101d53:	a1 cc 42 21 f0       	mov    0xf02142cc,%eax$/;"	l
f0101d58	obj/kern/kernel.asm	/^f0101d58:	66 c7 44 90 08 01 00 	movw   $0x1,0x8(%eax,%edx,4)$/;"	l
f0101d5f	obj/kern/kernel.asm	/^f0101d5f:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101d62	obj/kern/kernel.asm	/^f0101d62:	a1 14 36 21 f0       	mov    0xf0213614,%eax$/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	3e 77 20             	ja,pt  f0101d8f <page_init+0xe4>$/;"	l
f0101d6f	obj/kern/kernel.asm	/^f0101d6f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101d73	obj/kern/kernel.asm	/^f0101d73:	c7 44 24 08 28 60 10 	movl   $0xf0106028,0x8(%esp)$/;"	l
f0101d7a	obj/kern/kernel.asm	/^f0101d7a:	f0 $/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	c7 44 24 04 d6 01 00 	movl   $0x1d6,0x4(%esp)$/;"	l
f0101d82	obj/kern/kernel.asm	/^f0101d82:	00 $/;"	l
f0101d83	obj/kern/kernel.asm	/^f0101d83:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101d8a	obj/kern/kernel.asm	/^f0101d8a:	e8 42 e3 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101d8f	obj/kern/kernel.asm	/^f0101d8f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101d97	obj/kern/kernel.asm	/^f0101d97:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101d99	obj/kern/kernel.asm	/^f0101d99:	72 b5                	jb     f0101d50 <page_init+0xa5>$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	3b 1d c0 42 21 f0    	cmp    0xf02142c0,%ebx$/;"	l
f0101da1	obj/kern/kernel.asm	/^f0101da1:	73 60                	jae    f0101e03 <page_init+0x158>$/;"	l
f0101da3	obj/kern/kernel.asm	/^f0101da3:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0101da6	obj/kern/kernel.asm	/^f0101da6:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	a1 cc 42 21 f0       	mov    0xf02142cc,%eax$/;"	l
f0101db2	obj/kern/kernel.asm	/^f0101db2:	66 c7 44 01 08 00 00 	movw   $0x0,0x8(%ecx,%eax,1)$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	8b 15 18 36 21 f0    	mov    0xf0213618,%edx$/;"	l
f0101dbf	obj/kern/kernel.asm	/^f0101dbf:	a1 cc 42 21 f0       	mov    0xf02142cc,%eax$/;"	l
f0101dc4	obj/kern/kernel.asm	/^f0101dc4:	89 14 01             	mov    %edx,(%ecx,%eax,1)$/;"	l
f0101dc7	obj/kern/kernel.asm	/^f0101dc7:	85 d2                	test   %edx,%edx$/;"	l
f0101dc9	obj/kern/kernel.asm	/^f0101dc9:	74 10                	je     f0101ddb <page_init+0x130>$/;"	l
f0101dcb	obj/kern/kernel.asm	/^f0101dcb:	89 ca                	mov    %ecx,%edx$/;"	l
f0101dcd	obj/kern/kernel.asm	/^f0101dcd:	03 15 cc 42 21 f0    	add    0xf02142cc,%edx$/;"	l
f0101dd3	obj/kern/kernel.asm	/^f0101dd3:	a1 18 36 21 f0       	mov    0xf0213618,%eax$/;"	l
f0101dd8	obj/kern/kernel.asm	/^f0101dd8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0101ddb	obj/kern/kernel.asm	/^f0101ddb:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0101de1	obj/kern/kernel.asm	/^f0101de1:	8b 0d cc 42 21 f0    	mov    0xf02142cc,%ecx$/;"	l
f0101de7	obj/kern/kernel.asm	/^f0101de7:	8d 14 08             	lea    (%eax,%ecx,1),%edx$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	89 15 18 36 21 f0    	mov    %edx,0xf0213618$/;"	l
f0101df0	obj/kern/kernel.asm	/^f0101df0:	c7 44 08 04 18 36 21 	movl   $0xf0213618,0x4(%eax,%ecx,1)$/;"	l
f0101df7	obj/kern/kernel.asm	/^f0101df7:	f0 $/;"	l
f0101df8	obj/kern/kernel.asm	/^f0101df8:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101dfb	obj/kern/kernel.asm	/^f0101dfb:	3b 1d c0 42 21 f0    	cmp    0xf02142c0,%ebx$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	72 a0                	jb     f0101da3 <page_init+0xf8>$/;"	l
f0101e03	obj/kern/kernel.asm	/^f0101e03:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101e06	obj/kern/kernel.asm	/^f0101e06:	5b                   	pop    %ebx$/;"	l
f0101e07	obj/kern/kernel.asm	/^f0101e07:	5d                   	pop    %ebp$/;"	l
f0101e08	obj/kern/kernel.asm	/^f0101e08:	c3                   	ret    $/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09 <page_initpp>:$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	55                   	push   %ebp$/;"	l
f0101e0a	obj/kern/kernel.asm	/^f0101e0a:	89 e5                	mov    %esp,%ebp$/;"	l
f0101e0c	obj/kern/kernel.asm	/^f0101e0c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101e0f	obj/kern/kernel.asm	/^f0101e0f:	c7 44 24 08 0c 00 00 	movl   $0xc,0x8(%esp)$/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	00 $/;"	l
f0101e17	obj/kern/kernel.asm	/^f0101e17:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101e1e	obj/kern/kernel.asm	/^f0101e1e:	00 $/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101e22	obj/kern/kernel.asm	/^f0101e22:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e25	obj/kern/kernel.asm	/^f0101e25:	e8 f6 36 00 00       	call   f0105520 <memset>$/;"	l
f0101e2a	obj/kern/kernel.asm	/^f0101e2a:	c9                   	leave  $/;"	l
f0101e2b	obj/kern/kernel.asm	/^f0101e2b:	c3                   	ret    $/;"	l
f0101e2c	obj/kern/kernel.asm	/^f0101e2c <page_alloc>:$/;"	l
f0101e2c	obj/kern/kernel.asm	/^f0101e2c:	55                   	push   %ebp$/;"	l
f0101e2d	obj/kern/kernel.asm	/^f0101e2d:	89 e5                	mov    %esp,%ebp$/;"	l
f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	53                   	push   %ebx$/;"	l
f0101e30	obj/kern/kernel.asm	/^f0101e30:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e33	obj/kern/kernel.asm	/^f0101e33:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101e38	obj/kern/kernel.asm	/^f0101e38:	83 3d 18 36 21 f0 00 	cmpl   $0x0,0xf0213618$/;"	l
f0101e3f	obj/kern/kernel.asm	/^f0101e3f:	74 2c                	je     f0101e6d <page_alloc+0x41>$/;"	l
f0101e41	obj/kern/kernel.asm	/^f0101e41:	8b 1d 18 36 21 f0    	mov    0xf0213618,%ebx$/;"	l
f0101e47	obj/kern/kernel.asm	/^f0101e47:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0101e4a	obj/kern/kernel.asm	/^f0101e4a:	74 08                	je     f0101e54 <page_alloc+0x28>$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	8b 13                	mov    (%ebx),%edx$/;"	l
f0101e4e	obj/kern/kernel.asm	/^f0101e4e:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0101e51	obj/kern/kernel.asm	/^f0101e51:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	8b 53 04             	mov    0x4(%ebx),%edx$/;"	l
f0101e57	obj/kern/kernel.asm	/^f0101e57:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101e59	obj/kern/kernel.asm	/^f0101e59:	89 02                	mov    %eax,(%edx)$/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101e5e	obj/kern/kernel.asm	/^f0101e5e:	e8 a6 ff ff ff       	call   f0101e09 <page_initpp>$/;"	l
f0101e63	obj/kern/kernel.asm	/^f0101e63:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101e66	obj/kern/kernel.asm	/^f0101e66:	89 18                	mov    %ebx,(%eax)$/;"	l
f0101e68	obj/kern/kernel.asm	/^f0101e68:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101e6d	obj/kern/kernel.asm	/^f0101e6d:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	5b                   	pop    %ebx$/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	5d                   	pop    %ebp$/;"	l
f0101e72	obj/kern/kernel.asm	/^f0101e72:	c3                   	ret    $/;"	l
f0101e73	obj/kern/kernel.asm	/^f0101e73 <page_free>:$/;"	l
f0101e73	obj/kern/kernel.asm	/^f0101e73:	55                   	push   %ebp$/;"	l
f0101e74	obj/kern/kernel.asm	/^f0101e74:	89 e5                	mov    %esp,%ebp$/;"	l
f0101e76	obj/kern/kernel.asm	/^f0101e76:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101e79	obj/kern/kernel.asm	/^f0101e79:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101e7c	obj/kern/kernel.asm	/^f0101e7c:	66 83 7a 08 00       	cmpw   $0x0,0x8(%edx)$/;"	l
f0101e81	obj/kern/kernel.asm	/^f0101e81:	3e 74 1c             	je,pt  f0101ea0 <page_free+0x2d>$/;"	l
f0101e84	obj/kern/kernel.asm	/^f0101e84:	c7 44 24 08 a8 61 10 	movl   $0xf01061a8,0x8(%esp)$/;"	l
f0101e8b	obj/kern/kernel.asm	/^f0101e8b:	f0 $/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	c7 44 24 04 16 02 00 	movl   $0x216,0x4(%esp)$/;"	l
f0101e93	obj/kern/kernel.asm	/^f0101e93:	00 $/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101e9b	obj/kern/kernel.asm	/^f0101e9b:	e8 31 e2 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101ea0	obj/kern/kernel.asm	/^f0101ea0:	a1 18 36 21 f0       	mov    0xf0213618,%eax$/;"	l
f0101ea5	obj/kern/kernel.asm	/^f0101ea5:	89 02                	mov    %eax,(%edx)$/;"	l
f0101ea7	obj/kern/kernel.asm	/^f0101ea7:	85 c0                	test   %eax,%eax$/;"	l
f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	74 08                	je     f0101eb3 <page_free+0x40>$/;"	l
f0101eab	obj/kern/kernel.asm	/^f0101eab:	a1 18 36 21 f0       	mov    0xf0213618,%eax$/;"	l
f0101eb0	obj/kern/kernel.asm	/^f0101eb0:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0101eb3	obj/kern/kernel.asm	/^f0101eb3:	89 15 18 36 21 f0    	mov    %edx,0xf0213618$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	c7 42 04 18 36 21 f0 	movl   $0xf0213618,0x4(%edx)$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	c9                   	leave  $/;"	l
f0101ec1	obj/kern/kernel.asm	/^f0101ec1:	c3                   	ret    $/;"	l
f0101ec2	obj/kern/kernel.asm	/^f0101ec2 <page_decref>:$/;"	l
f0101ec2	obj/kern/kernel.asm	/^f0101ec2:	55                   	push   %ebp$/;"	l
f0101ec3	obj/kern/kernel.asm	/^f0101ec3:	89 e5                	mov    %esp,%ebp$/;"	l
f0101ec5	obj/kern/kernel.asm	/^f0101ec5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101ec8	obj/kern/kernel.asm	/^f0101ec8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101ecb	obj/kern/kernel.asm	/^f0101ecb:	66 83 68 08 01       	subw   $0x1,0x8(%eax)$/;"	l
f0101ed0	obj/kern/kernel.asm	/^f0101ed0:	66 83 78 08 00       	cmpw   $0x0,0x8(%eax)$/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	3e 75 08             	jne,pt f0101ee0 <page_decref+0x1e>$/;"	l
f0101ed8	obj/kern/kernel.asm	/^f0101ed8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101edb	obj/kern/kernel.asm	/^f0101edb:	e8 93 ff ff ff       	call   f0101e73 <page_free>$/;"	l
f0101ee0	obj/kern/kernel.asm	/^f0101ee0:	c9                   	leave  $/;"	l
f0101ee1	obj/kern/kernel.asm	/^f0101ee1:	c3                   	ret    $/;"	l
f0101ee2	obj/kern/kernel.asm	/^f0101ee2 <pgdir_walk>:$/;"	l
f0101ee2	obj/kern/kernel.asm	/^f0101ee2:	55                   	push   %ebp$/;"	l
f0101ee3	obj/kern/kernel.asm	/^f0101ee3:	89 e5                	mov    %esp,%ebp$/;"	l
f0101ee5	obj/kern/kernel.asm	/^f0101ee5:	56                   	push   %esi$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	53                   	push   %ebx$/;"	l
f0101ee7	obj/kern/kernel.asm	/^f0101ee7:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0101eea	obj/kern/kernel.asm	/^f0101eea:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101ef0	obj/kern/kernel.asm	/^f0101ef0:	89 d8                	mov    %ebx,%eax$/;"	l
f0101ef2	obj/kern/kernel.asm	/^f0101ef2:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	8b 04 86             	mov    (%esi,%eax,4),%eax$/;"	l
f0101ef8	obj/kern/kernel.asm	/^f0101ef8:	a8 01                	test   $0x1,%al$/;"	l
f0101efa	obj/kern/kernel.asm	/^f0101efa:	74 4c                	je     f0101f48 <pgdir_walk+0x66>$/;"	l
f0101efc	obj/kern/kernel.asm	/^f0101efc:	89 c2                	mov    %eax,%edx$/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	89 d0                	mov    %edx,%eax$/;"	l
f0101f06	obj/kern/kernel.asm	/^f0101f06:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f0101f0f	obj/kern/kernel.asm	/^f0101f0f:	3e 72 20             	jb,pt  f0101f32 <pgdir_walk+0x50>$/;"	l
f0101f12	obj/kern/kernel.asm	/^f0101f12:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101f16	obj/kern/kernel.asm	/^f0101f16:	c7 44 24 08 4c 60 10 	movl   $0xf010604c,0x8(%esp)$/;"	l
f0101f1d	obj/kern/kernel.asm	/^f0101f1d:	f0 $/;"	l
f0101f1e	obj/kern/kernel.asm	/^f0101f1e:	c7 44 24 04 39 02 00 	movl   $0x239,0x4(%esp)$/;"	l
f0101f25	obj/kern/kernel.asm	/^f0101f25:	00 $/;"	l
f0101f26	obj/kern/kernel.asm	/^f0101f26:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0101f2d	obj/kern/kernel.asm	/^f0101f2d:	e8 9f e1 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101f32	obj/kern/kernel.asm	/^f0101f32:	89 d8                	mov    %ebx,%eax$/;"	l
f0101f34	obj/kern/kernel.asm	/^f0101f34:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101f37	obj/kern/kernel.asm	/^f0101f37:	25 fc 0f 00 00       	and    $0xffc,%eax$/;"	l
f0101f3c	obj/kern/kernel.asm	/^f0101f3c:	8d 94 02 00 00 00 f0 	lea    -0x10000000(%edx,%eax,1),%edx$/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	e9 fa 00 00 00       	jmp    f0102042 <pgdir_walk+0x160>$/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101f51	obj/kern/kernel.asm	/^f0101f51:	0f 84 eb 00 00 00    	je     f0102042 <pgdir_walk+0x160>$/;"	l
f0101f57	obj/kern/kernel.asm	/^f0101f57:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101f5a	obj/kern/kernel.asm	/^f0101f5a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	e8 ca fe ff ff       	call   f0101e2c <page_alloc>$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	85 c0                	test   %eax,%eax$/;"	l
f0101f69	obj/kern/kernel.asm	/^f0101f69:	0f 85 d3 00 00 00    	jne    f0102042 <pgdir_walk+0x160>$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101f72	obj/kern/kernel.asm	/^f0101f72:	66 c7 40 08 01 00    	movw   $0x1,0x8(%eax)$/;"	l
f0101f78	obj/kern/kernel.asm	/^f0101f78:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101f7b	obj/kern/kernel.asm	/^f0101f7b:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f0101f81	obj/kern/kernel.asm	/^f0101f81:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0101f8a	obj/kern/kernel.asm	/^f0101f8a:	89 c2                	mov    %eax,%edx$/;"	l
f0101f8c	obj/kern/kernel.asm	/^f0101f8c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f8f	obj/kern/kernel.asm	/^f0101f8f:	89 d0                	mov    %edx,%eax$/;"	l
f0101f91	obj/kern/kernel.asm	/^f0101f91:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101f94	obj/kern/kernel.asm	/^f0101f94:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f0101f9a	obj/kern/kernel.asm	/^f0101f9a:	3e 72 20             	jb,pt  f0101fbd <pgdir_walk+0xdb>$/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1:	c7 44 24 08 4c 60 10 	movl   $0xf010604c,0x8(%esp)$/;"	l
f0101fa8	obj/kern/kernel.asm	/^f0101fa8:	f0 $/;"	l
f0101fa9	obj/kern/kernel.asm	/^f0101fa9:	c7 44 24 04 5a 00 00 	movl   $0x5a,0x4(%esp)$/;"	l
f0101fb0	obj/kern/kernel.asm	/^f0101fb0:	00 $/;"	l
f0101fb1	obj/kern/kernel.asm	/^f0101fb1:	c7 04 24 2c 5c 10 f0 	movl   $0xf0105c2c,(%esp)$/;"	l
f0101fb8	obj/kern/kernel.asm	/^f0101fb8:	e8 14 e1 ff ff       	call   f01000d1 <_panic>$/;"	l
f0101fbd	obj/kern/kernel.asm	/^f0101fbd:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0101fc3	obj/kern/kernel.asm	/^f0101fc3:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101fca	obj/kern/kernel.asm	/^f0101fca:	00 $/;"	l
f0101fcb	obj/kern/kernel.asm	/^f0101fcb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101fd2	obj/kern/kernel.asm	/^f0101fd2:	00 $/;"	l
f0101fd3	obj/kern/kernel.asm	/^f0101fd3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101fd6	obj/kern/kernel.asm	/^f0101fd6:	e8 45 35 00 00       	call   f0105520 <memset>$/;"	l
f0101fdb	obj/kern/kernel.asm	/^f0101fdb:	89 da                	mov    %ebx,%edx$/;"	l
f0101fdd	obj/kern/kernel.asm	/^f0101fdd:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0101fe0	obj/kern/kernel.asm	/^f0101fe0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101fe3	obj/kern/kernel.asm	/^f0101fe3:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	83 c8 07             	or     $0x7,%eax$/;"	l
f0101ff8	obj/kern/kernel.asm	/^f0101ff8:	89 04 96             	mov    %eax,(%esi,%edx,4)$/;"	l
f0101ffb	obj/kern/kernel.asm	/^f0101ffb:	89 c2                	mov    %eax,%edx$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102003	obj/kern/kernel.asm	/^f0102003:	89 d0                	mov    %edx,%eax$/;"	l
f0102005	obj/kern/kernel.asm	/^f0102005:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102008	obj/kern/kernel.asm	/^f0102008:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	3e 72 20             	jb,pt  f0102031 <pgdir_walk+0x14f>$/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102015	obj/kern/kernel.asm	/^f0102015:	c7 44 24 08 4c 60 10 	movl   $0xf010604c,0x8(%esp)$/;"	l
f010201c	obj/kern/kernel.asm	/^f010201c:	f0 $/;"	l
f010201d	obj/kern/kernel.asm	/^f010201d:	c7 44 24 04 48 02 00 	movl   $0x248,0x4(%esp)$/;"	l
f0102024	obj/kern/kernel.asm	/^f0102024:	00 $/;"	l
f0102025	obj/kern/kernel.asm	/^f0102025:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	e8 a0 e0 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102031	obj/kern/kernel.asm	/^f0102031:	89 d8                	mov    %ebx,%eax$/;"	l
f0102033	obj/kern/kernel.asm	/^f0102033:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	25 fc 0f 00 00       	and    $0xffc,%eax$/;"	l
f010203b	obj/kern/kernel.asm	/^f010203b:	8d 94 02 00 00 00 f0 	lea    -0x10000000(%edx,%eax,1),%edx$/;"	l
f0102042	obj/kern/kernel.asm	/^f0102042:	89 d0                	mov    %edx,%eax$/;"	l
f0102044	obj/kern/kernel.asm	/^f0102044:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102047	obj/kern/kernel.asm	/^f0102047:	5b                   	pop    %ebx$/;"	l
f0102048	obj/kern/kernel.asm	/^f0102048:	5e                   	pop    %esi$/;"	l
f0102049	obj/kern/kernel.asm	/^f0102049:	5d                   	pop    %ebp$/;"	l
f010204a	obj/kern/kernel.asm	/^f010204a:	c3                   	ret    $/;"	l
f010204b	obj/kern/kernel.asm	/^f010204b <page_insert>:$/;"	l
f010204b	obj/kern/kernel.asm	/^f010204b:	55                   	push   %ebp$/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	89 e5                	mov    %esp,%ebp$/;"	l
f010204e	obj/kern/kernel.asm	/^f010204e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0102051	obj/kern/kernel.asm	/^f0102051:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0102057	obj/kern/kernel.asm	/^f0102057:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f010205a	obj/kern/kernel.asm	/^f010205a:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010205d	obj/kern/kernel.asm	/^f010205d:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0102060	obj/kern/kernel.asm	/^f0102060:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102067	obj/kern/kernel.asm	/^f0102067:	00 $/;"	l
f0102068	obj/kern/kernel.asm	/^f0102068:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010206f	obj/kern/kernel.asm	/^f010206f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102072	obj/kern/kernel.asm	/^f0102072:	e8 6b fe ff ff       	call   f0101ee2 <pgdir_walk>$/;"	l
f0102077	obj/kern/kernel.asm	/^f0102077:	89 c3                	mov    %eax,%ebx$/;"	l
f0102079	obj/kern/kernel.asm	/^f0102079:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010207e	obj/kern/kernel.asm	/^f010207e:	85 db                	test   %ebx,%ebx$/;"	l
f0102080	obj/kern/kernel.asm	/^f0102080:	74 71                	je     f01020f3 <page_insert+0xa8>$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	8b 03                	mov    (%ebx),%eax$/;"	l
f0102084	obj/kern/kernel.asm	/^f0102084:	a8 01                	test   $0x1,%al$/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	74 36                	je     f01020be <page_insert+0x73>$/;"	l
f0102088	obj/kern/kernel.asm	/^f0102088:	89 c2                	mov    %eax,%edx$/;"	l
f010208a	obj/kern/kernel.asm	/^f010208a:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102090	obj/kern/kernel.asm	/^f0102090:	89 f0                	mov    %esi,%eax$/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f0102098	obj/kern/kernel.asm	/^f0102098:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010209b	obj/kern/kernel.asm	/^f010209b:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f01020a1	obj/kern/kernel.asm	/^f01020a1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01020a4	obj/kern/kernel.asm	/^f01020a4:	39 c2                	cmp    %eax,%edx$/;"	l
f01020a6	obj/kern/kernel.asm	/^f01020a6:	74 11                	je     f01020b9 <page_insert+0x6e>$/;"	l
f01020a8	obj/kern/kernel.asm	/^f01020a8:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01020ac	obj/kern/kernel.asm	/^f01020ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01020af	obj/kern/kernel.asm	/^f01020af:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020b2	obj/kern/kernel.asm	/^f01020b2:	e8 25 01 00 00       	call   f01021dc <page_remove>$/;"	l
f01020b7	obj/kern/kernel.asm	/^f01020b7:	eb 05                	jmp    f01020be <page_insert+0x73>$/;"	l
f01020b9	obj/kern/kernel.asm	/^f01020b9:	66 83 6e 08 01       	subw   $0x1,0x8(%esi)$/;"	l
f01020be	obj/kern/kernel.asm	/^f01020be:	89 f0                	mov    %esi,%eax$/;"	l
f01020c0	obj/kern/kernel.asm	/^f01020c0:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f01020c6	obj/kern/kernel.asm	/^f01020c6:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f01020cf	obj/kern/kernel.asm	/^f01020cf:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	0b 45 14             	or     0x14(%ebp),%eax$/;"	l
f01020d5	obj/kern/kernel.asm	/^f01020d5:	83 c8 01             	or     $0x1,%eax$/;"	l
f01020d8	obj/kern/kernel.asm	/^f01020d8:	89 03                	mov    %eax,(%ebx)$/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	66 83 46 08 01       	addw   $0x1,0x8(%esi)$/;"	l
f01020df	obj/kern/kernel.asm	/^f01020df:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01020e3	obj/kern/kernel.asm	/^f01020e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01020e6	obj/kern/kernel.asm	/^f01020e6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020e9	obj/kern/kernel.asm	/^f01020e9:	e8 3e 01 00 00       	call   f010222c <tlb_invalidate>$/;"	l
f01020ee	obj/kern/kernel.asm	/^f01020ee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01020f3	obj/kern/kernel.asm	/^f01020f3:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01020f9	obj/kern/kernel.asm	/^f01020f9:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	89 ec                	mov    %ebp,%esp$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	5d                   	pop    %ebp$/;"	l
f01020ff	obj/kern/kernel.asm	/^f01020ff:	c3                   	ret    $/;"	l
f0102100	obj/kern/kernel.asm	/^f0102100 <boot_map_segment>:$/;"	l
f0102100	obj/kern/kernel.asm	/^f0102100:	55                   	push   %ebp$/;"	l
f0102101	obj/kern/kernel.asm	/^f0102101:	89 e5                	mov    %esp,%ebp$/;"	l
f0102103	obj/kern/kernel.asm	/^f0102103:	57                   	push   %edi$/;"	l
f0102104	obj/kern/kernel.asm	/^f0102104:	56                   	push   %esi$/;"	l
f0102105	obj/kern/kernel.asm	/^f0102105:	53                   	push   %ebx$/;"	l
f0102106	obj/kern/kernel.asm	/^f0102106:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102109	obj/kern/kernel.asm	/^f0102109:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010210c	obj/kern/kernel.asm	/^f010210c:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102114	obj/kern/kernel.asm	/^f0102114:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102116	obj/kern/kernel.asm	/^f0102116:	3e 73 32             	jae,pt f010214b <boot_map_segment+0x4b>$/;"	l
f0102119	obj/kern/kernel.asm	/^f0102119:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	00 $/;"	l
f0102121	obj/kern/kernel.asm	/^f0102121:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102124	obj/kern/kernel.asm	/^f0102124:	01 d8                	add    %ebx,%eax$/;"	l
f0102126	obj/kern/kernel.asm	/^f0102126:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010212a	obj/kern/kernel.asm	/^f010212a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010212d	obj/kern/kernel.asm	/^f010212d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	e8 ad fd ff ff       	call   f0101ee2 <pgdir_walk>$/;"	l
f0102135	obj/kern/kernel.asm	/^f0102135:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	01 da                	add    %ebx,%edx$/;"	l
f010213a	obj/kern/kernel.asm	/^f010213a:	09 fa                	or     %edi,%edx$/;"	l
f010213c	obj/kern/kernel.asm	/^f010213c:	83 ca 01             	or     $0x1,%edx$/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	89 10                	mov    %edx,(%eax)$/;"	l
f0102141	obj/kern/kernel.asm	/^f0102141:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102149	obj/kern/kernel.asm	/^f0102149:	72 ce                	jb     f0102119 <boot_map_segment+0x19>$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010214e	obj/kern/kernel.asm	/^f010214e:	5b                   	pop    %ebx$/;"	l
f010214f	obj/kern/kernel.asm	/^f010214f:	5e                   	pop    %esi$/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	5f                   	pop    %edi$/;"	l
f0102151	obj/kern/kernel.asm	/^f0102151:	5d                   	pop    %ebp$/;"	l
f0102152	obj/kern/kernel.asm	/^f0102152:	c3                   	ret    $/;"	l
f0102153	obj/kern/kernel.asm	/^f0102153 <page_lookup>:$/;"	l
f0102153	obj/kern/kernel.asm	/^f0102153:	55                   	push   %ebp$/;"	l
f0102154	obj/kern/kernel.asm	/^f0102154:	89 e5                	mov    %esp,%ebp$/;"	l
f0102156	obj/kern/kernel.asm	/^f0102156:	53                   	push   %ebx$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010215a	obj/kern/kernel.asm	/^f010215a:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010215d	obj/kern/kernel.asm	/^f010215d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102164	obj/kern/kernel.asm	/^f0102164:	00 $/;"	l
f0102165	obj/kern/kernel.asm	/^f0102165:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102168	obj/kern/kernel.asm	/^f0102168:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010216c	obj/kern/kernel.asm	/^f010216c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010216f	obj/kern/kernel.asm	/^f010216f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	e8 6b fd ff ff       	call   f0101ee2 <pgdir_walk>$/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010217c	obj/kern/kernel.asm	/^f010217c:	85 c0                	test   %eax,%eax$/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	74 54                	je     f01021d4 <page_lookup+0x81>$/;"	l
f0102180	obj/kern/kernel.asm	/^f0102180:	85 db                	test   %ebx,%ebx$/;"	l
f0102182	obj/kern/kernel.asm	/^f0102182:	74 02                	je     f0102186 <page_lookup+0x33>$/;"	l
f0102184	obj/kern/kernel.asm	/^f0102184:	89 03                	mov    %eax,(%ebx)$/;"	l
f0102186	obj/kern/kernel.asm	/^f0102186:	8b 00                	mov    (%eax),%eax$/;"	l
f0102188	obj/kern/kernel.asm	/^f0102188:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	a8 01                	test   $0x1,%al$/;"	l
f010218f	obj/kern/kernel.asm	/^f010218f:	74 43                	je     f01021d4 <page_lookup+0x81>$/;"	l
f0102191	obj/kern/kernel.asm	/^f0102191:	89 c2                	mov    %eax,%edx$/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102199	obj/kern/kernel.asm	/^f0102199:	89 d0                	mov    %edx,%eax$/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010219e	obj/kern/kernel.asm	/^f010219e:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f01021a4	obj/kern/kernel.asm	/^f01021a4:	3e 72 1c             	jb,pt  f01021c3 <page_lookup+0x70>$/;"	l
f01021a7	obj/kern/kernel.asm	/^f01021a7:	c7 44 24 08 5c 5f 10 	movl   $0xf0105f5c,0x8(%esp)$/;"	l
f01021ae	obj/kern/kernel.asm	/^f01021ae:	f0 $/;"	l
f01021af	obj/kern/kernel.asm	/^f01021af:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
f01021b6	obj/kern/kernel.asm	/^f01021b6:	00 $/;"	l
f01021b7	obj/kern/kernel.asm	/^f01021b7:	c7 04 24 2c 5c 10 f0 	movl   $0xf0105c2c,(%esp)$/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	e8 0e df ff ff       	call   f01000d1 <_panic>$/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	89 d0                	mov    %edx,%eax$/;"	l
f01021c5	obj/kern/kernel.asm	/^f01021c5:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01021c8	obj/kern/kernel.asm	/^f01021c8:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01021cb	obj/kern/kernel.asm	/^f01021cb:	8b 15 cc 42 21 f0    	mov    0xf02142cc,%edx$/;"	l
f01021d1	obj/kern/kernel.asm	/^f01021d1:	8d 14 82             	lea    (%edx,%eax,4),%edx$/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	89 d0                	mov    %edx,%eax$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	83 c4 14             	add    $0x14,%esp$/;"	l
f01021d9	obj/kern/kernel.asm	/^f01021d9:	5b                   	pop    %ebx$/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	5d                   	pop    %ebp$/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	c3                   	ret    $/;"	l
f01021dc	obj/kern/kernel.asm	/^f01021dc <page_remove>:$/;"	l
f01021dc	obj/kern/kernel.asm	/^f01021dc:	55                   	push   %ebp$/;"	l
f01021dd	obj/kern/kernel.asm	/^f01021dd:	89 e5                	mov    %esp,%ebp$/;"	l
f01021df	obj/kern/kernel.asm	/^f01021df:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f01021e5	obj/kern/kernel.asm	/^f01021e5:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f01021e8	obj/kern/kernel.asm	/^f01021e8:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01021ee	obj/kern/kernel.asm	/^f01021ee:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01021f1	obj/kern/kernel.asm	/^f01021f1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01021f5	obj/kern/kernel.asm	/^f01021f5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01021f9	obj/kern/kernel.asm	/^f01021f9:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01021fc	obj/kern/kernel.asm	/^f01021fc:	e8 52 ff ff ff       	call   f0102153 <page_lookup>$/;"	l
f0102201	obj/kern/kernel.asm	/^f0102201:	85 c0                	test   %eax,%eax$/;"	l
f0102203	obj/kern/kernel.asm	/^f0102203:	74 1d                	je     f0102222 <page_remove+0x46>$/;"	l
f0102205	obj/kern/kernel.asm	/^f0102205:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102208	obj/kern/kernel.asm	/^f0102208:	e8 b5 fc ff ff       	call   f0101ec2 <page_decref>$/;"	l
f010220d	obj/kern/kernel.asm	/^f010220d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102210	obj/kern/kernel.asm	/^f0102210:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102216	obj/kern/kernel.asm	/^f0102216:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010221a	obj/kern/kernel.asm	/^f010221a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	e8 0a 00 00 00       	call   f010222c <tlb_invalidate>$/;"	l
f0102222	obj/kern/kernel.asm	/^f0102222:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f0102225	obj/kern/kernel.asm	/^f0102225:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f0102228	obj/kern/kernel.asm	/^f0102228:	89 ec                	mov    %ebp,%esp$/;"	l
f010222a	obj/kern/kernel.asm	/^f010222a:	5d                   	pop    %ebp$/;"	l
f010222b	obj/kern/kernel.asm	/^f010222b:	c3                   	ret    $/;"	l
f010222c	obj/kern/kernel.asm	/^f010222c <tlb_invalidate>:$/;"	l
f010222c	obj/kern/kernel.asm	/^f010222c:	55                   	push   %ebp$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	89 e5                	mov    %esp,%ebp$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	83 3d 24 36 21 f0 00 	cmpl   $0x0,0xf0213624$/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	74 0f                	je     f010224a <tlb_invalidate+0x1e>$/;"	l
f010223b	obj/kern/kernel.asm	/^f010223b:	8b 15 24 36 21 f0    	mov    0xf0213624,%edx$/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102244	obj/kern/kernel.asm	/^f0102244:	39 42 5c             	cmp    %eax,0x5c(%edx)$/;"	l
f0102247	obj/kern/kernel.asm	/^f0102247:	3e 75 03             	jne,pt f010224d <tlb_invalidate+0x21>$/;"	l
f010224a	obj/kern/kernel.asm	/^f010224a:	0f 01 39             	invlpg (%ecx)$/;"	l
f010224d	obj/kern/kernel.asm	/^f010224d:	5d                   	pop    %ebp$/;"	l
f010224e	obj/kern/kernel.asm	/^f010224e:	c3                   	ret    $/;"	l
f010224f	obj/kern/kernel.asm	/^f010224f <user_mem_check>:$/;"	l
f010224f	obj/kern/kernel.asm	/^f010224f:	55                   	push   %ebp$/;"	l
f0102250	obj/kern/kernel.asm	/^f0102250:	89 e5                	mov    %esp,%ebp$/;"	l
f0102252	obj/kern/kernel.asm	/^f0102252:	57                   	push   %edi$/;"	l
f0102253	obj/kern/kernel.asm	/^f0102253:	56                   	push   %esi$/;"	l
f0102254	obj/kern/kernel.asm	/^f0102254:	53                   	push   %ebx$/;"	l
f0102255	obj/kern/kernel.asm	/^f0102255:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0102258	obj/kern/kernel.asm	/^f0102258:	81 7d 0c 00 00 80 ef 	cmpl   $0xef800000,0xc(%ebp)$/;"	l
f010225f	obj/kern/kernel.asm	/^f010225f:	3e 0f 86 81 00 00 00 	jbe,pt f01022e7 <user_mem_check+0x98>$/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	a3 1c 36 21 f0       	mov    %eax,0xf021361c$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102273	obj/kern/kernel.asm	/^f0102273:	e9 04 01 00 00       	jmp    f010237c <user_mem_check+0x12d>$/;"	l
f0102278	obj/kern/kernel.asm	/^f0102278:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010227b	obj/kern/kernel.asm	/^f010227b:	8d 04 0a             	lea    (%edx,%ecx,1),%eax$/;"	l
f010227e	obj/kern/kernel.asm	/^f010227e:	a3 1c 36 21 f0       	mov    %eax,0xf021361c$/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102288	obj/kern/kernel.asm	/^f0102288:	e9 ef 00 00 00       	jmp    f010237c <user_mem_check+0x12d>$/;"	l
f010228d	obj/kern/kernel.asm	/^f010228d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0102290	obj/kern/kernel.asm	/^f0102290:	8d 04 16             	lea    (%esi,%edx,1),%eax$/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	a3 1c 36 21 f0       	mov    %eax,0xf021361c$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010229d	obj/kern/kernel.asm	/^f010229d:	e9 da 00 00 00       	jmp    f010237c <user_mem_check+0x12d>$/;"	l
f01022a2	obj/kern/kernel.asm	/^f01022a2:	89 d8                	mov    %ebx,%eax$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01022a7	obj/kern/kernel.asm	/^f01022a7:	03 45 0c             	add    0xc(%ebp),%eax$/;"	l
f01022aa	obj/kern/kernel.asm	/^f01022aa:	a3 1c 36 21 f0       	mov    %eax,0xf021361c$/;"	l
f01022af	obj/kern/kernel.asm	/^f01022af:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	e9 c3 00 00 00       	jmp    f010237c <user_mem_check+0x12d>$/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	89 d8                	mov    %ebx,%eax$/;"	l
f01022bb	obj/kern/kernel.asm	/^f01022bb:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01022be	obj/kern/kernel.asm	/^f01022be:	03 45 0c             	add    0xc(%ebp),%eax$/;"	l
f01022c1	obj/kern/kernel.asm	/^f01022c1:	a3 1c 36 21 f0       	mov    %eax,0xf021361c$/;"	l
f01022c6	obj/kern/kernel.asm	/^f01022c6:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01022cb	obj/kern/kernel.asm	/^f01022cb:	e9 ac 00 00 00       	jmp    f010237c <user_mem_check+0x12d>$/;"	l
f01022d0	obj/kern/kernel.asm	/^f01022d0:	89 d8                	mov    %ebx,%eax$/;"	l
f01022d2	obj/kern/kernel.asm	/^f01022d2:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01022d5	obj/kern/kernel.asm	/^f01022d5:	03 45 0c             	add    0xc(%ebp),%eax$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	a3 1c 36 21 f0       	mov    %eax,0xf021361c$/;"	l
f01022dd	obj/kern/kernel.asm	/^f01022dd:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	e9 95 00 00 00       	jmp    f010237c <user_mem_check+0x12d>$/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01022ea	obj/kern/kernel.asm	/^f01022ea:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01022f3	obj/kern/kernel.asm	/^f01022f3:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01022fd	obj/kern/kernel.asm	/^f01022fd:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0102305	obj/kern/kernel.asm	/^f0102305:	74 70                	je     f0102377 <user_mem_check+0x128>$/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	89 da                	mov    %ebx,%edx$/;"	l
f0102309	obj/kern/kernel.asm	/^f0102309:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010230c	obj/kern/kernel.asm	/^f010230c:	8d 04 3a             	lea    (%edx,%edi,1),%eax$/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	3d 00 00 80 ef       	cmp    $0xef800000,%eax$/;"	l
f0102314	obj/kern/kernel.asm	/^f0102314:	2e 0f 87 5d ff ff ff 	ja,pn  f0102278 <user_mem_check+0x29>$/;"	l
f010231b	obj/kern/kernel.asm	/^f010231b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	00 $/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	89 d6                	mov    %edx,%esi$/;"	l
f0102325	obj/kern/kernel.asm	/^f0102325:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102329	obj/kern/kernel.asm	/^f0102329:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010232c	obj/kern/kernel.asm	/^f010232c:	8b 41 5c             	mov    0x5c(%ecx),%eax$/;"	l
f010232f	obj/kern/kernel.asm	/^f010232f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102332	obj/kern/kernel.asm	/^f0102332:	e8 ab fb ff ff       	call   f0101ee2 <pgdir_walk>$/;"	l
f0102337	obj/kern/kernel.asm	/^f0102337:	85 c0                	test   %eax,%eax$/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	2e 0f 84 4d ff ff ff 	je,pn  f010228d <user_mem_check+0x3e>$/;"	l
f0102340	obj/kern/kernel.asm	/^f0102340:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102343	obj/kern/kernel.asm	/^f0102343:	2e 0f 84 58 ff ff ff 	je,pn  f01022a2 <user_mem_check+0x53>$/;"	l
f010234a	obj/kern/kernel.asm	/^f010234a:	f6 45 14 04          	testb  $0x4,0x14(%ebp)$/;"	l
f010234e	obj/kern/kernel.asm	/^f010234e:	74 0a                	je     f010235a <user_mem_check+0x10b>$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102353	obj/kern/kernel.asm	/^f0102353:	2e 0f 84 5f ff ff ff 	je,pn  f01022b9 <user_mem_check+0x6a>$/;"	l
f010235a	obj/kern/kernel.asm	/^f010235a:	f6 45 14 02          	testb  $0x2,0x14(%ebp)$/;"	l
f010235e	obj/kern/kernel.asm	/^f010235e:	74 0a                	je     f010236a <user_mem_check+0x11b>$/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0102363	obj/kern/kernel.asm	/^f0102363:	2e 0f 84 66 ff ff ff 	je,pn  f01022d0 <user_mem_check+0x81>$/;"	l
f010236a	obj/kern/kernel.asm	/^f010236a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010236d	obj/kern/kernel.asm	/^f010236d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102370	obj/kern/kernel.asm	/^f0102370:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102373	obj/kern/kernel.asm	/^f0102373:	39 d8                	cmp    %ebx,%eax$/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	77 90                	ja     f0102307 <user_mem_check+0xb8>$/;"	l
f0102377	obj/kern/kernel.asm	/^f0102377:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010237c	obj/kern/kernel.asm	/^f010237c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	5b                   	pop    %ebx$/;"	l
f0102380	obj/kern/kernel.asm	/^f0102380:	5e                   	pop    %esi$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	5f                   	pop    %edi$/;"	l
f0102382	obj/kern/kernel.asm	/^f0102382:	5d                   	pop    %ebp$/;"	l
f0102383	obj/kern/kernel.asm	/^f0102383:	c3                   	ret    $/;"	l
f0102384	obj/kern/kernel.asm	/^f0102384 <user_mem_assert>:$/;"	l
f0102384	obj/kern/kernel.asm	/^f0102384:	55                   	push   %ebp$/;"	l
f0102385	obj/kern/kernel.asm	/^f0102385:	89 e5                	mov    %esp,%ebp$/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	53                   	push   %ebx$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010238b	obj/kern/kernel.asm	/^f010238b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010238e	obj/kern/kernel.asm	/^f010238e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102391	obj/kern/kernel.asm	/^f0102391:	83 c8 04             	or     $0x4,%eax$/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102398	obj/kern/kernel.asm	/^f0102398:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010239b	obj/kern/kernel.asm	/^f010239b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010239f	obj/kern/kernel.asm	/^f010239f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01023a2	obj/kern/kernel.asm	/^f01023a2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01023a6	obj/kern/kernel.asm	/^f01023a6:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01023a9	obj/kern/kernel.asm	/^f01023a9:	e8 a1 fe ff ff       	call   f010224f <user_mem_check>$/;"	l
f01023ae	obj/kern/kernel.asm	/^f01023ae:	85 c0                	test   %eax,%eax$/;"	l
f01023b0	obj/kern/kernel.asm	/^f01023b0:	3e 79 29             	jns,pt f01023dc <user_mem_assert+0x58>$/;"	l
f01023b3	obj/kern/kernel.asm	/^f01023b3:	a1 1c 36 21 f0       	mov    0xf021361c,%eax$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01023bc	obj/kern/kernel.asm	/^f01023bc:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	8b 40 4c             	mov    0x4c(%eax),%eax$/;"	l
f01023c4	obj/kern/kernel.asm	/^f01023c4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01023c8	obj/kern/kernel.asm	/^f01023c8:	c7 04 24 e0 61 10 f0 	movl   $0xf01061e0,(%esp)$/;"	l
f01023cf	obj/kern/kernel.asm	/^f01023cf:	e8 36 17 00 00       	call   f0103b0a <cprintf>$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01023d7	obj/kern/kernel.asm	/^f01023d7:	e8 e0 14 00 00       	call   f01038bc <env_destroy>$/;"	l
f01023dc	obj/kern/kernel.asm	/^f01023dc:	83 c4 14             	add    $0x14,%esp$/;"	l
f01023df	obj/kern/kernel.asm	/^f01023df:	5b                   	pop    %ebx$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	5d                   	pop    %ebp$/;"	l
f01023e1	obj/kern/kernel.asm	/^f01023e1:	c3                   	ret    $/;"	l
f01023e2	obj/kern/kernel.asm	/^f01023e2 <page_check>:$/;"	l
f01023e2	obj/kern/kernel.asm	/^f01023e2:	55                   	push   %ebp$/;"	l
f01023e3	obj/kern/kernel.asm	/^f01023e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	56                   	push   %esi$/;"	l
f01023e6	obj/kern/kernel.asm	/^f01023e6:	53                   	push   %ebx$/;"	l
f01023e7	obj/kern/kernel.asm	/^f01023e7:	83 ec 30             	sub    $0x30,%esp$/;"	l
f01023ea	obj/kern/kernel.asm	/^f01023ea:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f01023f1	obj/kern/kernel.asm	/^f01023f1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f01023f8	obj/kern/kernel.asm	/^f01023f8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01023ff	obj/kern/kernel.asm	/^f01023ff:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102405	obj/kern/kernel.asm	/^f0102405:	e8 22 fa ff ff       	call   f0101e2c <page_alloc>$/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	85 c0                	test   %eax,%eax$/;"	l
f010240c	obj/kern/kernel.asm	/^f010240c:	3e 74 24             	je,pt  f0102433 <page_check+0x51>$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	c7 44 24 0c 9a 65 10 	movl   $0xf010659a,0xc(%esp)$/;"	l
f0102416	obj/kern/kernel.asm	/^f0102416:	f0 $/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f010241e	obj/kern/kernel.asm	/^f010241e:	f0 $/;"	l
f010241f	obj/kern/kernel.asm	/^f010241f:	c7 44 24 04 23 03 00 	movl   $0x323,0x4(%esp)$/;"	l
f0102426	obj/kern/kernel.asm	/^f0102426:	00 $/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f010242e	obj/kern/kernel.asm	/^f010242e:	e8 9e dc ff ff       	call   f01000d1 <_panic>$/;"	l
f0102433	obj/kern/kernel.asm	/^f0102433:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0102436	obj/kern/kernel.asm	/^f0102436:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102439	obj/kern/kernel.asm	/^f0102439:	e8 ee f9 ff ff       	call   f0101e2c <page_alloc>$/;"	l
f010243e	obj/kern/kernel.asm	/^f010243e:	85 c0                	test   %eax,%eax$/;"	l
f0102440	obj/kern/kernel.asm	/^f0102440:	3e 74 24             	je,pt  f0102467 <page_check+0x85>$/;"	l
f0102443	obj/kern/kernel.asm	/^f0102443:	c7 44 24 0c c5 65 10 	movl   $0xf01065c5,0xc(%esp)$/;"	l
f010244a	obj/kern/kernel.asm	/^f010244a:	f0 $/;"	l
f010244b	obj/kern/kernel.asm	/^f010244b:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102452	obj/kern/kernel.asm	/^f0102452:	f0 $/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	c7 44 24 04 24 03 00 	movl   $0x324,0x4(%esp)$/;"	l
f010245a	obj/kern/kernel.asm	/^f010245a:	00 $/;"	l
f010245b	obj/kern/kernel.asm	/^f010245b:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	e8 6a dc ff ff       	call   f01000d1 <_panic>$/;"	l
f0102467	obj/kern/kernel.asm	/^f0102467:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f010246a	obj/kern/kernel.asm	/^f010246a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010246d	obj/kern/kernel.asm	/^f010246d:	e8 ba f9 ff ff       	call   f0101e2c <page_alloc>$/;"	l
f0102472	obj/kern/kernel.asm	/^f0102472:	85 c0                	test   %eax,%eax$/;"	l
f0102474	obj/kern/kernel.asm	/^f0102474:	3e 74 24             	je,pt  f010249b <page_check+0xb9>$/;"	l
f0102477	obj/kern/kernel.asm	/^f0102477:	c7 44 24 0c db 65 10 	movl   $0xf01065db,0xc(%esp)$/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	f0 $/;"	l
f010247f	obj/kern/kernel.asm	/^f010247f:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102486	obj/kern/kernel.asm	/^f0102486:	f0 $/;"	l
f0102487	obj/kern/kernel.asm	/^f0102487:	c7 44 24 04 25 03 00 	movl   $0x325,0x4(%esp)$/;"	l
f010248e	obj/kern/kernel.asm	/^f010248e:	00 $/;"	l
f010248f	obj/kern/kernel.asm	/^f010248f:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102496	obj/kern/kernel.asm	/^f0102496:	e8 36 dc ff ff       	call   f01000d1 <_panic>$/;"	l
f010249b	obj/kern/kernel.asm	/^f010249b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	3e 75 24             	jne,pt f01024c6 <page_check+0xe4>$/;"	l
f01024a2	obj/kern/kernel.asm	/^f01024a2:	c7 44 24 0c ff 65 10 	movl   $0xf01065ff,0xc(%esp)$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	f0 $/;"	l
f01024aa	obj/kern/kernel.asm	/^f01024aa:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f01024b1	obj/kern/kernel.asm	/^f01024b1:	f0 $/;"	l
f01024b2	obj/kern/kernel.asm	/^f01024b2:	c7 44 24 04 27 03 00 	movl   $0x327,0x4(%esp)$/;"	l
f01024b9	obj/kern/kernel.asm	/^f01024b9:	00 $/;"	l
f01024ba	obj/kern/kernel.asm	/^f01024ba:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	e8 0b dc ff ff       	call   f01000d1 <_panic>$/;"	l
f01024c6	obj/kern/kernel.asm	/^f01024c6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f01024ca	obj/kern/kernel.asm	/^f01024ca:	74 08                	je     f01024d4 <page_check+0xf2>$/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01024cf	obj/kern/kernel.asm	/^f01024cf:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f01024d2	obj/kern/kernel.asm	/^f01024d2:	75 24                	jne    f01024f8 <page_check+0x116>$/;"	l
f01024d4	obj/kern/kernel.asm	/^f01024d4:	c7 44 24 0c f1 65 10 	movl   $0xf01065f1,0xc(%esp)$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	f0 $/;"	l
f01024dc	obj/kern/kernel.asm	/^f01024dc:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f01024e3	obj/kern/kernel.asm	/^f01024e3:	f0 $/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	c7 44 24 04 28 03 00 	movl   $0x328,0x4(%esp)$/;"	l
f01024eb	obj/kern/kernel.asm	/^f01024eb:	00 $/;"	l
f01024ec	obj/kern/kernel.asm	/^f01024ec:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01024f3	obj/kern/kernel.asm	/^f01024f3:	e8 d9 db ff ff       	call   f01000d1 <_panic>$/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	74 0d                	je     f010250b <page_check+0x129>$/;"	l
f01024fe	obj/kern/kernel.asm	/^f01024fe:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102501	obj/kern/kernel.asm	/^f0102501:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	74 05                	je     f010250b <page_check+0x129>$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0102509	obj/kern/kernel.asm	/^f0102509:	75 24                	jne    f010252f <page_check+0x14d>$/;"	l
f010250b	obj/kern/kernel.asm	/^f010250b:	c7 44 24 0c 70 60 10 	movl   $0xf0106070,0xc(%esp)$/;"	l
f0102512	obj/kern/kernel.asm	/^f0102512:	f0 $/;"	l
f0102513	obj/kern/kernel.asm	/^f0102513:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f010251a	obj/kern/kernel.asm	/^f010251a:	f0 $/;"	l
f010251b	obj/kern/kernel.asm	/^f010251b:	c7 44 24 04 29 03 00 	movl   $0x329,0x4(%esp)$/;"	l
f0102522	obj/kern/kernel.asm	/^f0102522:	00 $/;"	l
f0102523	obj/kern/kernel.asm	/^f0102523:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f010252a	obj/kern/kernel.asm	/^f010252a:	e8 a2 db ff ff       	call   f01000d1 <_panic>$/;"	l
f010252f	obj/kern/kernel.asm	/^f010252f:	8b 1d 18 36 21 f0    	mov    0xf0213618,%ebx$/;"	l
f0102535	obj/kern/kernel.asm	/^f0102535:	c7 05 18 36 21 f0 00 	movl   $0x0,0xf0213618$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	00 00 00 $/;"	l
f010253f	obj/kern/kernel.asm	/^f010253f:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0102542	obj/kern/kernel.asm	/^f0102542:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102545	obj/kern/kernel.asm	/^f0102545:	e8 e2 f8 ff ff       	call   f0101e2c <page_alloc>$/;"	l
f010254a	obj/kern/kernel.asm	/^f010254a:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f010254d	obj/kern/kernel.asm	/^f010254d:	3e 74 24             	je,pt  f0102574 <page_check+0x192>$/;"	l
f0102550	obj/kern/kernel.asm	/^f0102550:	c7 44 24 0c 57 66 10 	movl   $0xf0106657,0xc(%esp)$/;"	l
f0102557	obj/kern/kernel.asm	/^f0102557:	f0 $/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f010255f	obj/kern/kernel.asm	/^f010255f:	f0 $/;"	l
f0102560	obj/kern/kernel.asm	/^f0102560:	c7 44 24 04 30 03 00 	movl   $0x330,0x4(%esp)$/;"	l
f0102567	obj/kern/kernel.asm	/^f0102567:	00 $/;"	l
f0102568	obj/kern/kernel.asm	/^f0102568:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f010256f	obj/kern/kernel.asm	/^f010256f:	e8 5d db ff ff       	call   f01000d1 <_panic>$/;"	l
f0102574	obj/kern/kernel.asm	/^f0102574:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0102577	obj/kern/kernel.asm	/^f0102577:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010257b	obj/kern/kernel.asm	/^f010257b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102582	obj/kern/kernel.asm	/^f0102582:	00 $/;"	l
f0102583	obj/kern/kernel.asm	/^f0102583:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102588	obj/kern/kernel.asm	/^f0102588:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010258b	obj/kern/kernel.asm	/^f010258b:	e8 c3 fb ff ff       	call   f0102153 <page_lookup>$/;"	l
f0102590	obj/kern/kernel.asm	/^f0102590:	85 c0                	test   %eax,%eax$/;"	l
f0102592	obj/kern/kernel.asm	/^f0102592:	3e 74 24             	je,pt  f01025b9 <page_check+0x1d7>$/;"	l
f0102595	obj/kern/kernel.asm	/^f0102595:	c7 44 24 0c 18 62 10 	movl   $0xf0106218,0xc(%esp)$/;"	l
f010259c	obj/kern/kernel.asm	/^f010259c:	f0 $/;"	l
f010259d	obj/kern/kernel.asm	/^f010259d:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f01025a4	obj/kern/kernel.asm	/^f01025a4:	f0 $/;"	l
f01025a5	obj/kern/kernel.asm	/^f01025a5:	c7 44 24 04 33 03 00 	movl   $0x333,0x4(%esp)$/;"	l
f01025ac	obj/kern/kernel.asm	/^f01025ac:	00 $/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	e8 18 db ff ff       	call   f01000d1 <_panic>$/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01025c0	obj/kern/kernel.asm	/^f01025c0:	00 $/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01025c8	obj/kern/kernel.asm	/^f01025c8:	00 $/;"	l
f01025c9	obj/kern/kernel.asm	/^f01025c9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01025cc	obj/kern/kernel.asm	/^f01025cc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f01025d5	obj/kern/kernel.asm	/^f01025d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01025d8	obj/kern/kernel.asm	/^f01025d8:	e8 6e fa ff ff       	call   f010204b <page_insert>$/;"	l
f01025dd	obj/kern/kernel.asm	/^f01025dd:	85 c0                	test   %eax,%eax$/;"	l
f01025df	obj/kern/kernel.asm	/^f01025df:	3e 78 24             	js,pt  f0102606 <page_check+0x224>$/;"	l
f01025e2	obj/kern/kernel.asm	/^f01025e2:	c7 44 24 0c 50 62 10 	movl   $0xf0106250,0xc(%esp)$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	f0 $/;"	l
f01025ea	obj/kern/kernel.asm	/^f01025ea:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f01025f1	obj/kern/kernel.asm	/^f01025f1:	f0 $/;"	l
f01025f2	obj/kern/kernel.asm	/^f01025f2:	c7 44 24 04 36 03 00 	movl   $0x336,0x4(%esp)$/;"	l
f01025f9	obj/kern/kernel.asm	/^f01025f9:	00 $/;"	l
f01025fa	obj/kern/kernel.asm	/^f01025fa:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102601	obj/kern/kernel.asm	/^f0102601:	e8 cb da ff ff       	call   f01000d1 <_panic>$/;"	l
f0102606	obj/kern/kernel.asm	/^f0102606:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102609	obj/kern/kernel.asm	/^f0102609:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	e8 62 f8 ff ff       	call   f0101e73 <page_free>$/;"	l
f0102611	obj/kern/kernel.asm	/^f0102611:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102618	obj/kern/kernel.asm	/^f0102618:	00 $/;"	l
f0102619	obj/kern/kernel.asm	/^f0102619:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	00 $/;"	l
f0102621	obj/kern/kernel.asm	/^f0102621:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102624	obj/kern/kernel.asm	/^f0102624:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102628	obj/kern/kernel.asm	/^f0102628:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f010262d	obj/kern/kernel.asm	/^f010262d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102630	obj/kern/kernel.asm	/^f0102630:	e8 16 fa ff ff       	call   f010204b <page_insert>$/;"	l
f0102635	obj/kern/kernel.asm	/^f0102635:	85 c0                	test   %eax,%eax$/;"	l
f0102637	obj/kern/kernel.asm	/^f0102637:	3e 74 24             	je,pt  f010265e <page_check+0x27c>$/;"	l
f010263a	obj/kern/kernel.asm	/^f010263a:	c7 44 24 0c 7c 62 10 	movl   $0xf010627c,0xc(%esp)$/;"	l
f0102641	obj/kern/kernel.asm	/^f0102641:	f0 $/;"	l
f0102642	obj/kern/kernel.asm	/^f0102642:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102649	obj/kern/kernel.asm	/^f0102649:	f0 $/;"	l
f010264a	obj/kern/kernel.asm	/^f010264a:	c7 44 24 04 3a 03 00 	movl   $0x33a,0x4(%esp)$/;"	l
f0102651	obj/kern/kernel.asm	/^f0102651:	00 $/;"	l
f0102652	obj/kern/kernel.asm	/^f0102652:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102659	obj/kern/kernel.asm	/^f0102659:	e8 73 da ff ff       	call   f01000d1 <_panic>$/;"	l
f010265e	obj/kern/kernel.asm	/^f010265e:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102663	obj/kern/kernel.asm	/^f0102663:	8b 10                	mov    (%eax),%edx$/;"	l
f0102665	obj/kern/kernel.asm	/^f0102665:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010266e	obj/kern/kernel.asm	/^f010266e:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f0102674	obj/kern/kernel.asm	/^f0102674:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0102677	obj/kern/kernel.asm	/^f0102677:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f010267d	obj/kern/kernel.asm	/^f010267d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102680	obj/kern/kernel.asm	/^f0102680:	39 c2                	cmp    %eax,%edx$/;"	l
f0102682	obj/kern/kernel.asm	/^f0102682:	3e 74 24             	je,pt  f01026a9 <page_check+0x2c7>$/;"	l
f0102685	obj/kern/kernel.asm	/^f0102685:	c7 44 24 0c a8 62 10 	movl   $0xf01062a8,0xc(%esp)$/;"	l
f010268c	obj/kern/kernel.asm	/^f010268c:	f0 $/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102694	obj/kern/kernel.asm	/^f0102694:	f0 $/;"	l
f0102695	obj/kern/kernel.asm	/^f0102695:	c7 44 24 04 3b 03 00 	movl   $0x33b,0x4(%esp)$/;"	l
f010269c	obj/kern/kernel.asm	/^f010269c:	00 $/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01026a4	obj/kern/kernel.asm	/^f01026a4:	e8 28 da ff ff       	call   f01000d1 <_panic>$/;"	l
f01026a9	obj/kern/kernel.asm	/^f01026a9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	00 $/;"	l
f01026b1	obj/kern/kernel.asm	/^f01026b1:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f01026b6	obj/kern/kernel.asm	/^f01026b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026b9	obj/kern/kernel.asm	/^f01026b9:	e8 62 f5 ff ff       	call   f0101c20 <check_va2pa>$/;"	l
f01026be	obj/kern/kernel.asm	/^f01026be:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01026c1	obj/kern/kernel.asm	/^f01026c1:	2b 15 cc 42 21 f0    	sub    0xf02142cc,%edx$/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01026ca	obj/kern/kernel.asm	/^f01026ca:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f01026d0	obj/kern/kernel.asm	/^f01026d0:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01026d3	obj/kern/kernel.asm	/^f01026d3:	39 d0                	cmp    %edx,%eax$/;"	l
f01026d5	obj/kern/kernel.asm	/^f01026d5:	3e 74 24             	je,pt  f01026fc <page_check+0x31a>$/;"	l
f01026d8	obj/kern/kernel.asm	/^f01026d8:	c7 44 24 0c d0 62 10 	movl   $0xf01062d0,0xc(%esp)$/;"	l
f01026df	obj/kern/kernel.asm	/^f01026df:	f0 $/;"	l
f01026e0	obj/kern/kernel.asm	/^f01026e0:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f01026e7	obj/kern/kernel.asm	/^f01026e7:	f0 $/;"	l
f01026e8	obj/kern/kernel.asm	/^f01026e8:	c7 44 24 04 3c 03 00 	movl   $0x33c,0x4(%esp)$/;"	l
f01026ef	obj/kern/kernel.asm	/^f01026ef:	00 $/;"	l
f01026f0	obj/kern/kernel.asm	/^f01026f0:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	e8 d5 d9 ff ff       	call   f01000d1 <_panic>$/;"	l
f01026fc	obj/kern/kernel.asm	/^f01026fc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01026ff	obj/kern/kernel.asm	/^f01026ff:	66 83 78 08 01       	cmpw   $0x1,0x8(%eax)$/;"	l
f0102704	obj/kern/kernel.asm	/^f0102704:	3e 74 24             	je,pt  f010272b <page_check+0x349>$/;"	l
f0102707	obj/kern/kernel.asm	/^f0102707:	c7 44 24 0c 8b 66 10 	movl   $0xf010668b,0xc(%esp)$/;"	l
f010270e	obj/kern/kernel.asm	/^f010270e:	f0 $/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102716	obj/kern/kernel.asm	/^f0102716:	f0 $/;"	l
f0102717	obj/kern/kernel.asm	/^f0102717:	c7 44 24 04 3d 03 00 	movl   $0x33d,0x4(%esp)$/;"	l
f010271e	obj/kern/kernel.asm	/^f010271e:	00 $/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102726	obj/kern/kernel.asm	/^f0102726:	e8 a6 d9 ff ff       	call   f01000d1 <_panic>$/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010272e	obj/kern/kernel.asm	/^f010272e:	66 83 78 08 01       	cmpw   $0x1,0x8(%eax)$/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	3e 74 24             	je,pt  f010275a <page_check+0x378>$/;"	l
f0102736	obj/kern/kernel.asm	/^f0102736:	c7 44 24 0c 9c 66 10 	movl   $0xf010669c,0xc(%esp)$/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	f0 $/;"	l
f010273e	obj/kern/kernel.asm	/^f010273e:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102745	obj/kern/kernel.asm	/^f0102745:	f0 $/;"	l
f0102746	obj/kern/kernel.asm	/^f0102746:	c7 44 24 04 3e 03 00 	movl   $0x33e,0x4(%esp)$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	00 $/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102755	obj/kern/kernel.asm	/^f0102755:	e8 77 d9 ff ff       	call   f01000d1 <_panic>$/;"	l
f010275a	obj/kern/kernel.asm	/^f010275a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102761	obj/kern/kernel.asm	/^f0102761:	00 $/;"	l
f0102762	obj/kern/kernel.asm	/^f0102762:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102769	obj/kern/kernel.asm	/^f0102769:	00 $/;"	l
f010276a	obj/kern/kernel.asm	/^f010276a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010276d	obj/kern/kernel.asm	/^f010276d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102771	obj/kern/kernel.asm	/^f0102771:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102776	obj/kern/kernel.asm	/^f0102776:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	e8 cd f8 ff ff       	call   f010204b <page_insert>$/;"	l
f010277e	obj/kern/kernel.asm	/^f010277e:	85 c0                	test   %eax,%eax$/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	3e 74 24             	je,pt  f01027a7 <page_check+0x3c5>$/;"	l
f0102783	obj/kern/kernel.asm	/^f0102783:	c7 44 24 0c 00 63 10 	movl   $0xf0106300,0xc(%esp)$/;"	l
f010278a	obj/kern/kernel.asm	/^f010278a:	f0 $/;"	l
f010278b	obj/kern/kernel.asm	/^f010278b:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	f0 $/;"	l
f0102793	obj/kern/kernel.asm	/^f0102793:	c7 44 24 04 41 03 00 	movl   $0x341,0x4(%esp)$/;"	l
f010279a	obj/kern/kernel.asm	/^f010279a:	00 $/;"	l
f010279b	obj/kern/kernel.asm	/^f010279b:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01027a2	obj/kern/kernel.asm	/^f01027a2:	e8 2a d9 ff ff       	call   f01000d1 <_panic>$/;"	l
f01027a7	obj/kern/kernel.asm	/^f01027a7:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01027ae	obj/kern/kernel.asm	/^f01027ae:	00 $/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f01027b4	obj/kern/kernel.asm	/^f01027b4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01027b7	obj/kern/kernel.asm	/^f01027b7:	e8 64 f4 ff ff       	call   f0101c20 <check_va2pa>$/;"	l
f01027bc	obj/kern/kernel.asm	/^f01027bc:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f01027bf	obj/kern/kernel.asm	/^f01027bf:	2b 15 cc 42 21 f0    	sub    0xf02142cc,%edx$/;"	l
f01027c5	obj/kern/kernel.asm	/^f01027c5:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01027c8	obj/kern/kernel.asm	/^f01027c8:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f01027ce	obj/kern/kernel.asm	/^f01027ce:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01027d1	obj/kern/kernel.asm	/^f01027d1:	39 d0                	cmp    %edx,%eax$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	3e 74 24             	je,pt  f01027fa <page_check+0x418>$/;"	l
f01027d6	obj/kern/kernel.asm	/^f01027d6:	c7 44 24 0c 38 63 10 	movl   $0xf0106338,0xc(%esp)$/;"	l
f01027dd	obj/kern/kernel.asm	/^f01027dd:	f0 $/;"	l
f01027de	obj/kern/kernel.asm	/^f01027de:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f01027e5	obj/kern/kernel.asm	/^f01027e5:	f0 $/;"	l
f01027e6	obj/kern/kernel.asm	/^f01027e6:	c7 44 24 04 42 03 00 	movl   $0x342,0x4(%esp)$/;"	l
f01027ed	obj/kern/kernel.asm	/^f01027ed:	00 $/;"	l
f01027ee	obj/kern/kernel.asm	/^f01027ee:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01027f5	obj/kern/kernel.asm	/^f01027f5:	e8 d7 d8 ff ff       	call   f01000d1 <_panic>$/;"	l
f01027fa	obj/kern/kernel.asm	/^f01027fa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01027fd	obj/kern/kernel.asm	/^f01027fd:	66 83 78 08 01       	cmpw   $0x1,0x8(%eax)$/;"	l
f0102802	obj/kern/kernel.asm	/^f0102802:	3e 74 24             	je,pt  f0102829 <page_check+0x447>$/;"	l
f0102805	obj/kern/kernel.asm	/^f0102805:	c7 44 24 0c ad 66 10 	movl   $0xf01066ad,0xc(%esp)$/;"	l
f010280c	obj/kern/kernel.asm	/^f010280c:	f0 $/;"	l
f010280d	obj/kern/kernel.asm	/^f010280d:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102814	obj/kern/kernel.asm	/^f0102814:	f0 $/;"	l
f0102815	obj/kern/kernel.asm	/^f0102815:	c7 44 24 04 43 03 00 	movl   $0x343,0x4(%esp)$/;"	l
f010281c	obj/kern/kernel.asm	/^f010281c:	00 $/;"	l
f010281d	obj/kern/kernel.asm	/^f010281d:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102824	obj/kern/kernel.asm	/^f0102824:	e8 a8 d8 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102829	obj/kern/kernel.asm	/^f0102829:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f010282c	obj/kern/kernel.asm	/^f010282c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010282f	obj/kern/kernel.asm	/^f010282f:	e8 f8 f5 ff ff       	call   f0101e2c <page_alloc>$/;"	l
f0102834	obj/kern/kernel.asm	/^f0102834:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	3e 74 24             	je,pt  f010285e <page_check+0x47c>$/;"	l
f010283a	obj/kern/kernel.asm	/^f010283a:	c7 44 24 0c 57 66 10 	movl   $0xf0106657,0xc(%esp)$/;"	l
f0102841	obj/kern/kernel.asm	/^f0102841:	f0 $/;"	l
f0102842	obj/kern/kernel.asm	/^f0102842:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102849	obj/kern/kernel.asm	/^f0102849:	f0 $/;"	l
f010284a	obj/kern/kernel.asm	/^f010284a:	c7 44 24 04 46 03 00 	movl   $0x346,0x4(%esp)$/;"	l
f0102851	obj/kern/kernel.asm	/^f0102851:	00 $/;"	l
f0102852	obj/kern/kernel.asm	/^f0102852:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102859	obj/kern/kernel.asm	/^f0102859:	e8 73 d8 ff ff       	call   f01000d1 <_panic>$/;"	l
f010285e	obj/kern/kernel.asm	/^f010285e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	00 $/;"	l
f0102866	obj/kern/kernel.asm	/^f0102866:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010286d	obj/kern/kernel.asm	/^f010286d:	00 $/;"	l
f010286e	obj/kern/kernel.asm	/^f010286e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102871	obj/kern/kernel.asm	/^f0102871:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102875	obj/kern/kernel.asm	/^f0102875:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f010287a	obj/kern/kernel.asm	/^f010287a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	e8 c9 f7 ff ff       	call   f010204b <page_insert>$/;"	l
f0102882	obj/kern/kernel.asm	/^f0102882:	85 c0                	test   %eax,%eax$/;"	l
f0102884	obj/kern/kernel.asm	/^f0102884:	3e 74 24             	je,pt  f01028ab <page_check+0x4c9>$/;"	l
f0102887	obj/kern/kernel.asm	/^f0102887:	c7 44 24 0c 00 63 10 	movl   $0xf0106300,0xc(%esp)$/;"	l
f010288e	obj/kern/kernel.asm	/^f010288e:	f0 $/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	f0 $/;"	l
f0102897	obj/kern/kernel.asm	/^f0102897:	c7 44 24 04 49 03 00 	movl   $0x349,0x4(%esp)$/;"	l
f010289e	obj/kern/kernel.asm	/^f010289e:	00 $/;"	l
f010289f	obj/kern/kernel.asm	/^f010289f:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01028a6	obj/kern/kernel.asm	/^f01028a6:	e8 26 d8 ff ff       	call   f01000d1 <_panic>$/;"	l
f01028ab	obj/kern/kernel.asm	/^f01028ab:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	00 $/;"	l
f01028b3	obj/kern/kernel.asm	/^f01028b3:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f01028b8	obj/kern/kernel.asm	/^f01028b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	e8 60 f3 ff ff       	call   f0101c20 <check_va2pa>$/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f01028c3	obj/kern/kernel.asm	/^f01028c3:	2b 15 cc 42 21 f0    	sub    0xf02142cc,%edx$/;"	l
f01028c9	obj/kern/kernel.asm	/^f01028c9:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01028cc	obj/kern/kernel.asm	/^f01028cc:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f01028d2	obj/kern/kernel.asm	/^f01028d2:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01028d5	obj/kern/kernel.asm	/^f01028d5:	39 d0                	cmp    %edx,%eax$/;"	l
f01028d7	obj/kern/kernel.asm	/^f01028d7:	3e 74 24             	je,pt  f01028fe <page_check+0x51c>$/;"	l
f01028da	obj/kern/kernel.asm	/^f01028da:	c7 44 24 0c 38 63 10 	movl   $0xf0106338,0xc(%esp)$/;"	l
f01028e1	obj/kern/kernel.asm	/^f01028e1:	f0 $/;"	l
f01028e2	obj/kern/kernel.asm	/^f01028e2:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f01028e9	obj/kern/kernel.asm	/^f01028e9:	f0 $/;"	l
f01028ea	obj/kern/kernel.asm	/^f01028ea:	c7 44 24 04 4a 03 00 	movl   $0x34a,0x4(%esp)$/;"	l
f01028f1	obj/kern/kernel.asm	/^f01028f1:	00 $/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01028f9	obj/kern/kernel.asm	/^f01028f9:	e8 d3 d7 ff ff       	call   f01000d1 <_panic>$/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	66 83 78 08 01       	cmpw   $0x1,0x8(%eax)$/;"	l
f0102906	obj/kern/kernel.asm	/^f0102906:	3e 74 24             	je,pt  f010292d <page_check+0x54b>$/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	c7 44 24 0c ad 66 10 	movl   $0xf01066ad,0xc(%esp)$/;"	l
f0102910	obj/kern/kernel.asm	/^f0102910:	f0 $/;"	l
f0102911	obj/kern/kernel.asm	/^f0102911:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102918	obj/kern/kernel.asm	/^f0102918:	f0 $/;"	l
f0102919	obj/kern/kernel.asm	/^f0102919:	c7 44 24 04 4b 03 00 	movl   $0x34b,0x4(%esp)$/;"	l
f0102920	obj/kern/kernel.asm	/^f0102920:	00 $/;"	l
f0102921	obj/kern/kernel.asm	/^f0102921:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102928	obj/kern/kernel.asm	/^f0102928:	e8 a4 d7 ff ff       	call   f01000d1 <_panic>$/;"	l
f010292d	obj/kern/kernel.asm	/^f010292d:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0102930	obj/kern/kernel.asm	/^f0102930:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	e8 f4 f4 ff ff       	call   f0101e2c <page_alloc>$/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f010293b	obj/kern/kernel.asm	/^f010293b:	3e 74 24             	je,pt  f0102962 <page_check+0x580>$/;"	l
f010293e	obj/kern/kernel.asm	/^f010293e:	c7 44 24 0c 57 66 10 	movl   $0xf0106657,0xc(%esp)$/;"	l
f0102945	obj/kern/kernel.asm	/^f0102945:	f0 $/;"	l
f0102946	obj/kern/kernel.asm	/^f0102946:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f010294d	obj/kern/kernel.asm	/^f010294d:	f0 $/;"	l
f010294e	obj/kern/kernel.asm	/^f010294e:	c7 44 24 04 4f 03 00 	movl   $0x34f,0x4(%esp)$/;"	l
f0102955	obj/kern/kernel.asm	/^f0102955:	00 $/;"	l
f0102956	obj/kern/kernel.asm	/^f0102956:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	e8 6f d7 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102962	obj/kern/kernel.asm	/^f0102962:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102967	obj/kern/kernel.asm	/^f0102967:	8b 10                	mov    (%eax),%edx$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010296f	obj/kern/kernel.asm	/^f010296f:	89 d0                	mov    %edx,%eax$/;"	l
f0102971	obj/kern/kernel.asm	/^f0102971:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f010297a	obj/kern/kernel.asm	/^f010297a:	3e 72 20             	jb,pt  f010299d <page_check+0x5bb>$/;"	l
f010297d	obj/kern/kernel.asm	/^f010297d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102981	obj/kern/kernel.asm	/^f0102981:	c7 44 24 08 4c 60 10 	movl   $0xf010604c,0x8(%esp)$/;"	l
f0102988	obj/kern/kernel.asm	/^f0102988:	f0 $/;"	l
f0102989	obj/kern/kernel.asm	/^f0102989:	c7 44 24 04 52 03 00 	movl   $0x352,0x4(%esp)$/;"	l
f0102990	obj/kern/kernel.asm	/^f0102990:	00 $/;"	l
f0102991	obj/kern/kernel.asm	/^f0102991:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102998	obj/kern/kernel.asm	/^f0102998:	e8 34 d7 ff ff       	call   f01000d1 <_panic>$/;"	l
f010299d	obj/kern/kernel.asm	/^f010299d:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01029a3	obj/kern/kernel.asm	/^f01029a3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01029a6	obj/kern/kernel.asm	/^f01029a6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01029ad	obj/kern/kernel.asm	/^f01029ad:	00 $/;"	l
f01029ae	obj/kern/kernel.asm	/^f01029ae:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01029b5	obj/kern/kernel.asm	/^f01029b5:	00 $/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f01029bb	obj/kern/kernel.asm	/^f01029bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029be	obj/kern/kernel.asm	/^f01029be:	e8 1f f5 ff ff       	call   f0101ee2 <pgdir_walk>$/;"	l
f01029c3	obj/kern/kernel.asm	/^f01029c3:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01029c6	obj/kern/kernel.asm	/^f01029c6:	83 c2 04             	add    $0x4,%edx$/;"	l
f01029c9	obj/kern/kernel.asm	/^f01029c9:	39 d0                	cmp    %edx,%eax$/;"	l
f01029cb	obj/kern/kernel.asm	/^f01029cb:	3e 74 24             	je,pt  f01029f2 <page_check+0x610>$/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	c7 44 24 0c 68 63 10 	movl   $0xf0106368,0xc(%esp)$/;"	l
f01029d5	obj/kern/kernel.asm	/^f01029d5:	f0 $/;"	l
f01029d6	obj/kern/kernel.asm	/^f01029d6:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	f0 $/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de:	c7 44 24 04 53 03 00 	movl   $0x353,0x4(%esp)$/;"	l
f01029e5	obj/kern/kernel.asm	/^f01029e5:	00 $/;"	l
f01029e6	obj/kern/kernel.asm	/^f01029e6:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f01029ed	obj/kern/kernel.asm	/^f01029ed:	e8 df d6 ff ff       	call   f01000d1 <_panic>$/;"	l
f01029f2	obj/kern/kernel.asm	/^f01029f2:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01029f9	obj/kern/kernel.asm	/^f01029f9:	00 $/;"	l
f01029fa	obj/kern/kernel.asm	/^f01029fa:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102a01	obj/kern/kernel.asm	/^f0102a01:	00 $/;"	l
f0102a02	obj/kern/kernel.asm	/^f0102a02:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102a05	obj/kern/kernel.asm	/^f0102a05:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102a0e	obj/kern/kernel.asm	/^f0102a0e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a11	obj/kern/kernel.asm	/^f0102a11:	e8 35 f6 ff ff       	call   f010204b <page_insert>$/;"	l
f0102a16	obj/kern/kernel.asm	/^f0102a16:	85 c0                	test   %eax,%eax$/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	3e 74 24             	je,pt  f0102a3f <page_check+0x65d>$/;"	l
f0102a1b	obj/kern/kernel.asm	/^f0102a1b:	c7 44 24 0c a8 63 10 	movl   $0xf01063a8,0xc(%esp)$/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	f0 $/;"	l
f0102a23	obj/kern/kernel.asm	/^f0102a23:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102a2a	obj/kern/kernel.asm	/^f0102a2a:	f0 $/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	c7 44 24 04 56 03 00 	movl   $0x356,0x4(%esp)$/;"	l
f0102a32	obj/kern/kernel.asm	/^f0102a32:	00 $/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102a3a	obj/kern/kernel.asm	/^f0102a3a:	e8 92 d6 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102a3f	obj/kern/kernel.asm	/^f0102a3f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	00 $/;"	l
f0102a47	obj/kern/kernel.asm	/^f0102a47:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102a4c	obj/kern/kernel.asm	/^f0102a4c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a4f	obj/kern/kernel.asm	/^f0102a4f:	e8 cc f1 ff ff       	call   f0101c20 <check_va2pa>$/;"	l
f0102a54	obj/kern/kernel.asm	/^f0102a54:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0102a57	obj/kern/kernel.asm	/^f0102a57:	2b 15 cc 42 21 f0    	sub    0xf02142cc,%edx$/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0102a60	obj/kern/kernel.asm	/^f0102a60:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0102a66	obj/kern/kernel.asm	/^f0102a66:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102a69	obj/kern/kernel.asm	/^f0102a69:	39 d0                	cmp    %edx,%eax$/;"	l
f0102a6b	obj/kern/kernel.asm	/^f0102a6b:	3e 74 24             	je,pt  f0102a92 <page_check+0x6b0>$/;"	l
f0102a6e	obj/kern/kernel.asm	/^f0102a6e:	c7 44 24 0c 38 63 10 	movl   $0xf0106338,0xc(%esp)$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	f0 $/;"	l
f0102a76	obj/kern/kernel.asm	/^f0102a76:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102a7d	obj/kern/kernel.asm	/^f0102a7d:	f0 $/;"	l
f0102a7e	obj/kern/kernel.asm	/^f0102a7e:	c7 44 24 04 57 03 00 	movl   $0x357,0x4(%esp)$/;"	l
f0102a85	obj/kern/kernel.asm	/^f0102a85:	00 $/;"	l
f0102a86	obj/kern/kernel.asm	/^f0102a86:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102a8d	obj/kern/kernel.asm	/^f0102a8d:	e8 3f d6 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102a92	obj/kern/kernel.asm	/^f0102a92:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102a95	obj/kern/kernel.asm	/^f0102a95:	66 83 78 08 01       	cmpw   $0x1,0x8(%eax)$/;"	l
f0102a9a	obj/kern/kernel.asm	/^f0102a9a:	3e 74 24             	je,pt  f0102ac1 <page_check+0x6df>$/;"	l
f0102a9d	obj/kern/kernel.asm	/^f0102a9d:	c7 44 24 0c ad 66 10 	movl   $0xf01066ad,0xc(%esp)$/;"	l
f0102aa4	obj/kern/kernel.asm	/^f0102aa4:	f0 $/;"	l
f0102aa5	obj/kern/kernel.asm	/^f0102aa5:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102aac	obj/kern/kernel.asm	/^f0102aac:	f0 $/;"	l
f0102aad	obj/kern/kernel.asm	/^f0102aad:	c7 44 24 04 58 03 00 	movl   $0x358,0x4(%esp)$/;"	l
f0102ab4	obj/kern/kernel.asm	/^f0102ab4:	00 $/;"	l
f0102ab5	obj/kern/kernel.asm	/^f0102ab5:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	e8 10 d6 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102ac1	obj/kern/kernel.asm	/^f0102ac1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102ac8	obj/kern/kernel.asm	/^f0102ac8:	00 $/;"	l
f0102ac9	obj/kern/kernel.asm	/^f0102ac9:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102ad0	obj/kern/kernel.asm	/^f0102ad0:	00 $/;"	l
f0102ad1	obj/kern/kernel.asm	/^f0102ad1:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ad9	obj/kern/kernel.asm	/^f0102ad9:	e8 04 f4 ff ff       	call   f0101ee2 <pgdir_walk>$/;"	l
f0102ade	obj/kern/kernel.asm	/^f0102ade:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102ae1	obj/kern/kernel.asm	/^f0102ae1:	3e 75 24             	jne,pt f0102b08 <page_check+0x726>$/;"	l
f0102ae4	obj/kern/kernel.asm	/^f0102ae4:	c7 44 24 0c e4 63 10 	movl   $0xf01063e4,0xc(%esp)$/;"	l
f0102aeb	obj/kern/kernel.asm	/^f0102aeb:	f0 $/;"	l
f0102aec	obj/kern/kernel.asm	/^f0102aec:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102af3	obj/kern/kernel.asm	/^f0102af3:	f0 $/;"	l
f0102af4	obj/kern/kernel.asm	/^f0102af4:	c7 44 24 04 59 03 00 	movl   $0x359,0x4(%esp)$/;"	l
f0102afb	obj/kern/kernel.asm	/^f0102afb:	00 $/;"	l
f0102afc	obj/kern/kernel.asm	/^f0102afc:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102b03	obj/kern/kernel.asm	/^f0102b03:	e8 c9 d5 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102b0f	obj/kern/kernel.asm	/^f0102b0f:	00 $/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f0102b17	obj/kern/kernel.asm	/^f0102b17:	00 $/;"	l
f0102b18	obj/kern/kernel.asm	/^f0102b18:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102b1b	obj/kern/kernel.asm	/^f0102b1b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102b1f	obj/kern/kernel.asm	/^f0102b1f:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102b24	obj/kern/kernel.asm	/^f0102b24:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b27	obj/kern/kernel.asm	/^f0102b27:	e8 1f f5 ff ff       	call   f010204b <page_insert>$/;"	l
f0102b2c	obj/kern/kernel.asm	/^f0102b2c:	85 c0                	test   %eax,%eax$/;"	l
f0102b2e	obj/kern/kernel.asm	/^f0102b2e:	3e 78 24             	js,pt  f0102b55 <page_check+0x773>$/;"	l
f0102b31	obj/kern/kernel.asm	/^f0102b31:	c7 44 24 0c 18 64 10 	movl   $0xf0106418,0xc(%esp)$/;"	l
f0102b38	obj/kern/kernel.asm	/^f0102b38:	f0 $/;"	l
f0102b39	obj/kern/kernel.asm	/^f0102b39:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102b40	obj/kern/kernel.asm	/^f0102b40:	f0 $/;"	l
f0102b41	obj/kern/kernel.asm	/^f0102b41:	c7 44 24 04 5c 03 00 	movl   $0x35c,0x4(%esp)$/;"	l
f0102b48	obj/kern/kernel.asm	/^f0102b48:	00 $/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102b50	obj/kern/kernel.asm	/^f0102b50:	e8 7c d5 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102b5c	obj/kern/kernel.asm	/^f0102b5c:	00 $/;"	l
f0102b5d	obj/kern/kernel.asm	/^f0102b5d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102b64	obj/kern/kernel.asm	/^f0102b64:	00 $/;"	l
f0102b65	obj/kern/kernel.asm	/^f0102b65:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102b6c	obj/kern/kernel.asm	/^f0102b6c:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102b71	obj/kern/kernel.asm	/^f0102b71:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	e8 d2 f4 ff ff       	call   f010204b <page_insert>$/;"	l
f0102b79	obj/kern/kernel.asm	/^f0102b79:	85 c0                	test   %eax,%eax$/;"	l
f0102b7b	obj/kern/kernel.asm	/^f0102b7b:	3e 74 24             	je,pt  f0102ba2 <page_check+0x7c0>$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	c7 44 24 0c 4c 64 10 	movl   $0xf010644c,0xc(%esp)$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	f0 $/;"	l
f0102b86	obj/kern/kernel.asm	/^f0102b86:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102b8d	obj/kern/kernel.asm	/^f0102b8d:	f0 $/;"	l
f0102b8e	obj/kern/kernel.asm	/^f0102b8e:	c7 44 24 04 5f 03 00 	movl   $0x35f,0x4(%esp)$/;"	l
f0102b95	obj/kern/kernel.asm	/^f0102b95:	00 $/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102b9d	obj/kern/kernel.asm	/^f0102b9d:	e8 2f d5 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102ba2	obj/kern/kernel.asm	/^f0102ba2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102ba9	obj/kern/kernel.asm	/^f0102ba9:	00 $/;"	l
f0102baa	obj/kern/kernel.asm	/^f0102baa:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102baf	obj/kern/kernel.asm	/^f0102baf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102bb2	obj/kern/kernel.asm	/^f0102bb2:	e8 69 f0 ff ff       	call   f0101c20 <check_va2pa>$/;"	l
f0102bb7	obj/kern/kernel.asm	/^f0102bb7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0102bba	obj/kern/kernel.asm	/^f0102bba:	2b 15 cc 42 21 f0    	sub    0xf02142cc,%edx$/;"	l
f0102bc0	obj/kern/kernel.asm	/^f0102bc0:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0102bc3	obj/kern/kernel.asm	/^f0102bc3:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0102bc9	obj/kern/kernel.asm	/^f0102bc9:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	39 d0                	cmp    %edx,%eax$/;"	l
f0102bce	obj/kern/kernel.asm	/^f0102bce:	3e 74 24             	je,pt  f0102bf5 <page_check+0x813>$/;"	l
f0102bd1	obj/kern/kernel.asm	/^f0102bd1:	c7 44 24 0c 84 64 10 	movl   $0xf0106484,0xc(%esp)$/;"	l
f0102bd8	obj/kern/kernel.asm	/^f0102bd8:	f0 $/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102be0	obj/kern/kernel.asm	/^f0102be0:	f0 $/;"	l
f0102be1	obj/kern/kernel.asm	/^f0102be1:	c7 44 24 04 62 03 00 	movl   $0x362,0x4(%esp)$/;"	l
f0102be8	obj/kern/kernel.asm	/^f0102be8:	00 $/;"	l
f0102be9	obj/kern/kernel.asm	/^f0102be9:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102bf0	obj/kern/kernel.asm	/^f0102bf0:	e8 dc d4 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102bf5	obj/kern/kernel.asm	/^f0102bf5:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102bfc	obj/kern/kernel.asm	/^f0102bfc:	00 $/;"	l
f0102bfd	obj/kern/kernel.asm	/^f0102bfd:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102c02	obj/kern/kernel.asm	/^f0102c02:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c05	obj/kern/kernel.asm	/^f0102c05:	e8 16 f0 ff ff       	call   f0101c20 <check_va2pa>$/;"	l
f0102c0a	obj/kern/kernel.asm	/^f0102c0a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0102c0d	obj/kern/kernel.asm	/^f0102c0d:	2b 15 cc 42 21 f0    	sub    0xf02142cc,%edx$/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0102c16	obj/kern/kernel.asm	/^f0102c16:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0102c1c	obj/kern/kernel.asm	/^f0102c1c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102c1f	obj/kern/kernel.asm	/^f0102c1f:	39 d0                	cmp    %edx,%eax$/;"	l
f0102c21	obj/kern/kernel.asm	/^f0102c21:	3e 74 24             	je,pt  f0102c48 <page_check+0x866>$/;"	l
f0102c24	obj/kern/kernel.asm	/^f0102c24:	c7 44 24 0c b0 64 10 	movl   $0xf01064b0,0xc(%esp)$/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	f0 $/;"	l
f0102c2c	obj/kern/kernel.asm	/^f0102c2c:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102c33	obj/kern/kernel.asm	/^f0102c33:	f0 $/;"	l
f0102c34	obj/kern/kernel.asm	/^f0102c34:	c7 44 24 04 63 03 00 	movl   $0x363,0x4(%esp)$/;"	l
f0102c3b	obj/kern/kernel.asm	/^f0102c3b:	00 $/;"	l
f0102c3c	obj/kern/kernel.asm	/^f0102c3c:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102c43	obj/kern/kernel.asm	/^f0102c43:	e8 89 d4 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102c48	obj/kern/kernel.asm	/^f0102c48:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	66 83 78 08 02       	cmpw   $0x2,0x8(%eax)$/;"	l
f0102c50	obj/kern/kernel.asm	/^f0102c50:	3e 74 24             	je,pt  f0102c77 <page_check+0x895>$/;"	l
f0102c53	obj/kern/kernel.asm	/^f0102c53:	c7 44 24 0c be 66 10 	movl   $0xf01066be,0xc(%esp)$/;"	l
f0102c5a	obj/kern/kernel.asm	/^f0102c5a:	f0 $/;"	l
f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102c62	obj/kern/kernel.asm	/^f0102c62:	f0 $/;"	l
f0102c63	obj/kern/kernel.asm	/^f0102c63:	c7 44 24 04 65 03 00 	movl   $0x365,0x4(%esp)$/;"	l
f0102c6a	obj/kern/kernel.asm	/^f0102c6a:	00 $/;"	l
f0102c6b	obj/kern/kernel.asm	/^f0102c6b:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102c72	obj/kern/kernel.asm	/^f0102c72:	e8 5a d4 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102c7a	obj/kern/kernel.asm	/^f0102c7a:	66 83 78 08 00       	cmpw   $0x0,0x8(%eax)$/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	3e 74 24             	je,pt  f0102ca6 <page_check+0x8c4>$/;"	l
f0102c82	obj/kern/kernel.asm	/^f0102c82:	c7 44 24 0c cf 66 10 	movl   $0xf01066cf,0xc(%esp)$/;"	l
f0102c89	obj/kern/kernel.asm	/^f0102c89:	f0 $/;"	l
f0102c8a	obj/kern/kernel.asm	/^f0102c8a:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102c91	obj/kern/kernel.asm	/^f0102c91:	f0 $/;"	l
f0102c92	obj/kern/kernel.asm	/^f0102c92:	c7 44 24 04 66 03 00 	movl   $0x366,0x4(%esp)$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	00 $/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	e8 2b d4 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102ca6	obj/kern/kernel.asm	/^f0102ca6:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0102ca9	obj/kern/kernel.asm	/^f0102ca9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102cac	obj/kern/kernel.asm	/^f0102cac:	e8 7b f1 ff ff       	call   f0101e2c <page_alloc>$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	85 c0                	test   %eax,%eax$/;"	l
f0102cb3	obj/kern/kernel.asm	/^f0102cb3:	75 08                	jne    f0102cbd <page_check+0x8db>$/;"	l
f0102cb5	obj/kern/kernel.asm	/^f0102cb5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
f0102cbb	obj/kern/kernel.asm	/^f0102cbb:	74 24                	je     f0102ce1 <page_check+0x8ff>$/;"	l
f0102cbd	obj/kern/kernel.asm	/^f0102cbd:	c7 44 24 0c e0 64 10 	movl   $0xf01064e0,0xc(%esp)$/;"	l
f0102cc4	obj/kern/kernel.asm	/^f0102cc4:	f0 $/;"	l
f0102cc5	obj/kern/kernel.asm	/^f0102cc5:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102ccc	obj/kern/kernel.asm	/^f0102ccc:	f0 $/;"	l
f0102ccd	obj/kern/kernel.asm	/^f0102ccd:	c7 44 24 04 69 03 00 	movl   $0x369,0x4(%esp)$/;"	l
f0102cd4	obj/kern/kernel.asm	/^f0102cd4:	00 $/;"	l
f0102cd5	obj/kern/kernel.asm	/^f0102cd5:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102cdc	obj/kern/kernel.asm	/^f0102cdc:	e8 f0 d3 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102ce1	obj/kern/kernel.asm	/^f0102ce1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102ce8	obj/kern/kernel.asm	/^f0102ce8:	00 $/;"	l
f0102ce9	obj/kern/kernel.asm	/^f0102ce9:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102cee	obj/kern/kernel.asm	/^f0102cee:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102cf1	obj/kern/kernel.asm	/^f0102cf1:	e8 e6 f4 ff ff       	call   f01021dc <page_remove>$/;"	l
f0102cf6	obj/kern/kernel.asm	/^f0102cf6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102cfd	obj/kern/kernel.asm	/^f0102cfd:	00 $/;"	l
f0102cfe	obj/kern/kernel.asm	/^f0102cfe:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d06	obj/kern/kernel.asm	/^f0102d06:	e8 15 ef ff ff       	call   f0101c20 <check_va2pa>$/;"	l
f0102d0b	obj/kern/kernel.asm	/^f0102d0b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	3e 74 24             	je,pt  f0102d35 <page_check+0x953>$/;"	l
f0102d11	obj/kern/kernel.asm	/^f0102d11:	c7 44 24 0c 04 65 10 	movl   $0xf0106504,0xc(%esp)$/;"	l
f0102d18	obj/kern/kernel.asm	/^f0102d18:	f0 $/;"	l
f0102d19	obj/kern/kernel.asm	/^f0102d19:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102d20	obj/kern/kernel.asm	/^f0102d20:	f0 $/;"	l
f0102d21	obj/kern/kernel.asm	/^f0102d21:	c7 44 24 04 6d 03 00 	movl   $0x36d,0x4(%esp)$/;"	l
f0102d28	obj/kern/kernel.asm	/^f0102d28:	00 $/;"	l
f0102d29	obj/kern/kernel.asm	/^f0102d29:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102d30	obj/kern/kernel.asm	/^f0102d30:	e8 9c d3 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102d35	obj/kern/kernel.asm	/^f0102d35:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102d3c	obj/kern/kernel.asm	/^f0102d3c:	00 $/;"	l
f0102d3d	obj/kern/kernel.asm	/^f0102d3d:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102d42	obj/kern/kernel.asm	/^f0102d42:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d45	obj/kern/kernel.asm	/^f0102d45:	e8 d6 ee ff ff       	call   f0101c20 <check_va2pa>$/;"	l
f0102d4a	obj/kern/kernel.asm	/^f0102d4a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0102d4d	obj/kern/kernel.asm	/^f0102d4d:	2b 15 cc 42 21 f0    	sub    0xf02142cc,%edx$/;"	l
f0102d53	obj/kern/kernel.asm	/^f0102d53:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0102d56	obj/kern/kernel.asm	/^f0102d56:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0102d5c	obj/kern/kernel.asm	/^f0102d5c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102d5f	obj/kern/kernel.asm	/^f0102d5f:	39 d0                	cmp    %edx,%eax$/;"	l
f0102d61	obj/kern/kernel.asm	/^f0102d61:	3e 74 24             	je,pt  f0102d88 <page_check+0x9a6>$/;"	l
f0102d64	obj/kern/kernel.asm	/^f0102d64:	c7 44 24 0c b0 64 10 	movl   $0xf01064b0,0xc(%esp)$/;"	l
f0102d6b	obj/kern/kernel.asm	/^f0102d6b:	f0 $/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102d73	obj/kern/kernel.asm	/^f0102d73:	f0 $/;"	l
f0102d74	obj/kern/kernel.asm	/^f0102d74:	c7 44 24 04 6e 03 00 	movl   $0x36e,0x4(%esp)$/;"	l
f0102d7b	obj/kern/kernel.asm	/^f0102d7b:	00 $/;"	l
f0102d7c	obj/kern/kernel.asm	/^f0102d7c:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102d83	obj/kern/kernel.asm	/^f0102d83:	e8 49 d3 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102d8b	obj/kern/kernel.asm	/^f0102d8b:	66 83 78 08 01       	cmpw   $0x1,0x8(%eax)$/;"	l
f0102d90	obj/kern/kernel.asm	/^f0102d90:	3e 74 24             	je,pt  f0102db7 <page_check+0x9d5>$/;"	l
f0102d93	obj/kern/kernel.asm	/^f0102d93:	c7 44 24 0c 8b 66 10 	movl   $0xf010668b,0xc(%esp)$/;"	l
f0102d9a	obj/kern/kernel.asm	/^f0102d9a:	f0 $/;"	l
f0102d9b	obj/kern/kernel.asm	/^f0102d9b:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102da2	obj/kern/kernel.asm	/^f0102da2:	f0 $/;"	l
f0102da3	obj/kern/kernel.asm	/^f0102da3:	c7 44 24 04 6f 03 00 	movl   $0x36f,0x4(%esp)$/;"	l
f0102daa	obj/kern/kernel.asm	/^f0102daa:	00 $/;"	l
f0102dab	obj/kern/kernel.asm	/^f0102dab:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102db2	obj/kern/kernel.asm	/^f0102db2:	e8 1a d3 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102db7	obj/kern/kernel.asm	/^f0102db7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	66 83 78 08 00       	cmpw   $0x0,0x8(%eax)$/;"	l
f0102dbf	obj/kern/kernel.asm	/^f0102dbf:	3e 74 24             	je,pt  f0102de6 <page_check+0xa04>$/;"	l
f0102dc2	obj/kern/kernel.asm	/^f0102dc2:	c7 44 24 0c cf 66 10 	movl   $0xf01066cf,0xc(%esp)$/;"	l
f0102dc9	obj/kern/kernel.asm	/^f0102dc9:	f0 $/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	f0 $/;"	l
f0102dd2	obj/kern/kernel.asm	/^f0102dd2:	c7 44 24 04 70 03 00 	movl   $0x370,0x4(%esp)$/;"	l
f0102dd9	obj/kern/kernel.asm	/^f0102dd9:	00 $/;"	l
f0102dda	obj/kern/kernel.asm	/^f0102dda:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102de1	obj/kern/kernel.asm	/^f0102de1:	e8 eb d2 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102ded	obj/kern/kernel.asm	/^f0102ded:	00 $/;"	l
f0102dee	obj/kern/kernel.asm	/^f0102dee:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102df6	obj/kern/kernel.asm	/^f0102df6:	e8 e1 f3 ff ff       	call   f01021dc <page_remove>$/;"	l
f0102dfb	obj/kern/kernel.asm	/^f0102dfb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102e02	obj/kern/kernel.asm	/^f0102e02:	00 $/;"	l
f0102e03	obj/kern/kernel.asm	/^f0102e03:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102e08	obj/kern/kernel.asm	/^f0102e08:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102e0b	obj/kern/kernel.asm	/^f0102e0b:	e8 10 ee ff ff       	call   f0101c20 <check_va2pa>$/;"	l
f0102e10	obj/kern/kernel.asm	/^f0102e10:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102e13	obj/kern/kernel.asm	/^f0102e13:	3e 74 24             	je,pt  f0102e3a <page_check+0xa58>$/;"	l
f0102e16	obj/kern/kernel.asm	/^f0102e16:	c7 44 24 0c 04 65 10 	movl   $0xf0106504,0xc(%esp)$/;"	l
f0102e1d	obj/kern/kernel.asm	/^f0102e1d:	f0 $/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102e25	obj/kern/kernel.asm	/^f0102e25:	f0 $/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	c7 44 24 04 74 03 00 	movl   $0x374,0x4(%esp)$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	00 $/;"	l
f0102e2e	obj/kern/kernel.asm	/^f0102e2e:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102e35	obj/kern/kernel.asm	/^f0102e35:	e8 97 d2 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102e3a	obj/kern/kernel.asm	/^f0102e3a:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102e41	obj/kern/kernel.asm	/^f0102e41:	00 $/;"	l
f0102e42	obj/kern/kernel.asm	/^f0102e42:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102e47	obj/kern/kernel.asm	/^f0102e47:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102e4a	obj/kern/kernel.asm	/^f0102e4a:	e8 d1 ed ff ff       	call   f0101c20 <check_va2pa>$/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	3e 74 24             	je,pt  f0102e79 <page_check+0xa97>$/;"	l
f0102e55	obj/kern/kernel.asm	/^f0102e55:	c7 44 24 0c 28 65 10 	movl   $0xf0106528,0xc(%esp)$/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	f0 $/;"	l
f0102e5d	obj/kern/kernel.asm	/^f0102e5d:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	f0 $/;"	l
f0102e65	obj/kern/kernel.asm	/^f0102e65:	c7 44 24 04 75 03 00 	movl   $0x375,0x4(%esp)$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	00 $/;"	l
f0102e6d	obj/kern/kernel.asm	/^f0102e6d:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102e74	obj/kern/kernel.asm	/^f0102e74:	e8 58 d2 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102e79	obj/kern/kernel.asm	/^f0102e79:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102e7c	obj/kern/kernel.asm	/^f0102e7c:	66 83 78 08 00       	cmpw   $0x0,0x8(%eax)$/;"	l
f0102e81	obj/kern/kernel.asm	/^f0102e81:	3e 74 24             	je,pt  f0102ea8 <page_check+0xac6>$/;"	l
f0102e84	obj/kern/kernel.asm	/^f0102e84:	c7 44 24 0c e0 66 10 	movl   $0xf01066e0,0xc(%esp)$/;"	l
f0102e8b	obj/kern/kernel.asm	/^f0102e8b:	f0 $/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102e93	obj/kern/kernel.asm	/^f0102e93:	f0 $/;"	l
f0102e94	obj/kern/kernel.asm	/^f0102e94:	c7 44 24 04 76 03 00 	movl   $0x376,0x4(%esp)$/;"	l
f0102e9b	obj/kern/kernel.asm	/^f0102e9b:	00 $/;"	l
f0102e9c	obj/kern/kernel.asm	/^f0102e9c:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102ea3	obj/kern/kernel.asm	/^f0102ea3:	e8 29 d2 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102ea8	obj/kern/kernel.asm	/^f0102ea8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102eab	obj/kern/kernel.asm	/^f0102eab:	66 83 78 08 00       	cmpw   $0x0,0x8(%eax)$/;"	l
f0102eb0	obj/kern/kernel.asm	/^f0102eb0:	3e 74 24             	je,pt  f0102ed7 <page_check+0xaf5>$/;"	l
f0102eb3	obj/kern/kernel.asm	/^f0102eb3:	c7 44 24 0c cf 66 10 	movl   $0xf01066cf,0xc(%esp)$/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	f0 $/;"	l
f0102ebb	obj/kern/kernel.asm	/^f0102ebb:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102ec2	obj/kern/kernel.asm	/^f0102ec2:	f0 $/;"	l
f0102ec3	obj/kern/kernel.asm	/^f0102ec3:	c7 44 24 04 77 03 00 	movl   $0x377,0x4(%esp)$/;"	l
f0102eca	obj/kern/kernel.asm	/^f0102eca:	00 $/;"	l
f0102ecb	obj/kern/kernel.asm	/^f0102ecb:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102ed2	obj/kern/kernel.asm	/^f0102ed2:	e8 fa d1 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102edd	obj/kern/kernel.asm	/^f0102edd:	e8 4a ef ff ff       	call   f0101e2c <page_alloc>$/;"	l
f0102ee2	obj/kern/kernel.asm	/^f0102ee2:	85 c0                	test   %eax,%eax$/;"	l
f0102ee4	obj/kern/kernel.asm	/^f0102ee4:	75 08                	jne    f0102eee <page_check+0xb0c>$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f0102eec	obj/kern/kernel.asm	/^f0102eec:	74 24                	je     f0102f12 <page_check+0xb30>$/;"	l
f0102eee	obj/kern/kernel.asm	/^f0102eee:	c7 44 24 0c 50 65 10 	movl   $0xf0106550,0xc(%esp)$/;"	l
f0102ef5	obj/kern/kernel.asm	/^f0102ef5:	f0 $/;"	l
f0102ef6	obj/kern/kernel.asm	/^f0102ef6:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102efd	obj/kern/kernel.asm	/^f0102efd:	f0 $/;"	l
f0102efe	obj/kern/kernel.asm	/^f0102efe:	c7 44 24 04 7a 03 00 	movl   $0x37a,0x4(%esp)$/;"	l
f0102f05	obj/kern/kernel.asm	/^f0102f05:	00 $/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102f0d	obj/kern/kernel.asm	/^f0102f0d:	e8 bf d1 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102f12	obj/kern/kernel.asm	/^f0102f12:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0102f15	obj/kern/kernel.asm	/^f0102f15:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	e8 0f ef ff ff       	call   f0101e2c <page_alloc>$/;"	l
f0102f1d	obj/kern/kernel.asm	/^f0102f1d:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f0102f20	obj/kern/kernel.asm	/^f0102f20:	3e 74 24             	je,pt  f0102f47 <page_check+0xb65>$/;"	l
f0102f23	obj/kern/kernel.asm	/^f0102f23:	c7 44 24 0c 57 66 10 	movl   $0xf0106657,0xc(%esp)$/;"	l
f0102f2a	obj/kern/kernel.asm	/^f0102f2a:	f0 $/;"	l
f0102f2b	obj/kern/kernel.asm	/^f0102f2b:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102f32	obj/kern/kernel.asm	/^f0102f32:	f0 $/;"	l
f0102f33	obj/kern/kernel.asm	/^f0102f33:	c7 44 24 04 7d 03 00 	movl   $0x37d,0x4(%esp)$/;"	l
f0102f3a	obj/kern/kernel.asm	/^f0102f3a:	00 $/;"	l
f0102f3b	obj/kern/kernel.asm	/^f0102f3b:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102f42	obj/kern/kernel.asm	/^f0102f42:	e8 8a d1 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102f4c	obj/kern/kernel.asm	/^f0102f4c:	8b 10                	mov    (%eax),%edx$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102f54	obj/kern/kernel.asm	/^f0102f54:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f0102f5d	obj/kern/kernel.asm	/^f0102f5d:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0102f66	obj/kern/kernel.asm	/^f0102f66:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102f69	obj/kern/kernel.asm	/^f0102f69:	39 c2                	cmp    %eax,%edx$/;"	l
f0102f6b	obj/kern/kernel.asm	/^f0102f6b:	3e 74 24             	je,pt  f0102f92 <page_check+0xbb0>$/;"	l
f0102f6e	obj/kern/kernel.asm	/^f0102f6e:	c7 44 24 0c a8 62 10 	movl   $0xf01062a8,0xc(%esp)$/;"	l
f0102f75	obj/kern/kernel.asm	/^f0102f75:	f0 $/;"	l
f0102f76	obj/kern/kernel.asm	/^f0102f76:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102f7d	obj/kern/kernel.asm	/^f0102f7d:	f0 $/;"	l
f0102f7e	obj/kern/kernel.asm	/^f0102f7e:	c7 44 24 04 90 03 00 	movl   $0x390,0x4(%esp)$/;"	l
f0102f85	obj/kern/kernel.asm	/^f0102f85:	00 $/;"	l
f0102f86	obj/kern/kernel.asm	/^f0102f86:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102f8d	obj/kern/kernel.asm	/^f0102f8d:	e8 3f d1 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102f97	obj/kern/kernel.asm	/^f0102f97:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102f9d	obj/kern/kernel.asm	/^f0102f9d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102fa0	obj/kern/kernel.asm	/^f0102fa0:	66 83 78 08 01       	cmpw   $0x1,0x8(%eax)$/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	3e 74 24             	je,pt  f0102fcc <page_check+0xbea>$/;"	l
f0102fa8	obj/kern/kernel.asm	/^f0102fa8:	c7 44 24 0c 9c 66 10 	movl   $0xf010669c,0xc(%esp)$/;"	l
f0102faf	obj/kern/kernel.asm	/^f0102faf:	f0 $/;"	l
f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0102fb7	obj/kern/kernel.asm	/^f0102fb7:	f0 $/;"	l
f0102fb8	obj/kern/kernel.asm	/^f0102fb8:	c7 44 24 04 92 03 00 	movl   $0x392,0x4(%esp)$/;"	l
f0102fbf	obj/kern/kernel.asm	/^f0102fbf:	00 $/;"	l
f0102fc0	obj/kern/kernel.asm	/^f0102fc0:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0102fc7	obj/kern/kernel.asm	/^f0102fc7:	e8 05 d1 ff ff       	call   f01000d1 <_panic>$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102fcf	obj/kern/kernel.asm	/^f0102fcf:	66 c7 40 08 00 00    	movw   $0x0,0x8(%eax)$/;"	l
f0102fd5	obj/kern/kernel.asm	/^f0102fd5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102fd8	obj/kern/kernel.asm	/^f0102fd8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102fdb	obj/kern/kernel.asm	/^f0102fdb:	e8 93 ee ff ff       	call   f0101e73 <page_free>$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	be 00 10 40 00       	mov    $0x401000,%esi$/;"	l
f0102fe5	obj/kern/kernel.asm	/^f0102fe5:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102fec	obj/kern/kernel.asm	/^f0102fec:	00 $/;"	l
f0102fed	obj/kern/kernel.asm	/^f0102fed:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f0102ff4	obj/kern/kernel.asm	/^f0102ff4:	00 $/;"	l
f0102ff5	obj/kern/kernel.asm	/^f0102ff5:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0102ffa	obj/kern/kernel.asm	/^f0102ffa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	e8 e0 ee ff ff       	call   f0101ee2 <pgdir_walk>$/;"	l
f0103002	obj/kern/kernel.asm	/^f0103002:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103005	obj/kern/kernel.asm	/^f0103005:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f010300a	obj/kern/kernel.asm	/^f010300a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f010300d	obj/kern/kernel.asm	/^f010300d:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0103013	obj/kern/kernel.asm	/^f0103013:	89 d0                	mov    %edx,%eax$/;"	l
f0103015	obj/kern/kernel.asm	/^f0103015:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103018	obj/kern/kernel.asm	/^f0103018:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f010301e	obj/kern/kernel.asm	/^f010301e:	3e 72 20             	jb,pt  f0103041 <page_check+0xc5f>$/;"	l
f0103021	obj/kern/kernel.asm	/^f0103021:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103025	obj/kern/kernel.asm	/^f0103025:	c7 44 24 08 4c 60 10 	movl   $0xf010604c,0x8(%esp)$/;"	l
f010302c	obj/kern/kernel.asm	/^f010302c:	f0 $/;"	l
f010302d	obj/kern/kernel.asm	/^f010302d:	c7 44 24 04 99 03 00 	movl   $0x399,0x4(%esp)$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	00 $/;"	l
f0103035	obj/kern/kernel.asm	/^f0103035:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f010303c	obj/kern/kernel.asm	/^f010303c:	e8 90 d0 ff ff       	call   f01000d1 <_panic>$/;"	l
f0103041	obj/kern/kernel.asm	/^f0103041:	89 f0                	mov    %esi,%eax$/;"	l
f0103043	obj/kern/kernel.asm	/^f0103043:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0103046	obj/kern/kernel.asm	/^f0103046:	83 e0 04             	and    $0x4,%eax$/;"	l
f0103049	obj/kern/kernel.asm	/^f0103049:	8d 84 02 00 00 00 f0 	lea    -0x10000000(%edx,%eax,1),%eax$/;"	l
f0103050	obj/kern/kernel.asm	/^f0103050:	3b 45 e4             	cmp    -0x1c(%ebp),%eax$/;"	l
f0103053	obj/kern/kernel.asm	/^f0103053:	3e 74 24             	je,pt  f010307a <page_check+0xc98>$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	c7 44 24 0c f1 66 10 	movl   $0xf01066f1,0xc(%esp)$/;"	l
f010305d	obj/kern/kernel.asm	/^f010305d:	f0 $/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0103065	obj/kern/kernel.asm	/^f0103065:	f0 $/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	c7 44 24 04 9a 03 00 	movl   $0x39a,0x4(%esp)$/;"	l
f010306d	obj/kern/kernel.asm	/^f010306d:	00 $/;"	l
f010306e	obj/kern/kernel.asm	/^f010306e:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f0103075	obj/kern/kernel.asm	/^f0103075:	e8 57 d0 ff ff       	call   f01000d1 <_panic>$/;"	l
f010307a	obj/kern/kernel.asm	/^f010307a:	89 f2                	mov    %esi,%edx$/;"	l
f010307c	obj/kern/kernel.asm	/^f010307c:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f010307f	obj/kern/kernel.asm	/^f010307f:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0103084	obj/kern/kernel.asm	/^f0103084:	c7 04 90 00 00 00 00 	movl   $0x0,(%eax,%edx,4)$/;"	l
f010308b	obj/kern/kernel.asm	/^f010308b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010308e	obj/kern/kernel.asm	/^f010308e:	66 c7 40 08 00 00    	movw   $0x0,0x8(%eax)$/;"	l
f0103094	obj/kern/kernel.asm	/^f0103094:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103097	obj/kern/kernel.asm	/^f0103097:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f010309d	obj/kern/kernel.asm	/^f010309d:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	89 c2                	mov    %eax,%edx$/;"	l
f01030a8	obj/kern/kernel.asm	/^f01030a8:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01030ab	obj/kern/kernel.asm	/^f01030ab:	89 d0                	mov    %edx,%eax$/;"	l
f01030ad	obj/kern/kernel.asm	/^f01030ad:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01030b0	obj/kern/kernel.asm	/^f01030b0:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f01030b6	obj/kern/kernel.asm	/^f01030b6:	3e 72 20             	jb,pt  f01030d9 <page_check+0xcf7>$/;"	l
f01030b9	obj/kern/kernel.asm	/^f01030b9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01030bd	obj/kern/kernel.asm	/^f01030bd:	c7 44 24 08 4c 60 10 	movl   $0xf010604c,0x8(%esp)$/;"	l
f01030c4	obj/kern/kernel.asm	/^f01030c4:	f0 $/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	c7 44 24 04 5a 00 00 	movl   $0x5a,0x4(%esp)$/;"	l
f01030cc	obj/kern/kernel.asm	/^f01030cc:	00 $/;"	l
f01030cd	obj/kern/kernel.asm	/^f01030cd:	c7 04 24 2c 5c 10 f0 	movl   $0xf0105c2c,(%esp)$/;"	l
f01030d4	obj/kern/kernel.asm	/^f01030d4:	e8 f8 cf ff ff       	call   f01000d1 <_panic>$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01030df	obj/kern/kernel.asm	/^f01030df:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	00 $/;"	l
f01030e7	obj/kern/kernel.asm	/^f01030e7:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f01030ee	obj/kern/kernel.asm	/^f01030ee:	00 $/;"	l
f01030ef	obj/kern/kernel.asm	/^f01030ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	e8 29 24 00 00       	call   f0105520 <memset>$/;"	l
f01030f7	obj/kern/kernel.asm	/^f01030f7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01030fa	obj/kern/kernel.asm	/^f01030fa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	e8 71 ed ff ff       	call   f0101e73 <page_free>$/;"	l
f0103102	obj/kern/kernel.asm	/^f0103102:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	00 $/;"	l
f010310a	obj/kern/kernel.asm	/^f010310a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103111	obj/kern/kernel.asm	/^f0103111:	00 $/;"	l
f0103112	obj/kern/kernel.asm	/^f0103112:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f0103117	obj/kern/kernel.asm	/^f0103117:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	e8 c3 ed ff ff       	call   f0101ee2 <pgdir_walk>$/;"	l
f010311f	obj/kern/kernel.asm	/^f010311f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103122	obj/kern/kernel.asm	/^f0103122:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f0103128	obj/kern/kernel.asm	/^f0103128:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0103131	obj/kern/kernel.asm	/^f0103131:	89 c2                	mov    %eax,%edx$/;"	l
f0103133	obj/kern/kernel.asm	/^f0103133:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103136	obj/kern/kernel.asm	/^f0103136:	89 d0                	mov    %edx,%eax$/;"	l
f0103138	obj/kern/kernel.asm	/^f0103138:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010313b	obj/kern/kernel.asm	/^f010313b:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f0103141	obj/kern/kernel.asm	/^f0103141:	3e 72 20             	jb,pt  f0103164 <page_check+0xd82>$/;"	l
f0103144	obj/kern/kernel.asm	/^f0103144:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103148	obj/kern/kernel.asm	/^f0103148:	c7 44 24 08 4c 60 10 	movl   $0xf010604c,0x8(%esp)$/;"	l
f010314f	obj/kern/kernel.asm	/^f010314f:	f0 $/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	c7 44 24 04 5a 00 00 	movl   $0x5a,0x4(%esp)$/;"	l
f0103157	obj/kern/kernel.asm	/^f0103157:	00 $/;"	l
f0103158	obj/kern/kernel.asm	/^f0103158:	c7 04 24 2c 5c 10 f0 	movl   $0xf0105c2c,(%esp)$/;"	l
f010315f	obj/kern/kernel.asm	/^f010315f:	e8 6d cf ff ff       	call   f01000d1 <_panic>$/;"	l
f0103164	obj/kern/kernel.asm	/^f0103164:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f010316a	obj/kern/kernel.asm	/^f010316a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010316d	obj/kern/kernel.asm	/^f010316d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103172	obj/kern/kernel.asm	/^f0103172:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103175	obj/kern/kernel.asm	/^f0103175:	f6 04 90 01          	testb  $0x1,(%eax,%edx,4)$/;"	l
f0103179	obj/kern/kernel.asm	/^f0103179:	3e 74 24             	je,pt  f01031a0 <page_check+0xdbe>$/;"	l
f010317c	obj/kern/kernel.asm	/^f010317c:	c7 44 24 0c 09 67 10 	movl   $0xf0106709,0xc(%esp)$/;"	l
f0103183	obj/kern/kernel.asm	/^f0103183:	f0 $/;"	l
f0103184	obj/kern/kernel.asm	/^f0103184:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f010318b	obj/kern/kernel.asm	/^f010318b:	f0 $/;"	l
f010318c	obj/kern/kernel.asm	/^f010318c:	c7 44 24 04 a4 03 00 	movl   $0x3a4,0x4(%esp)$/;"	l
f0103193	obj/kern/kernel.asm	/^f0103193:	00 $/;"	l
f0103194	obj/kern/kernel.asm	/^f0103194:	c7 04 24 8e 65 10 f0 	movl   $0xf010658e,(%esp)$/;"	l
f010319b	obj/kern/kernel.asm	/^f010319b:	e8 31 cf ff ff       	call   f01000d1 <_panic>$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	83 c2 01             	add    $0x1,%edx$/;"	l
f01031a3	obj/kern/kernel.asm	/^f01031a3:	81 fa ff 03 00 00    	cmp    $0x3ff,%edx$/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	7e c7                	jle    f0103172 <page_check+0xd90>$/;"	l
f01031ab	obj/kern/kernel.asm	/^f01031ab:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01031b6	obj/kern/kernel.asm	/^f01031b6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01031b9	obj/kern/kernel.asm	/^f01031b9:	66 c7 40 08 00 00    	movw   $0x0,0x8(%eax)$/;"	l
f01031bf	obj/kern/kernel.asm	/^f01031bf:	89 1d 18 36 21 f0    	mov    %ebx,0xf0213618$/;"	l
f01031c5	obj/kern/kernel.asm	/^f01031c5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01031c8	obj/kern/kernel.asm	/^f01031c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	e8 a3 ec ff ff       	call   f0101e73 <page_free>$/;"	l
f01031d0	obj/kern/kernel.asm	/^f01031d0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031d6	obj/kern/kernel.asm	/^f01031d6:	e8 98 ec ff ff       	call   f0101e73 <page_free>$/;"	l
f01031db	obj/kern/kernel.asm	/^f01031db:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01031de	obj/kern/kernel.asm	/^f01031de:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031e1	obj/kern/kernel.asm	/^f01031e1:	e8 8d ec ff ff       	call   f0101e73 <page_free>$/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6:	c7 04 24 20 67 10 f0 	movl   $0xf0106720,(%esp)$/;"	l
f01031ed	obj/kern/kernel.asm	/^f01031ed:	e8 18 09 00 00       	call   f0103b0a <cprintf>$/;"	l
f01031f2	obj/kern/kernel.asm	/^f01031f2:	83 c4 30             	add    $0x30,%esp$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	5b                   	pop    %ebx$/;"	l
f01031f6	obj/kern/kernel.asm	/^f01031f6:	5e                   	pop    %esi$/;"	l
f01031f7	obj/kern/kernel.asm	/^f01031f7:	5d                   	pop    %ebp$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	c3                   	ret    $/;"	l
f01031f9	obj/kern/kernel.asm	/^f01031f9:	00 00                	add    %al,(%eax)$/;"	l
f01031fc	obj/kern/kernel.asm	/^f01031fc <envid2env>:$/;"	l
f01031fc	obj/kern/kernel.asm	/^f01031fc:	55                   	push   %ebp$/;"	l
f01031fd	obj/kern/kernel.asm	/^f01031fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103202	obj/kern/kernel.asm	/^f0103202:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103205	obj/kern/kernel.asm	/^f0103205:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0103209	obj/kern/kernel.asm	/^f0103209:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010320c	obj/kern/kernel.asm	/^f010320c:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010320f	obj/kern/kernel.asm	/^f010320f:	85 db                	test   %ebx,%ebx$/;"	l
f0103211	obj/kern/kernel.asm	/^f0103211:	75 0e                	jne    f0103221 <envid2env+0x25>$/;"	l
f0103213	obj/kern/kernel.asm	/^f0103213:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f0103218	obj/kern/kernel.asm	/^f0103218:	89 06                	mov    %eax,(%esi)$/;"	l
f010321a	obj/kern/kernel.asm	/^f010321a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010321f	obj/kern/kernel.asm	/^f010321f:	eb 60                	jmp    f0103281 <envid2env+0x85>$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103223	obj/kern/kernel.asm	/^f0103223:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	89 c8                	mov    %ecx,%eax$/;"	l
f010322b	obj/kern/kernel.asm	/^f010322b:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f010322e	obj/kern/kernel.asm	/^f010322e:	29 c8                	sub    %ecx,%eax$/;"	l
f0103230	obj/kern/kernel.asm	/^f0103230:	8b 15 20 36 21 f0    	mov    0xf0213620,%edx$/;"	l
f0103236	obj/kern/kernel.asm	/^f0103236:	8d 0c 82             	lea    (%edx,%eax,4),%ecx$/;"	l
f0103239	obj/kern/kernel.asm	/^f0103239:	83 79 54 00          	cmpl   $0x0,0x54(%ecx)$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	74 05                	je     f0103244 <envid2env+0x48>$/;"	l
f010323f	obj/kern/kernel.asm	/^f010323f:	39 59 4c             	cmp    %ebx,0x4c(%ecx)$/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	74 0d                	je     f0103251 <envid2env+0x55>$/;"	l
f0103244	obj/kern/kernel.asm	/^f0103244:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f010324a	obj/kern/kernel.asm	/^f010324a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010324f	obj/kern/kernel.asm	/^f010324f:	eb 30                	jmp    f0103281 <envid2env+0x85>$/;"	l
f0103251	obj/kern/kernel.asm	/^f0103251:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0103255	obj/kern/kernel.asm	/^f0103255:	74 23                	je     f010327a <envid2env+0x7e>$/;"	l
f0103257	obj/kern/kernel.asm	/^f0103257:	3b 0d 24 36 21 f0    	cmp    0xf0213624,%ecx$/;"	l
f010325d	obj/kern/kernel.asm	/^f010325d:	74 1b                	je     f010327a <envid2env+0x7e>$/;"	l
f010325f	obj/kern/kernel.asm	/^f010325f:	8b 51 50             	mov    0x50(%ecx),%edx$/;"	l
f0103262	obj/kern/kernel.asm	/^f0103262:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267:	3b 50 4c             	cmp    0x4c(%eax),%edx$/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	3e 74 0d             	je,pt  f010327a <envid2env+0x7e>$/;"	l
f010326d	obj/kern/kernel.asm	/^f010326d:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0103273	obj/kern/kernel.asm	/^f0103273:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103278	obj/kern/kernel.asm	/^f0103278:	eb 07                	jmp    f0103281 <envid2env+0x85>$/;"	l
f010327a	obj/kern/kernel.asm	/^f010327a:	89 0e                	mov    %ecx,(%esi)$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103281	obj/kern/kernel.asm	/^f0103281:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f0103284	obj/kern/kernel.asm	/^f0103284:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0103288	obj/kern/kernel.asm	/^f0103288:	89 ec                	mov    %ebp,%esp$/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	5d                   	pop    %ebp$/;"	l
f010328b	obj/kern/kernel.asm	/^f010328b:	c3                   	ret    $/;"	l
f010328c	obj/kern/kernel.asm	/^f010328c <env_init>:$/;"	l
f010328c	obj/kern/kernel.asm	/^f010328c:	55                   	push   %ebp$/;"	l
f010328d	obj/kern/kernel.asm	/^f010328d:	89 e5                	mov    %esp,%ebp$/;"	l
f010328f	obj/kern/kernel.asm	/^f010328f:	53                   	push   %ebx$/;"	l
f0103290	obj/kern/kernel.asm	/^f0103290:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103293	obj/kern/kernel.asm	/^f0103293:	c7 44 24 08 00 f0 01 	movl   $0x1f000,0x8(%esp)$/;"	l
f010329a	obj/kern/kernel.asm	/^f010329a:	00 $/;"	l
f010329b	obj/kern/kernel.asm	/^f010329b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01032a2	obj/kern/kernel.asm	/^f01032a2:	00 $/;"	l
f01032a3	obj/kern/kernel.asm	/^f01032a3:	a1 20 36 21 f0       	mov    0xf0213620,%eax$/;"	l
f01032a8	obj/kern/kernel.asm	/^f01032a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01032ab	obj/kern/kernel.asm	/^f01032ab:	e8 70 22 00 00       	call   f0105520 <memset>$/;"	l
f01032b0	obj/kern/kernel.asm	/^f01032b0:	c7 05 28 36 21 f0 00 	movl   $0x0,0xf0213628$/;"	l
f01032b7	obj/kern/kernel.asm	/^f01032b7:	00 00 00 $/;"	l
f01032ba	obj/kern/kernel.asm	/^f01032ba:	bb ff 03 00 00       	mov    $0x3ff,%ebx$/;"	l
f01032bf	obj/kern/kernel.asm	/^f01032bf:	89 d8                	mov    %ebx,%eax$/;"	l
f01032c1	obj/kern/kernel.asm	/^f01032c1:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f01032c4	obj/kern/kernel.asm	/^f01032c4:	29 d8                	sub    %ebx,%eax$/;"	l
f01032c6	obj/kern/kernel.asm	/^f01032c6:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx$/;"	l
f01032cd	obj/kern/kernel.asm	/^f01032cd:	8b 15 28 36 21 f0    	mov    0xf0213628,%edx$/;"	l
f01032d3	obj/kern/kernel.asm	/^f01032d3:	a1 20 36 21 f0       	mov    0xf0213620,%eax$/;"	l
f01032d8	obj/kern/kernel.asm	/^f01032d8:	89 54 01 44          	mov    %edx,0x44(%ecx,%eax,1)$/;"	l
f01032dc	obj/kern/kernel.asm	/^f01032dc:	85 d2                	test   %edx,%edx$/;"	l
f01032de	obj/kern/kernel.asm	/^f01032de:	74 14                	je     f01032f4 <env_init+0x68>$/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0:	89 c8                	mov    %ecx,%eax$/;"	l
f01032e2	obj/kern/kernel.asm	/^f01032e2:	03 05 20 36 21 f0    	add    0xf0213620,%eax$/;"	l
f01032e8	obj/kern/kernel.asm	/^f01032e8:	83 c0 44             	add    $0x44,%eax$/;"	l
f01032eb	obj/kern/kernel.asm	/^f01032eb:	8b 15 28 36 21 f0    	mov    0xf0213628,%edx$/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	89 42 48             	mov    %eax,0x48(%edx)$/;"	l
f01032f4	obj/kern/kernel.asm	/^f01032f4:	89 d8                	mov    %ebx,%eax$/;"	l
f01032f6	obj/kern/kernel.asm	/^f01032f6:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	29 d8                	sub    %ebx,%eax$/;"	l
f01032fb	obj/kern/kernel.asm	/^f01032fb:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01032fe	obj/kern/kernel.asm	/^f01032fe:	8b 0d 20 36 21 f0    	mov    0xf0213620,%ecx$/;"	l
f0103304	obj/kern/kernel.asm	/^f0103304:	8d 14 08             	lea    (%eax,%ecx,1),%edx$/;"	l
f0103307	obj/kern/kernel.asm	/^f0103307:	89 15 28 36 21 f0    	mov    %edx,0xf0213628$/;"	l
f010330d	obj/kern/kernel.asm	/^f010330d:	c7 44 08 48 28 36 21 	movl   $0xf0213628,0x48(%eax,%ecx,1)$/;"	l
f0103314	obj/kern/kernel.asm	/^f0103314:	f0 $/;"	l
f0103315	obj/kern/kernel.asm	/^f0103315:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	79 a5                	jns    f01032bf <env_init+0x33>$/;"	l
f010331a	obj/kern/kernel.asm	/^f010331a:	83 c4 14             	add    $0x14,%esp$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	5b                   	pop    %ebx$/;"	l
f010331e	obj/kern/kernel.asm	/^f010331e:	5d                   	pop    %ebp$/;"	l
f010331f	obj/kern/kernel.asm	/^f010331f:	c3                   	ret    $/;"	l
f0103320	obj/kern/kernel.asm	/^f0103320 <env_setup_vm>:$/;"	l
f0103320	obj/kern/kernel.asm	/^f0103320:	55                   	push   %ebp$/;"	l
f0103321	obj/kern/kernel.asm	/^f0103321:	89 e5                	mov    %esp,%ebp$/;"	l
f0103323	obj/kern/kernel.asm	/^f0103323:	53                   	push   %ebx$/;"	l
f0103324	obj/kern/kernel.asm	/^f0103324:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010332a	obj/kern/kernel.asm	/^f010332a:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
f0103331	obj/kern/kernel.asm	/^f0103331:	8d 45 f8             	lea    -0x8(%ebp),%eax$/;"	l
f0103334	obj/kern/kernel.asm	/^f0103334:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103337	obj/kern/kernel.asm	/^f0103337:	e8 f0 ea ff ff       	call   f0101e2c <page_alloc>$/;"	l
f010333c	obj/kern/kernel.asm	/^f010333c:	89 c2                	mov    %eax,%edx$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	85 c0                	test   %eax,%eax$/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	0f 88 ac 00 00 00    	js     f01033f2 <env_setup_vm+0xd2>$/;"	l
f0103346	obj/kern/kernel.asm	/^f0103346:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f0103349	obj/kern/kernel.asm	/^f0103349:	89 c2                	mov    %eax,%edx$/;"	l
f010334b	obj/kern/kernel.asm	/^f010334b:	2b 15 cc 42 21 f0    	sub    0xf02142cc,%edx$/;"	l
f0103351	obj/kern/kernel.asm	/^f0103351:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0103354	obj/kern/kernel.asm	/^f0103354:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f010335a	obj/kern/kernel.asm	/^f010335a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010335d	obj/kern/kernel.asm	/^f010335d:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0103360	obj/kern/kernel.asm	/^f0103360:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f0103366	obj/kern/kernel.asm	/^f0103366:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0103369	obj/kern/kernel.asm	/^f0103369:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	89 c2                	mov    %eax,%edx$/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103374	obj/kern/kernel.asm	/^f0103374:	89 d0                	mov    %edx,%eax$/;"	l
f0103376	obj/kern/kernel.asm	/^f0103376:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103379	obj/kern/kernel.asm	/^f0103379:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f010337f	obj/kern/kernel.asm	/^f010337f:	3e 72 20             	jb,pt  f01033a2 <env_setup_vm+0x82>$/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103386	obj/kern/kernel.asm	/^f0103386:	c7 44 24 08 4c 60 10 	movl   $0xf010604c,0x8(%esp)$/;"	l
f010338d	obj/kern/kernel.asm	/^f010338d:	f0 $/;"	l
f010338e	obj/kern/kernel.asm	/^f010338e:	c7 44 24 04 5a 00 00 	movl   $0x5a,0x4(%esp)$/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	00 $/;"	l
f0103396	obj/kern/kernel.asm	/^f0103396:	c7 04 24 2c 5c 10 f0 	movl   $0xf0105c2c,(%esp)$/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	e8 2f cd ff ff       	call   f01000d1 <_panic>$/;"	l
f01033a2	obj/kern/kernel.asm	/^f01033a2:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01033a8	obj/kern/kernel.asm	/^f01033a8:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f01033ab	obj/kern/kernel.asm	/^f01033ab:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f01033ae	obj/kern/kernel.asm	/^f01033ae:	66 83 40 08 01       	addw   $0x1,0x8(%eax)$/;"	l
f01033b3	obj/kern/kernel.asm	/^f01033b3:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01033ba	obj/kern/kernel.asm	/^f01033ba:	00 $/;"	l
f01033bb	obj/kern/kernel.asm	/^f01033bb:	a1 c8 42 21 f0       	mov    0xf02142c8,%eax$/;"	l
f01033c0	obj/kern/kernel.asm	/^f01033c0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01033c4	obj/kern/kernel.asm	/^f01033c4:	8b 43 5c             	mov    0x5c(%ebx),%eax$/;"	l
f01033c7	obj/kern/kernel.asm	/^f01033c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033ca	obj/kern/kernel.asm	/^f01033ca:	e8 74 21 00 00       	call   f0105543 <memmove>$/;"	l
f01033cf	obj/kern/kernel.asm	/^f01033cf:	8b 53 5c             	mov    0x5c(%ebx),%edx$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01033d5	obj/kern/kernel.asm	/^f01033d5:	83 c8 03             	or     $0x3,%eax$/;"	l
f01033d8	obj/kern/kernel.asm	/^f01033d8:	89 82 fc 0e 00 00    	mov    %eax,0xefc(%edx)$/;"	l
f01033de	obj/kern/kernel.asm	/^f01033de:	8b 53 5c             	mov    0x5c(%ebx),%edx$/;"	l
f01033e1	obj/kern/kernel.asm	/^f01033e1:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01033e4	obj/kern/kernel.asm	/^f01033e4:	83 c8 05             	or     $0x5,%eax$/;"	l
f01033e7	obj/kern/kernel.asm	/^f01033e7:	89 82 f4 0e 00 00    	mov    %eax,0xef4(%edx)$/;"	l
f01033ed	obj/kern/kernel.asm	/^f01033ed:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01033f2	obj/kern/kernel.asm	/^f01033f2:	89 d0                	mov    %edx,%eax$/;"	l
f01033f4	obj/kern/kernel.asm	/^f01033f4:	83 c4 14             	add    $0x14,%esp$/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	5b                   	pop    %ebx$/;"	l
f01033f8	obj/kern/kernel.asm	/^f01033f8:	5d                   	pop    %ebp$/;"	l
f01033f9	obj/kern/kernel.asm	/^f01033f9:	c3                   	ret    $/;"	l
f01033fa	obj/kern/kernel.asm	/^f01033fa <env_alloc>:$/;"	l
f01033fa	obj/kern/kernel.asm	/^f01033fa:	55                   	push   %ebp$/;"	l
f01033fb	obj/kern/kernel.asm	/^f01033fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01033fd	obj/kern/kernel.asm	/^f01033fd:	53                   	push   %ebx$/;"	l
f01033fe	obj/kern/kernel.asm	/^f01033fe:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103401	obj/kern/kernel.asm	/^f0103401:	8b 1d 28 36 21 f0    	mov    0xf0213628,%ebx$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	ba fb ff ff ff       	mov    $0xfffffffb,%edx$/;"	l
f010340c	obj/kern/kernel.asm	/^f010340c:	85 db                	test   %ebx,%ebx$/;"	l
f010340e	obj/kern/kernel.asm	/^f010340e:	0f 84 d9 00 00 00    	je     f01034ed <env_alloc+0xf3>$/;"	l
f0103414	obj/kern/kernel.asm	/^f0103414:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103417	obj/kern/kernel.asm	/^f0103417:	e8 04 ff ff ff       	call   f0103320 <env_setup_vm>$/;"	l
f010341c	obj/kern/kernel.asm	/^f010341c:	89 c2                	mov    %eax,%edx$/;"	l
f010341e	obj/kern/kernel.asm	/^f010341e:	85 c0                	test   %eax,%eax$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	0f 88 c7 00 00 00    	js     f01034ed <env_alloc+0xf3>$/;"	l
f0103426	obj/kern/kernel.asm	/^f0103426:	8b 53 4c             	mov    0x4c(%ebx),%edx$/;"	l
f0103429	obj/kern/kernel.asm	/^f0103429:	81 c2 00 10 00 00    	add    $0x1000,%edx$/;"	l
f010342f	obj/kern/kernel.asm	/^f010342f:	81 e2 00 fc ff ff    	and    $0xfffffc00,%edx$/;"	l
f0103435	obj/kern/kernel.asm	/^f0103435:	3e 7f 05             	jg,pt  f010343d <env_alloc+0x43>$/;"	l
f0103438	obj/kern/kernel.asm	/^f0103438:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010343d	obj/kern/kernel.asm	/^f010343d:	89 d8                	mov    %ebx,%eax$/;"	l
f010343f	obj/kern/kernel.asm	/^f010343f:	2b 05 20 36 21 f0    	sub    0xf0213620,%eax$/;"	l
f0103445	obj/kern/kernel.asm	/^f0103445:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0103448	obj/kern/kernel.asm	/^f0103448:	69 c0 df 7b ef bd    	imul   $0xbdef7bdf,%eax,%eax$/;"	l
f010344e	obj/kern/kernel.asm	/^f010344e:	09 d0                	or     %edx,%eax$/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103453	obj/kern/kernel.asm	/^f0103453:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103456	obj/kern/kernel.asm	/^f0103456:	89 43 50             	mov    %eax,0x50(%ebx)$/;"	l
f0103459	obj/kern/kernel.asm	/^f0103459:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103460	obj/kern/kernel.asm	/^f0103460:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0103467	obj/kern/kernel.asm	/^f0103467:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f010346e	obj/kern/kernel.asm	/^f010346e:	00 $/;"	l
f010346f	obj/kern/kernel.asm	/^f010346f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103476	obj/kern/kernel.asm	/^f0103476:	00 $/;"	l
f0103477	obj/kern/kernel.asm	/^f0103477:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010347a	obj/kern/kernel.asm	/^f010347a:	e8 a1 20 00 00       	call   f0105520 <memset>$/;"	l
f010347f	obj/kern/kernel.asm	/^f010347f:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103485	obj/kern/kernel.asm	/^f0103485:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010348b	obj/kern/kernel.asm	/^f010348b:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103491	obj/kern/kernel.asm	/^f0103491:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103498	obj/kern/kernel.asm	/^f0103498:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f010349e	obj/kern/kernel.asm	/^f010349e:	8b 53 38             	mov    0x38(%ebx),%edx$/;"	l
f01034a1	obj/kern/kernel.asm	/^f01034a1:	89 d0                	mov    %edx,%eax$/;"	l
f01034a3	obj/kern/kernel.asm	/^f01034a3:	80 cc 02             	or     $0x2,%ah$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	89 43 38             	mov    %eax,0x38(%ebx)$/;"	l
f01034a9	obj/kern/kernel.asm	/^f01034a9:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f01034b0	obj/kern/kernel.asm	/^f01034b0:	c7 43 68 00 00 00 00 	movl   $0x0,0x68(%ebx)$/;"	l
f01034b7	obj/kern/kernel.asm	/^f01034b7:	a1 20 36 21 f0       	mov    0xf0213620,%eax$/;"	l
f01034bc	obj/kern/kernel.asm	/^f01034bc:	83 c0 7c             	add    $0x7c,%eax$/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	39 d8                	cmp    %ebx,%eax$/;"	l
f01034c1	obj/kern/kernel.asm	/^f01034c1:	3e 75 08             	jne,pt f01034cc <env_alloc+0xd2>$/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4:	89 d0                	mov    %edx,%eax$/;"	l
f01034c6	obj/kern/kernel.asm	/^f01034c6:	80 cc 32             	or     $0x32,%ah$/;"	l
f01034c9	obj/kern/kernel.asm	/^f01034c9:	89 43 38             	mov    %eax,0x38(%ebx)$/;"	l
f01034cc	obj/kern/kernel.asm	/^f01034cc:	83 7b 44 00          	cmpl   $0x0,0x44(%ebx)$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	74 09                	je     f01034db <env_alloc+0xe1>$/;"	l
f01034d2	obj/kern/kernel.asm	/^f01034d2:	8b 53 44             	mov    0x44(%ebx),%edx$/;"	l
f01034d5	obj/kern/kernel.asm	/^f01034d5:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01034d8	obj/kern/kernel.asm	/^f01034d8:	89 42 48             	mov    %eax,0x48(%edx)$/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	8b 53 48             	mov    0x48(%ebx),%edx$/;"	l
f01034de	obj/kern/kernel.asm	/^f01034de:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f01034e1	obj/kern/kernel.asm	/^f01034e1:	89 02                	mov    %eax,(%edx)$/;"	l
f01034e3	obj/kern/kernel.asm	/^f01034e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	89 18                	mov    %ebx,(%eax)$/;"	l
f01034e8	obj/kern/kernel.asm	/^f01034e8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01034ed	obj/kern/kernel.asm	/^f01034ed:	89 d0                	mov    %edx,%eax$/;"	l
f01034ef	obj/kern/kernel.asm	/^f01034ef:	83 c4 14             	add    $0x14,%esp$/;"	l
f01034f2	obj/kern/kernel.asm	/^f01034f2:	5b                   	pop    %ebx$/;"	l
f01034f3	obj/kern/kernel.asm	/^f01034f3:	5d                   	pop    %ebp$/;"	l
f01034f4	obj/kern/kernel.asm	/^f01034f4:	c3                   	ret    $/;"	l
f01034f5	obj/kern/kernel.asm	/^f01034f5 <segment_alloc>:$/;"	l
f01034f5	obj/kern/kernel.asm	/^f01034f5:	55                   	push   %ebp$/;"	l
f01034f6	obj/kern/kernel.asm	/^f01034f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01034f8	obj/kern/kernel.asm	/^f01034f8:	57                   	push   %edi$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	56                   	push   %esi$/;"	l
f01034fa	obj/kern/kernel.asm	/^f01034fa:	53                   	push   %ebx$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01034fe	obj/kern/kernel.asm	/^f01034fe:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0103501	obj/kern/kernel.asm	/^f0103501:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0103507	obj/kern/kernel.asm	/^f0103507:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010350a	obj/kern/kernel.asm	/^f010350a:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f010350f	obj/kern/kernel.asm	/^f010350f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103514	obj/kern/kernel.asm	/^f0103514:	89 c6                	mov    %eax,%esi$/;"	l
f0103516	obj/kern/kernel.asm	/^f0103516:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f010351c	obj/kern/kernel.asm	/^f010351c:	3e 0f 84 85 00 00 00 	je,pt  f01035a8 <segment_alloc+0xb3>$/;"	l
f0103523	obj/kern/kernel.asm	/^f0103523:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0103526	obj/kern/kernel.asm	/^f0103526:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103529	obj/kern/kernel.asm	/^f0103529:	e8 fe e8 ff ff       	call   f0101e2c <page_alloc>$/;"	l
f010352e	obj/kern/kernel.asm	/^f010352e:	85 c0                	test   %eax,%eax$/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	3e 79 1c             	jns,pt f010354f <segment_alloc+0x5a>$/;"	l
f0103533	obj/kern/kernel.asm	/^f0103533:	c7 44 24 08 3c 67 10 	movl   $0xf010673c,0x8(%esp)$/;"	l
f010353a	obj/kern/kernel.asm	/^f010353a:	f0 $/;"	l
f010353b	obj/kern/kernel.asm	/^f010353b:	c7 44 24 04 ea 00 00 	movl   $0xea,0x4(%esp)$/;"	l
f0103542	obj/kern/kernel.asm	/^f0103542:	00 $/;"	l
f0103543	obj/kern/kernel.asm	/^f0103543:	c7 04 24 a4 67 10 f0 	movl   $0xf01067a4,(%esp)$/;"	l
f010354a	obj/kern/kernel.asm	/^f010354a:	e8 82 cb ff ff       	call   f01000d1 <_panic>$/;"	l
f010354f	obj/kern/kernel.asm	/^f010354f:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f0103556	obj/kern/kernel.asm	/^f0103556:	00 $/;"	l
f0103557	obj/kern/kernel.asm	/^f0103557:	89 d8                	mov    %ebx,%eax$/;"	l
f0103559	obj/kern/kernel.asm	/^f0103559:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	01 f8                	add    %edi,%eax$/;"	l
f010355e	obj/kern/kernel.asm	/^f010355e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103562	obj/kern/kernel.asm	/^f0103562:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103569	obj/kern/kernel.asm	/^f0103569:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010356c	obj/kern/kernel.asm	/^f010356c:	8b 42 5c             	mov    0x5c(%edx),%eax$/;"	l
f010356f	obj/kern/kernel.asm	/^f010356f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103572	obj/kern/kernel.asm	/^f0103572:	e8 d4 ea ff ff       	call   f010204b <page_insert>$/;"	l
f0103577	obj/kern/kernel.asm	/^f0103577:	85 c0                	test   %eax,%eax$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	3e 79 1c             	jns,pt f0103598 <segment_alloc+0xa3>$/;"	l
f010357c	obj/kern/kernel.asm	/^f010357c:	c7 44 24 08 af 67 10 	movl   $0xf01067af,0x8(%esp)$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	f0 $/;"	l
f0103584	obj/kern/kernel.asm	/^f0103584:	c7 44 24 04 ec 00 00 	movl   $0xec,0x4(%esp)$/;"	l
f010358b	obj/kern/kernel.asm	/^f010358b:	00 $/;"	l
f010358c	obj/kern/kernel.asm	/^f010358c:	c7 04 24 a4 67 10 f0 	movl   $0xf01067a4,(%esp)$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	e8 39 cb ff ff       	call   f01000d1 <_panic>$/;"	l
f0103598	obj/kern/kernel.asm	/^f0103598:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010359b	obj/kern/kernel.asm	/^f010359b:	89 f0                	mov    %esi,%eax$/;"	l
f010359d	obj/kern/kernel.asm	/^f010359d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01035a0	obj/kern/kernel.asm	/^f01035a0:	39 c3                	cmp    %eax,%ebx$/;"	l
f01035a2	obj/kern/kernel.asm	/^f01035a2:	0f 82 7b ff ff ff    	jb     f0103523 <segment_alloc+0x2e>$/;"	l
f01035a8	obj/kern/kernel.asm	/^f01035a8:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	5b                   	pop    %ebx$/;"	l
f01035ac	obj/kern/kernel.asm	/^f01035ac:	5e                   	pop    %esi$/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad:	5f                   	pop    %edi$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	5d                   	pop    %ebp$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	c3                   	ret    $/;"	l
f01035b0	obj/kern/kernel.asm	/^f01035b0 <load_icode>:$/;"	l
f01035b0	obj/kern/kernel.asm	/^f01035b0:	55                   	push   %ebp$/;"	l
f01035b1	obj/kern/kernel.asm	/^f01035b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	57                   	push   %edi$/;"	l
f01035b4	obj/kern/kernel.asm	/^f01035b4:	56                   	push   %esi$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	53                   	push   %ebx$/;"	l
f01035b6	obj/kern/kernel.asm	/^f01035b6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01035b9	obj/kern/kernel.asm	/^f01035b9:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01035bc	obj/kern/kernel.asm	/^f01035bc:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01035bf	obj/kern/kernel.asm	/^f01035bf:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f01035c2	obj/kern/kernel.asm	/^f01035c2:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01035c5	obj/kern/kernel.asm	/^f01035c5:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f01035cb	obj/kern/kernel.asm	/^f01035cb:	3e 74 1c             	je,pt  f01035ea <load_icode+0x3a>$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	c7 44 24 08 cb 67 10 	movl   $0xf01067cb,0x8(%esp)$/;"	l
f01035d5	obj/kern/kernel.asm	/^f01035d5:	f0 $/;"	l
f01035d6	obj/kern/kernel.asm	/^f01035d6:	c7 44 24 04 2e 01 00 	movl   $0x12e,0x4(%esp)$/;"	l
f01035dd	obj/kern/kernel.asm	/^f01035dd:	00 $/;"	l
f01035de	obj/kern/kernel.asm	/^f01035de:	c7 04 24 a4 67 10 f0 	movl   $0xf01067a4,(%esp)$/;"	l
f01035e5	obj/kern/kernel.asm	/^f01035e5:	e8 e7 ca ff ff       	call   f01000d1 <_panic>$/;"	l
f01035ea	obj/kern/kernel.asm	/^f01035ea:	89 fb                	mov    %edi,%ebx$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f01035ef	obj/kern/kernel.asm	/^f01035ef:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f01035f3	obj/kern/kernel.asm	/^f01035f3:	89 f0                	mov    %esi,%eax$/;"	l
f01035f5	obj/kern/kernel.asm	/^f01035f5:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f01035f8	obj/kern/kernel.asm	/^f01035f8:	8d 34 18             	lea    (%eax,%ebx,1),%esi$/;"	l
f01035fb	obj/kern/kernel.asm	/^f01035fb:	39 f3                	cmp    %esi,%ebx$/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd:	0f 83 8a 00 00 00    	jae    f010368d <load_icode+0xdd>$/;"	l
f0103603	obj/kern/kernel.asm	/^f0103603:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103606	obj/kern/kernel.asm	/^f0103606:	3e 75 79             	jne,pt f0103682 <load_icode+0xd2>$/;"	l
f0103609	obj/kern/kernel.asm	/^f0103609:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f010360c	obj/kern/kernel.asm	/^f010360c:	3b 43 14             	cmp    0x14(%ebx),%eax$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	3e 76 1c             	jbe,pt f010362e <load_icode+0x7e>$/;"	l
f0103612	obj/kern/kernel.asm	/^f0103612:	c7 44 24 08 5c 67 10 	movl   $0xf010675c,0x8(%esp)$/;"	l
f0103619	obj/kern/kernel.asm	/^f0103619:	f0 $/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	c7 44 24 04 36 01 00 	movl   $0x136,0x4(%esp)$/;"	l
f0103621	obj/kern/kernel.asm	/^f0103621:	00 $/;"	l
f0103622	obj/kern/kernel.asm	/^f0103622:	c7 04 24 a4 67 10 f0 	movl   $0xf01067a4,(%esp)$/;"	l
f0103629	obj/kern/kernel.asm	/^f0103629:	e8 a3 ca ff ff       	call   f01000d1 <_panic>$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103638	obj/kern/kernel.asm	/^f0103638:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010363f	obj/kern/kernel.asm	/^f010363f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103642	obj/kern/kernel.asm	/^f0103642:	e8 ae fe ff ff       	call   f01034f5 <segment_alloc>$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f010364a	obj/kern/kernel.asm	/^f010364a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103658	obj/kern/kernel.asm	/^f0103658:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	e8 e0 1e 00 00       	call   f0105543 <memmove>$/;"	l
f0103663	obj/kern/kernel.asm	/^f0103663:	8b 53 10             	mov    0x10(%ebx),%edx$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669:	29 d0                	sub    %edx,%eax$/;"	l
f010366b	obj/kern/kernel.asm	/^f010366b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010366f	obj/kern/kernel.asm	/^f010366f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	00 $/;"	l
f0103677	obj/kern/kernel.asm	/^f0103677:	03 53 08             	add    0x8(%ebx),%edx$/;"	l
f010367a	obj/kern/kernel.asm	/^f010367a:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010367d	obj/kern/kernel.asm	/^f010367d:	e8 9e 1e 00 00       	call   f0105520 <memset>$/;"	l
f0103682	obj/kern/kernel.asm	/^f0103682:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103685	obj/kern/kernel.asm	/^f0103685:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	0f 82 76 ff ff ff    	jb     f0103603 <load_icode+0x53>$/;"	l
f010368d	obj/kern/kernel.asm	/^f010368d:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103693	obj/kern/kernel.asm	/^f0103693:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	a1 c4 42 21 f0       	mov    0xf02142c4,%eax$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010369e	obj/kern/kernel.asm	/^f010369e:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01036a5	obj/kern/kernel.asm	/^f01036a5:	00 $/;"	l
f01036a6	obj/kern/kernel.asm	/^f01036a6:	c7 44 24 04 00 d0 bf 	movl   $0xeebfd000,0x4(%esp)$/;"	l
f01036ad	obj/kern/kernel.asm	/^f01036ad:	ee $/;"	l
f01036ae	obj/kern/kernel.asm	/^f01036ae:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01036b1	obj/kern/kernel.asm	/^f01036b1:	e8 3f fe ff ff       	call   f01034f5 <segment_alloc>$/;"	l
f01036b6	obj/kern/kernel.asm	/^f01036b6:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9:	5b                   	pop    %ebx$/;"	l
f01036ba	obj/kern/kernel.asm	/^f01036ba:	5e                   	pop    %esi$/;"	l
f01036bb	obj/kern/kernel.asm	/^f01036bb:	5f                   	pop    %edi$/;"	l
f01036bc	obj/kern/kernel.asm	/^f01036bc:	5d                   	pop    %ebp$/;"	l
f01036bd	obj/kern/kernel.asm	/^f01036bd:	c3                   	ret    $/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be <env_create>:$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	55                   	push   %ebp$/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01036cb	obj/kern/kernel.asm	/^f01036cb:	00 $/;"	l
f01036cc	obj/kern/kernel.asm	/^f01036cc:	8d 45 fc             	lea    -0x4(%ebp),%eax$/;"	l
f01036cf	obj/kern/kernel.asm	/^f01036cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01036d2	obj/kern/kernel.asm	/^f01036d2:	e8 23 fd ff ff       	call   f01033fa <env_alloc>$/;"	l
f01036d7	obj/kern/kernel.asm	/^f01036d7:	85 c0                	test   %eax,%eax$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	3e 79 1c             	jns,pt f01036f8 <env_create+0x3a>$/;"	l
f01036dc	obj/kern/kernel.asm	/^f01036dc:	c7 44 24 08 84 67 10 	movl   $0xf0106784,0x8(%esp)$/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	f0 $/;"	l
f01036e4	obj/kern/kernel.asm	/^f01036e4:	c7 44 24 04 58 01 00 	movl   $0x158,0x4(%esp)$/;"	l
f01036eb	obj/kern/kernel.asm	/^f01036eb:	00 $/;"	l
f01036ec	obj/kern/kernel.asm	/^f01036ec:	c7 04 24 a4 67 10 f0 	movl   $0xf01067a4,(%esp)$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	e8 d9 c9 ff ff       	call   f01000d1 <_panic>$/;"	l
f01036f8	obj/kern/kernel.asm	/^f01036f8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01036fb	obj/kern/kernel.asm	/^f01036fb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01036ff	obj/kern/kernel.asm	/^f01036ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103702	obj/kern/kernel.asm	/^f0103702:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103706	obj/kern/kernel.asm	/^f0103706:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0103709	obj/kern/kernel.asm	/^f0103709:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010370c	obj/kern/kernel.asm	/^f010370c:	e8 9f fe ff ff       	call   f01035b0 <load_icode>$/;"	l
f0103711	obj/kern/kernel.asm	/^f0103711:	c9                   	leave  $/;"	l
f0103712	obj/kern/kernel.asm	/^f0103712:	c3                   	ret    $/;"	l
f0103713	obj/kern/kernel.asm	/^f0103713 <env_free>:$/;"	l
f0103713	obj/kern/kernel.asm	/^f0103713:	55                   	push   %ebp$/;"	l
f0103714	obj/kern/kernel.asm	/^f0103714:	89 e5                	mov    %esp,%ebp$/;"	l
f0103716	obj/kern/kernel.asm	/^f0103716:	57                   	push   %edi$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	56                   	push   %esi$/;"	l
f0103718	obj/kern/kernel.asm	/^f0103718:	53                   	push   %ebx$/;"	l
f0103719	obj/kern/kernel.asm	/^f0103719:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010371c	obj/kern/kernel.asm	/^f010371c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010371f	obj/kern/kernel.asm	/^f010371f:	3b 05 24 36 21 f0    	cmp    0xf0213624,%eax$/;"	l
f0103725	obj/kern/kernel.asm	/^f0103725:	3e 75 08             	jne,pt f0103730 <env_free+0x1d>$/;"	l
f0103728	obj/kern/kernel.asm	/^f0103728:	a1 c4 42 21 f0       	mov    0xf02142c4,%eax$/;"	l
f010372d	obj/kern/kernel.asm	/^f010372d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103730	obj/kern/kernel.asm	/^f0103730:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0103737	obj/kern/kernel.asm	/^f0103737:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010373a	obj/kern/kernel.asm	/^f010373a:	8b 42 5c             	mov    0x5c(%edx),%eax$/;"	l
f010373d	obj/kern/kernel.asm	/^f010373d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0103740	obj/kern/kernel.asm	/^f0103740:	8b 04 90             	mov    (%eax,%edx,4),%eax$/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743:	a8 01                	test   $0x1,%al$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	3e 0f 84 c7 00 00 00 	je,pt  f0103813 <env_free+0x100>$/;"	l
f010374c	obj/kern/kernel.asm	/^f010374c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103751	obj/kern/kernel.asm	/^f0103751:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0103754	obj/kern/kernel.asm	/^f0103754:	89 c2                	mov    %eax,%edx$/;"	l
f0103756	obj/kern/kernel.asm	/^f0103756:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103759	obj/kern/kernel.asm	/^f0103759:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f010375f	obj/kern/kernel.asm	/^f010375f:	3e 72 20             	jb,pt  f0103782 <env_free+0x6f>$/;"	l
f0103762	obj/kern/kernel.asm	/^f0103762:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103766	obj/kern/kernel.asm	/^f0103766:	c7 44 24 08 4c 60 10 	movl   $0xf010604c,0x8(%esp)$/;"	l
f010376d	obj/kern/kernel.asm	/^f010376d:	f0 $/;"	l
f010376e	obj/kern/kernel.asm	/^f010376e:	c7 44 24 04 79 01 00 	movl   $0x179,0x4(%esp)$/;"	l
f0103775	obj/kern/kernel.asm	/^f0103775:	00 $/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	c7 04 24 a4 67 10 f0 	movl   $0xf01067a4,(%esp)$/;"	l
f010377d	obj/kern/kernel.asm	/^f010377d:	e8 4f c9 ff ff       	call   f01000d1 <_panic>$/;"	l
f0103782	obj/kern/kernel.asm	/^f0103782:	8d b2 00 00 00 f0    	lea    -0x10000000(%edx),%esi$/;"	l
f0103788	obj/kern/kernel.asm	/^f0103788:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010378d	obj/kern/kernel.asm	/^f010378d:	8b 7d f0             	mov    -0x10(%ebp),%edi$/;"	l
f0103790	obj/kern/kernel.asm	/^f0103790:	c1 e7 16             	shl    $0x16,%edi$/;"	l
f0103793	obj/kern/kernel.asm	/^f0103793:	f6 04 9e 01          	testb  $0x1,(%esi,%ebx,4)$/;"	l
f0103797	obj/kern/kernel.asm	/^f0103797:	3e 74 19             	je,pt  f01037b3 <env_free+0xa0>$/;"	l
f010379a	obj/kern/kernel.asm	/^f010379a:	89 d8                	mov    %ebx,%eax$/;"	l
f010379c	obj/kern/kernel.asm	/^f010379c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010379f	obj/kern/kernel.asm	/^f010379f:	09 f8                	or     %edi,%eax$/;"	l
f01037a1	obj/kern/kernel.asm	/^f01037a1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01037a5	obj/kern/kernel.asm	/^f01037a5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01037a8	obj/kern/kernel.asm	/^f01037a8:	8b 42 5c             	mov    0x5c(%edx),%eax$/;"	l
f01037ab	obj/kern/kernel.asm	/^f01037ab:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01037ae	obj/kern/kernel.asm	/^f01037ae:	e8 29 ea ff ff       	call   f01021dc <page_remove>$/;"	l
f01037b3	obj/kern/kernel.asm	/^f01037b3:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01037b6	obj/kern/kernel.asm	/^f01037b6:	81 fb ff 03 00 00    	cmp    $0x3ff,%ebx$/;"	l
f01037bc	obj/kern/kernel.asm	/^f01037bc:	76 d5                	jbe    f0103793 <env_free+0x80>$/;"	l
f01037be	obj/kern/kernel.asm	/^f01037be:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01037c1	obj/kern/kernel.asm	/^f01037c1:	8b 42 5c             	mov    0x5c(%edx),%eax$/;"	l
f01037c4	obj/kern/kernel.asm	/^f01037c4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01037c7	obj/kern/kernel.asm	/^f01037c7:	c7 04 90 00 00 00 00 	movl   $0x0,(%eax,%edx,4)$/;"	l
f01037ce	obj/kern/kernel.asm	/^f01037ce:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f01037d1	obj/kern/kernel.asm	/^f01037d1:	89 d0                	mov    %edx,%eax$/;"	l
f01037d3	obj/kern/kernel.asm	/^f01037d3:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01037d6	obj/kern/kernel.asm	/^f01037d6:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	3e 72 1c             	jb,pt  f01037fb <env_free+0xe8>$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	c7 44 24 08 5c 5f 10 	movl   $0xf0105f5c,0x8(%esp)$/;"	l
f01037e6	obj/kern/kernel.asm	/^f01037e6:	f0 $/;"	l
f01037e7	obj/kern/kernel.asm	/^f01037e7:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
f01037ee	obj/kern/kernel.asm	/^f01037ee:	00 $/;"	l
f01037ef	obj/kern/kernel.asm	/^f01037ef:	c7 04 24 2c 5c 10 f0 	movl   $0xf0105c2c,(%esp)$/;"	l
f01037f6	obj/kern/kernel.asm	/^f01037f6:	e8 d6 c8 ff ff       	call   f01000d1 <_panic>$/;"	l
f01037fb	obj/kern/kernel.asm	/^f01037fb:	89 d0                	mov    %edx,%eax$/;"	l
f01037fd	obj/kern/kernel.asm	/^f01037fd:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103800	obj/kern/kernel.asm	/^f0103800:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	a1 cc 42 21 f0       	mov    0xf02142cc,%eax$/;"	l
f0103808	obj/kern/kernel.asm	/^f0103808:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010380b	obj/kern/kernel.asm	/^f010380b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010380e	obj/kern/kernel.asm	/^f010380e:	e8 af e6 ff ff       	call   f0101ec2 <page_decref>$/;"	l
f0103813	obj/kern/kernel.asm	/^f0103813:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f0103817	obj/kern/kernel.asm	/^f0103817:	81 7d f0 ba 03 00 00 	cmpl   $0x3ba,-0x10(%ebp)$/;"	l
f010381e	obj/kern/kernel.asm	/^f010381e:	0f 86 13 ff ff ff    	jbe    f0103737 <env_free+0x24>$/;"	l
f0103824	obj/kern/kernel.asm	/^f0103824:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103827	obj/kern/kernel.asm	/^f0103827:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010382a	obj/kern/kernel.asm	/^f010382a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010382d	obj/kern/kernel.asm	/^f010382d:	c7 42 5c 00 00 00 00 	movl   $0x0,0x5c(%edx)$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	c7 42 60 00 00 00 00 	movl   $0x0,0x60(%edx)$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	89 c2                	mov    %eax,%edx$/;"	l
f010383d	obj/kern/kernel.asm	/^f010383d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f0103846	obj/kern/kernel.asm	/^f0103846:	3e 72 1c             	jb,pt  f0103865 <env_free+0x152>$/;"	l
f0103849	obj/kern/kernel.asm	/^f0103849:	c7 44 24 08 5c 5f 10 	movl   $0xf0105f5c,0x8(%esp)$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	f0 $/;"	l
f0103851	obj/kern/kernel.asm	/^f0103851:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
f0103858	obj/kern/kernel.asm	/^f0103858:	00 $/;"	l
f0103859	obj/kern/kernel.asm	/^f0103859:	c7 04 24 2c 5c 10 f0 	movl   $0xf0105c2c,(%esp)$/;"	l
f0103860	obj/kern/kernel.asm	/^f0103860:	e8 6c c8 ff ff       	call   f01000d1 <_panic>$/;"	l
f0103865	obj/kern/kernel.asm	/^f0103865:	89 d0                	mov    %edx,%eax$/;"	l
f0103867	obj/kern/kernel.asm	/^f0103867:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010386a	obj/kern/kernel.asm	/^f010386a:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f010386d	obj/kern/kernel.asm	/^f010386d:	8b 15 cc 42 21 f0    	mov    0xf02142cc,%edx$/;"	l
f0103873	obj/kern/kernel.asm	/^f0103873:	8d 04 82             	lea    (%edx,%eax,4),%eax$/;"	l
f0103876	obj/kern/kernel.asm	/^f0103876:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103879	obj/kern/kernel.asm	/^f0103879:	e8 44 e6 ff ff       	call   f0101ec2 <page_decref>$/;"	l
f010387e	obj/kern/kernel.asm	/^f010387e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103881	obj/kern/kernel.asm	/^f0103881:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0103888	obj/kern/kernel.asm	/^f0103888:	a1 28 36 21 f0       	mov    0xf0213628,%eax$/;"	l
f010388d	obj/kern/kernel.asm	/^f010388d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103890	obj/kern/kernel.asm	/^f0103890:	89 42 44             	mov    %eax,0x44(%edx)$/;"	l
f0103893	obj/kern/kernel.asm	/^f0103893:	85 c0                	test   %eax,%eax$/;"	l
f0103895	obj/kern/kernel.asm	/^f0103895:	74 0e                	je     f01038a5 <env_free+0x192>$/;"	l
f0103897	obj/kern/kernel.asm	/^f0103897:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010389a	obj/kern/kernel.asm	/^f010389a:	83 c2 44             	add    $0x44,%edx$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	a1 28 36 21 f0       	mov    0xf0213628,%eax$/;"	l
f01038a2	obj/kern/kernel.asm	/^f01038a2:	89 50 48             	mov    %edx,0x48(%eax)$/;"	l
f01038a5	obj/kern/kernel.asm	/^f01038a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01038a8	obj/kern/kernel.asm	/^f01038a8:	a3 28 36 21 f0       	mov    %eax,0xf0213628$/;"	l
f01038ad	obj/kern/kernel.asm	/^f01038ad:	c7 40 48 28 36 21 f0 	movl   $0xf0213628,0x48(%eax)$/;"	l
f01038b4	obj/kern/kernel.asm	/^f01038b4:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01038b7	obj/kern/kernel.asm	/^f01038b7:	5b                   	pop    %ebx$/;"	l
f01038b8	obj/kern/kernel.asm	/^f01038b8:	5e                   	pop    %esi$/;"	l
f01038b9	obj/kern/kernel.asm	/^f01038b9:	5f                   	pop    %edi$/;"	l
f01038ba	obj/kern/kernel.asm	/^f01038ba:	5d                   	pop    %ebp$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	c3                   	ret    $/;"	l
f01038bc	obj/kern/kernel.asm	/^f01038bc <env_destroy>:$/;"	l
f01038bc	obj/kern/kernel.asm	/^f01038bc:	55                   	push   %ebp$/;"	l
f01038bd	obj/kern/kernel.asm	/^f01038bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01038bf	obj/kern/kernel.asm	/^f01038bf:	53                   	push   %ebx$/;"	l
f01038c0	obj/kern/kernel.asm	/^f01038c0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01038c3	obj/kern/kernel.asm	/^f01038c3:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01038c6	obj/kern/kernel.asm	/^f01038c6:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01038c9	obj/kern/kernel.asm	/^f01038c9:	e8 45 fe ff ff       	call   f0103713 <env_free>$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce:	39 1d 24 36 21 f0    	cmp    %ebx,0xf0213624$/;"	l
f01038d4	obj/kern/kernel.asm	/^f01038d4:	3e 75 0f             	jne,pt f01038e6 <env_destroy+0x2a>$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7:	c7 05 24 36 21 f0 00 	movl   $0x0,0xf0213624$/;"	l
f01038de	obj/kern/kernel.asm	/^f01038de:	00 00 00 $/;"	l
f01038e1	obj/kern/kernel.asm	/^f01038e1:	e8 ba 08 00 00       	call   f01041a0 <sched_yield>$/;"	l
f01038e6	obj/kern/kernel.asm	/^f01038e6:	83 c4 04             	add    $0x4,%esp$/;"	l
f01038e9	obj/kern/kernel.asm	/^f01038e9:	5b                   	pop    %ebx$/;"	l
f01038ea	obj/kern/kernel.asm	/^f01038ea:	5d                   	pop    %ebp$/;"	l
f01038eb	obj/kern/kernel.asm	/^f01038eb:	c3                   	ret    $/;"	l
f01038ec	obj/kern/kernel.asm	/^f01038ec <env_pop_tf>:$/;"	l
f01038ec	obj/kern/kernel.asm	/^f01038ec:	55                   	push   %ebp$/;"	l
f01038ed	obj/kern/kernel.asm	/^f01038ed:	89 e5                	mov    %esp,%ebp$/;"	l
f01038ef	obj/kern/kernel.asm	/^f01038ef:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01038f2	obj/kern/kernel.asm	/^f01038f2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01038f5	obj/kern/kernel.asm	/^f01038f5:	89 c4                	mov    %eax,%esp$/;"	l
f01038f7	obj/kern/kernel.asm	/^f01038f7:	61                   	popa   $/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	07                   	pop    %es$/;"	l
f01038f9	obj/kern/kernel.asm	/^f01038f9:	1f                   	pop    %ds$/;"	l
f01038fa	obj/kern/kernel.asm	/^f01038fa:	83 c4 08             	add    $0x8,%esp$/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd:	cf                   	iret   $/;"	l
f01038fe	obj/kern/kernel.asm	/^f01038fe:	c7 44 24 08 e6 67 10 	movl   $0xf01067e6,0x8(%esp)$/;"	l
f0103905	obj/kern/kernel.asm	/^f0103905:	f0 $/;"	l
f0103906	obj/kern/kernel.asm	/^f0103906:	c7 44 24 04 b1 01 00 	movl   $0x1b1,0x4(%esp)$/;"	l
f010390d	obj/kern/kernel.asm	/^f010390d:	00 $/;"	l
f010390e	obj/kern/kernel.asm	/^f010390e:	c7 04 24 a4 67 10 f0 	movl   $0xf01067a4,(%esp)$/;"	l
f0103915	obj/kern/kernel.asm	/^f0103915:	e8 b7 c7 ff ff       	call   f01000d1 <_panic>$/;"	l
f010391a	obj/kern/kernel.asm	/^f010391a <env_run>:$/;"	l
f010391a	obj/kern/kernel.asm	/^f010391a:	55                   	push   %ebp$/;"	l
f010391b	obj/kern/kernel.asm	/^f010391b:	89 e5                	mov    %esp,%ebp$/;"	l
f010391d	obj/kern/kernel.asm	/^f010391d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103920	obj/kern/kernel.asm	/^f0103920:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103923	obj/kern/kernel.asm	/^f0103923:	39 15 24 36 21 f0    	cmp    %edx,0xf0213624$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	74 0a                	je     f0103935 <env_run+0x1b>$/;"	l
f010392b	obj/kern/kernel.asm	/^f010392b:	89 15 24 36 21 f0    	mov    %edx,0xf0213624$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	83 42 58 01          	addl   $0x1,0x58(%edx)$/;"	l
f0103935	obj/kern/kernel.asm	/^f0103935:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f0103938	obj/kern/kernel.asm	/^f0103938:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010393b	obj/kern/kernel.asm	/^f010393b:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010393e	obj/kern/kernel.asm	/^f010393e:	e8 a9 ff ff ff       	call   f01038ec <env_pop_tf>$/;"	l
f0103944	obj/kern/kernel.asm	/^f0103944 <mc146818_read>:$/;"	l
f0103944	obj/kern/kernel.asm	/^f0103944:	55                   	push   %ebp$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	89 e5                	mov    %esp,%ebp$/;"	l
f0103947	obj/kern/kernel.asm	/^f0103947:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010394c	obj/kern/kernel.asm	/^f010394c:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103950	obj/kern/kernel.asm	/^f0103950:	ee                   	out    %al,(%dx)$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	b2 71                	mov    $0x71,%dl$/;"	l
f0103953	obj/kern/kernel.asm	/^f0103953:	ec                   	in     (%dx),%al$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103957	obj/kern/kernel.asm	/^f0103957:	5d                   	pop    %ebp$/;"	l
f0103958	obj/kern/kernel.asm	/^f0103958:	c3                   	ret    $/;"	l
f0103959	obj/kern/kernel.asm	/^f0103959 <mc146818_write>:$/;"	l
f0103959	obj/kern/kernel.asm	/^f0103959:	55                   	push   %ebp$/;"	l
f010395a	obj/kern/kernel.asm	/^f010395a:	89 e5                	mov    %esp,%ebp$/;"	l
f010395c	obj/kern/kernel.asm	/^f010395c:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103961	obj/kern/kernel.asm	/^f0103961:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103965	obj/kern/kernel.asm	/^f0103965:	ee                   	out    %al,(%dx)$/;"	l
f0103966	obj/kern/kernel.asm	/^f0103966:	b2 71                	mov    $0x71,%dl$/;"	l
f0103968	obj/kern/kernel.asm	/^f0103968:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax$/;"	l
f010396c	obj/kern/kernel.asm	/^f010396c:	ee                   	out    %al,(%dx)$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	5d                   	pop    %ebp$/;"	l
f010396e	obj/kern/kernel.asm	/^f010396e:	c3                   	ret    $/;"	l
f010396f	obj/kern/kernel.asm	/^f010396f <kclock_init>:$/;"	l
f010396f	obj/kern/kernel.asm	/^f010396f:	55                   	push   %ebp$/;"	l
f0103970	obj/kern/kernel.asm	/^f0103970:	89 e5                	mov    %esp,%ebp$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103975	obj/kern/kernel.asm	/^f0103975:	ba 43 00 00 00       	mov    $0x43,%edx$/;"	l
f010397a	obj/kern/kernel.asm	/^f010397a:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f010397f	obj/kern/kernel.asm	/^f010397f:	ee                   	out    %al,(%dx)$/;"	l
f0103980	obj/kern/kernel.asm	/^f0103980:	b2 40                	mov    $0x40,%dl$/;"	l
f0103982	obj/kern/kernel.asm	/^f0103982:	b8 9c ff ff ff       	mov    $0xffffff9c,%eax$/;"	l
f0103987	obj/kern/kernel.asm	/^f0103987:	ee                   	out    %al,(%dx)$/;"	l
f0103988	obj/kern/kernel.asm	/^f0103988:	b8 2e 00 00 00       	mov    $0x2e,%eax$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	ee                   	out    %al,(%dx)$/;"	l
f010398e	obj/kern/kernel.asm	/^f010398e:	c7 04 24 f4 67 10 f0 	movl   $0xf01067f4,(%esp)$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	e8 70 01 00 00       	call   f0103b0a <cprintf>$/;"	l
f010399a	obj/kern/kernel.asm	/^f010399a:	0f b7 05 f8 d5 11 f0 	movzwl 0xf011d5f8,%eax$/;"	l
f01039a1	obj/kern/kernel.asm	/^f01039a1:	25 fe ff 00 00       	and    $0xfffe,%eax$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01039a9	obj/kern/kernel.asm	/^f01039a9:	e8 9b 00 00 00       	call   f0103a49 <irq_setmask_8259A>$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	c7 04 24 17 68 10 f0 	movl   $0xf0106817,(%esp)$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	e8 50 01 00 00       	call   f0103b0a <cprintf>$/;"	l
f01039ba	obj/kern/kernel.asm	/^f01039ba:	c9                   	leave  $/;"	l
f01039bb	obj/kern/kernel.asm	/^f01039bb:	c3                   	ret    $/;"	l
f01039bc	obj/kern/kernel.asm	/^f01039bc <pic_init>:$/;"	l
f01039bc	obj/kern/kernel.asm	/^f01039bc:	55                   	push   %ebp$/;"	l
f01039bd	obj/kern/kernel.asm	/^f01039bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01039bf	obj/kern/kernel.asm	/^f01039bf:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01039c2	obj/kern/kernel.asm	/^f01039c2:	c7 05 2c 36 21 f0 01 	movl   $0x1,0xf021362c$/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	00 00 00 $/;"	l
f01039cc	obj/kern/kernel.asm	/^f01039cc:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01039d1	obj/kern/kernel.asm	/^f01039d1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01039d6	obj/kern/kernel.asm	/^f01039d6:	ee                   	out    %al,(%dx)$/;"	l
f01039d7	obj/kern/kernel.asm	/^f01039d7:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01039d9	obj/kern/kernel.asm	/^f01039d9:	ee                   	out    %al,(%dx)$/;"	l
f01039da	obj/kern/kernel.asm	/^f01039da:	b2 20                	mov    $0x20,%dl$/;"	l
f01039dc	obj/kern/kernel.asm	/^f01039dc:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01039e1	obj/kern/kernel.asm	/^f01039e1:	ee                   	out    %al,(%dx)$/;"	l
f01039e2	obj/kern/kernel.asm	/^f01039e2:	b2 21                	mov    $0x21,%dl$/;"	l
f01039e4	obj/kern/kernel.asm	/^f01039e4:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01039e9	obj/kern/kernel.asm	/^f01039e9:	ee                   	out    %al,(%dx)$/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f01039ef	obj/kern/kernel.asm	/^f01039ef:	ee                   	out    %al,(%dx)$/;"	l
f01039f0	obj/kern/kernel.asm	/^f01039f0:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01039f5	obj/kern/kernel.asm	/^f01039f5:	ee                   	out    %al,(%dx)$/;"	l
f01039f6	obj/kern/kernel.asm	/^f01039f6:	b2 a0                	mov    $0xa0,%dl$/;"	l
f01039f8	obj/kern/kernel.asm	/^f01039f8:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01039fd	obj/kern/kernel.asm	/^f01039fd:	ee                   	out    %al,(%dx)$/;"	l
f01039fe	obj/kern/kernel.asm	/^f01039fe:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103a00	obj/kern/kernel.asm	/^f0103a00:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103a05	obj/kern/kernel.asm	/^f0103a05:	ee                   	out    %al,(%dx)$/;"	l
f0103a06	obj/kern/kernel.asm	/^f0103a06:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103a0b	obj/kern/kernel.asm	/^f0103a0b:	ee                   	out    %al,(%dx)$/;"	l
f0103a0c	obj/kern/kernel.asm	/^f0103a0c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103a11	obj/kern/kernel.asm	/^f0103a11:	ee                   	out    %al,(%dx)$/;"	l
f0103a12	obj/kern/kernel.asm	/^f0103a12:	b2 20                	mov    $0x20,%dl$/;"	l
f0103a14	obj/kern/kernel.asm	/^f0103a14:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	ee                   	out    %al,(%dx)$/;"	l
f0103a1a	obj/kern/kernel.asm	/^f0103a1a:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103a1f	obj/kern/kernel.asm	/^f0103a1f:	ee                   	out    %al,(%dx)$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103a22	obj/kern/kernel.asm	/^f0103a22:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	ee                   	out    %al,(%dx)$/;"	l
f0103a28	obj/kern/kernel.asm	/^f0103a28:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	ee                   	out    %al,(%dx)$/;"	l
f0103a2e	obj/kern/kernel.asm	/^f0103a2e:	66 83 3d f8 d5 11 f0 	cmpw   $0xffffffff,0xf011d5f8$/;"	l
f0103a35	obj/kern/kernel.asm	/^f0103a35:	ff $/;"	l
f0103a36	obj/kern/kernel.asm	/^f0103a36:	74 0f                	je     f0103a47 <pic_init+0x8b>$/;"	l
f0103a38	obj/kern/kernel.asm	/^f0103a38:	0f b7 05 f8 d5 11 f0 	movzwl 0xf011d5f8,%eax$/;"	l
f0103a3f	obj/kern/kernel.asm	/^f0103a3f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	e8 02 00 00 00       	call   f0103a49 <irq_setmask_8259A>$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	c9                   	leave  $/;"	l
f0103a48	obj/kern/kernel.asm	/^f0103a48:	c3                   	ret    $/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49 <irq_setmask_8259A>:$/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	55                   	push   %ebp$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	56                   	push   %esi$/;"	l
f0103a4d	obj/kern/kernel.asm	/^f0103a4d:	53                   	push   %ebx$/;"	l
f0103a4e	obj/kern/kernel.asm	/^f0103a4e:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103a51	obj/kern/kernel.asm	/^f0103a51:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103a54	obj/kern/kernel.asm	/^f0103a54:	89 c6                	mov    %eax,%esi$/;"	l
f0103a56	obj/kern/kernel.asm	/^f0103a56:	66 a3 f8 d5 11 f0    	mov    %ax,0xf011d5f8$/;"	l
f0103a5c	obj/kern/kernel.asm	/^f0103a5c:	83 3d 2c 36 21 f0 00 	cmpl   $0x0,0xf021362c$/;"	l
f0103a63	obj/kern/kernel.asm	/^f0103a63:	3e 74 56             	je,pt  f0103abc <irq_setmask_8259A+0x73>$/;"	l
f0103a66	obj/kern/kernel.asm	/^f0103a66:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	ee                   	out    %al,(%dx)$/;"	l
f0103a6c	obj/kern/kernel.asm	/^f0103a6c:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103a6e	obj/kern/kernel.asm	/^f0103a6e:	89 f0                	mov    %esi,%eax$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103a74	obj/kern/kernel.asm	/^f0103a74:	ee                   	out    %al,(%dx)$/;"	l
f0103a75	obj/kern/kernel.asm	/^f0103a75:	c7 04 24 32 68 10 f0 	movl   $0xf0106832,(%esp)$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	e8 89 00 00 00       	call   f0103b0a <cprintf>$/;"	l
f0103a81	obj/kern/kernel.asm	/^f0103a81:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103a86	obj/kern/kernel.asm	/^f0103a86:	0f b7 c6             	movzwl %si,%eax$/;"	l
f0103a89	obj/kern/kernel.asm	/^f0103a89:	89 c6                	mov    %eax,%esi$/;"	l
f0103a8b	obj/kern/kernel.asm	/^f0103a8b:	f7 d6                	not    %esi$/;"	l
f0103a8d	obj/kern/kernel.asm	/^f0103a8d:	89 f0                	mov    %esi,%eax$/;"	l
f0103a8f	obj/kern/kernel.asm	/^f0103a8f:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103a91	obj/kern/kernel.asm	/^f0103a91:	d3 f8                	sar    %cl,%eax$/;"	d
f0103a93	obj/kern/kernel.asm	/^f0103a93:	a8 01                	test   $0x1,%al$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	3e 74 10             	je,pt  f0103aa8 <irq_setmask_8259A+0x5f>$/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103a9c	obj/kern/kernel.asm	/^f0103a9c:	c7 04 24 42 6d 10 f0 	movl   $0xf0106d42,(%esp)$/;"	l
f0103aa3	obj/kern/kernel.asm	/^f0103aa3:	e8 62 00 00 00       	call   f0103b0a <cprintf>$/;"	l
f0103aa8	obj/kern/kernel.asm	/^f0103aa8:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103aab	obj/kern/kernel.asm	/^f0103aab:	83 fb 0f             	cmp    $0xf,%ebx$/;"	l
f0103aae	obj/kern/kernel.asm	/^f0103aae:	7e dd                	jle    f0103a8d <irq_setmask_8259A+0x44>$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	c7 04 24 e0 5b 10 f0 	movl   $0xf0105be0,(%esp)$/;"	l
f0103ab7	obj/kern/kernel.asm	/^f0103ab7:	e8 4e 00 00 00       	call   f0103b0a <cprintf>$/;"	l
f0103abc	obj/kern/kernel.asm	/^f0103abc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103abf	obj/kern/kernel.asm	/^f0103abf:	5b                   	pop    %ebx$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	5e                   	pop    %esi$/;"	l
f0103ac1	obj/kern/kernel.asm	/^f0103ac1:	5d                   	pop    %ebp$/;"	l
f0103ac2	obj/kern/kernel.asm	/^f0103ac2:	c3                   	ret    $/;"	l
f0103ac4	obj/kern/kernel.asm	/^f0103ac4 <putch>:$/;"	l
f0103ac4	obj/kern/kernel.asm	/^f0103ac4:	55                   	push   %ebp$/;"	l
f0103ac5	obj/kern/kernel.asm	/^f0103ac5:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ac7	obj/kern/kernel.asm	/^f0103ac7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103aca	obj/kern/kernel.asm	/^f0103aca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	e8 e0 cb ff ff       	call   f01006b5 <cputchar>$/;"	l
f0103ad5	obj/kern/kernel.asm	/^f0103ad5:	c9                   	leave  $/;"	l
f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	c3                   	ret    $/;"	l
f0103ad7	obj/kern/kernel.asm	/^f0103ad7 <vcprintf>:$/;"	l
f0103ad7	obj/kern/kernel.asm	/^f0103ad7:	55                   	push   %ebp$/;"	l
f0103ad8	obj/kern/kernel.asm	/^f0103ad8:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ada	obj/kern/kernel.asm	/^f0103ada:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103add	obj/kern/kernel.asm	/^f0103add:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103ae7	obj/kern/kernel.asm	/^f0103ae7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103aee	obj/kern/kernel.asm	/^f0103aee:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	8d 45 fc             	lea    -0x4(%ebp),%eax$/;"	l
f0103af5	obj/kern/kernel.asm	/^f0103af5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	c7 04 24 c4 3a 10 f0 	movl   $0xf0103ac4,(%esp)$/;"	l
f0103b00	obj/kern/kernel.asm	/^f0103b00:	e8 5e 13 00 00       	call   f0104e63 <vprintfmt>$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	c9                   	leave  $/;"	l
f0103b09	obj/kern/kernel.asm	/^f0103b09:	c3                   	ret    $/;"	l
f0103b0a	obj/kern/kernel.asm	/^f0103b0a <cprintf>:$/;"	l
f0103b0a	obj/kern/kernel.asm	/^f0103b0a:	55                   	push   %ebp$/;"	l
f0103b0b	obj/kern/kernel.asm	/^f0103b0b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b0d	obj/kern/kernel.asm	/^f0103b0d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103b10	obj/kern/kernel.asm	/^f0103b10:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103b13	obj/kern/kernel.asm	/^f0103b13:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103b17	obj/kern/kernel.asm	/^f0103b17:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103b1a	obj/kern/kernel.asm	/^f0103b1a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b1d	obj/kern/kernel.asm	/^f0103b1d:	e8 b5 ff ff ff       	call   f0103ad7 <vcprintf>$/;"	l
f0103b22	obj/kern/kernel.asm	/^f0103b22:	c9                   	leave  $/;"	l
f0103b23	obj/kern/kernel.asm	/^f0103b23:	c3                   	ret    $/;"	l
f0103b24	obj/kern/kernel.asm	/^f0103b24 <trapname>:$/;"	l
f0103b24	obj/kern/kernel.asm	/^f0103b24:	55                   	push   %ebp$/;"	l
f0103b25	obj/kern/kernel.asm	/^f0103b25:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b27	obj/kern/kernel.asm	/^f0103b27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103b2a	obj/kern/kernel.asm	/^f0103b2a:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0103b2d	obj/kern/kernel.asm	/^f0103b2d:	77 09                	ja     f0103b38 <trapname+0x14>$/;"	l
f0103b2f	obj/kern/kernel.asm	/^f0103b2f:	8b 14 85 20 6b 10 f0 	mov    -0xfef94e0(,%eax,4),%edx$/;"	l
f0103b36	obj/kern/kernel.asm	/^f0103b36:	eb 1c                	jmp    f0103b54 <trapname+0x30>$/;"	l
f0103b38	obj/kern/kernel.asm	/^f0103b38:	ba 97 69 10 f0       	mov    $0xf0106997,%edx$/;"	l
f0103b3d	obj/kern/kernel.asm	/^f0103b3d:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103b40	obj/kern/kernel.asm	/^f0103b40:	74 12                	je     f0103b54 <trapname+0x30>$/;"	l
f0103b42	obj/kern/kernel.asm	/^f0103b42:	83 e8 20             	sub    $0x20,%eax$/;"	l
f0103b45	obj/kern/kernel.asm	/^f0103b45:	ba a3 69 10 f0       	mov    $0xf01069a3,%edx$/;"	l
f0103b4a	obj/kern/kernel.asm	/^f0103b4a:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0103b4d	obj/kern/kernel.asm	/^f0103b4d:	76 05                	jbe    f0103b54 <trapname+0x30>$/;"	l
f0103b4f	obj/kern/kernel.asm	/^f0103b4f:	ba 2f 69 10 f0       	mov    $0xf010692f,%edx$/;"	l
f0103b54	obj/kern/kernel.asm	/^f0103b54:	89 d0                	mov    %edx,%eax$/;"	l
f0103b56	obj/kern/kernel.asm	/^f0103b56:	5d                   	pop    %ebp$/;"	l
f0103b57	obj/kern/kernel.asm	/^f0103b57:	c3                   	ret    $/;"	l
f0103b58	obj/kern/kernel.asm	/^f0103b58 <idt_init>:$/;"	l
f0103b58	obj/kern/kernel.asm	/^f0103b58:	55                   	push   %ebp$/;"	l
f0103b59	obj/kern/kernel.asm	/^f0103b59:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b5b	obj/kern/kernel.asm	/^f0103b5b:	56                   	push   %esi$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	53                   	push   %ebx$/;"	l
f0103b5d	obj/kern/kernel.asm	/^f0103b5d:	bb 04 d6 11 f0       	mov    $0xf011d604,%ebx$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	83 3d 08 d6 11 f0 00 	cmpl   $0x0,0xf011d608$/;"	l
f0103b6e	obj/kern/kernel.asm	/^f0103b6e:	0f 84 04 01 00 00    	je     f0103c78 <idt_init+0x120>$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	be 40 36 21 f0       	mov    $0xf0213640,%esi$/;"	l
f0103b79	obj/kern/kernel.asm	/^f0103b79:	83 3c cb 02          	cmpl   $0x2,(%ebx,%ecx,8)$/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	3e 75 2f             	jne,pt f0103baf <idt_init+0x57>$/;"	l
f0103b80	obj/kern/kernel.asm	/^f0103b80:	8b 44 cb 04          	mov    0x4(%ebx,%ecx,8),%eax$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	66 a3 50 36 21 f0    	mov    %ax,0xf0213650$/;"	l
f0103b8a	obj/kern/kernel.asm	/^f0103b8a:	66 c7 05 52 36 21 f0 	movw   $0x8,0xf0213652$/;"	l
f0103b91	obj/kern/kernel.asm	/^f0103b91:	08 00 $/;"	l
f0103b93	obj/kern/kernel.asm	/^f0103b93:	c6 05 54 36 21 f0 00 	movb   $0x0,0xf0213654$/;"	l
f0103b9a	obj/kern/kernel.asm	/^f0103b9a:	c6 05 55 36 21 f0 8e 	movb   $0x8e,0xf0213655$/;"	l
f0103ba1	obj/kern/kernel.asm	/^f0103ba1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ba4	obj/kern/kernel.asm	/^f0103ba4:	66 a3 56 36 21 f0    	mov    %ax,0xf0213656$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	e9 bb 00 00 00       	jmp    f0103c6a <idt_init+0x112>$/;"	l
f0103baf	obj/kern/kernel.asm	/^f0103baf:	83 3c cb 03          	cmpl   $0x3,(%ebx,%ecx,8)$/;"	l
f0103bb3	obj/kern/kernel.asm	/^f0103bb3:	3e 75 2f             	jne,pt f0103be5 <idt_init+0x8d>$/;"	l
f0103bb6	obj/kern/kernel.asm	/^f0103bb6:	8b 44 cb 04          	mov    0x4(%ebx,%ecx,8),%eax$/;"	l
f0103bba	obj/kern/kernel.asm	/^f0103bba:	66 a3 58 36 21 f0    	mov    %ax,0xf0213658$/;"	l
f0103bc0	obj/kern/kernel.asm	/^f0103bc0:	66 c7 05 5a 36 21 f0 	movw   $0x8,0xf021365a$/;"	l
f0103bc7	obj/kern/kernel.asm	/^f0103bc7:	08 00 $/;"	l
f0103bc9	obj/kern/kernel.asm	/^f0103bc9:	c6 05 5c 36 21 f0 00 	movb   $0x0,0xf021365c$/;"	l
f0103bd0	obj/kern/kernel.asm	/^f0103bd0:	c6 05 5d 36 21 f0 ef 	movb   $0xef,0xf021365d$/;"	l
f0103bd7	obj/kern/kernel.asm	/^f0103bd7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103bda	obj/kern/kernel.asm	/^f0103bda:	66 a3 5e 36 21 f0    	mov    %ax,0xf021365e$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0:	e9 85 00 00 00       	jmp    f0103c6a <idt_init+0x112>$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	83 3c cb 30          	cmpl   $0x30,(%ebx,%ecx,8)$/;"	l
f0103be9	obj/kern/kernel.asm	/^f0103be9:	3e 75 2c             	jne,pt f0103c18 <idt_init+0xc0>$/;"	l
f0103bec	obj/kern/kernel.asm	/^f0103bec:	8b 44 cb 04          	mov    0x4(%ebx,%ecx,8),%eax$/;"	l
f0103bf0	obj/kern/kernel.asm	/^f0103bf0:	66 a3 c0 37 21 f0    	mov    %ax,0xf02137c0$/;"	l
f0103bf6	obj/kern/kernel.asm	/^f0103bf6:	66 c7 05 c2 37 21 f0 	movw   $0x8,0xf02137c2$/;"	l
f0103bfd	obj/kern/kernel.asm	/^f0103bfd:	08 00 $/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	c6 05 c4 37 21 f0 00 	movb   $0x0,0xf02137c4$/;"	l
f0103c06	obj/kern/kernel.asm	/^f0103c06:	c6 05 c5 37 21 f0 ee 	movb   $0xee,0xf02137c5$/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c10	obj/kern/kernel.asm	/^f0103c10:	66 a3 c6 37 21 f0    	mov    %ax,0xf02137c6$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	eb 52                	jmp    f0103c6a <idt_init+0x112>$/;"	l
f0103c18	obj/kern/kernel.asm	/^f0103c18:	8b 14 cb             	mov    (%ebx,%ecx,8),%edx$/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	8d 42 e0             	lea    -0x20(%edx),%eax$/;"	l
f0103c1e	obj/kern/kernel.asm	/^f0103c1e:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0103c21	obj/kern/kernel.asm	/^f0103c21:	77 23                	ja     f0103c46 <idt_init+0xee>$/;"	l
f0103c23	obj/kern/kernel.asm	/^f0103c23:	8b 44 cb 04          	mov    0x4(%ebx,%ecx,8),%eax$/;"	l
f0103c27	obj/kern/kernel.asm	/^f0103c27:	66 89 04 d6          	mov    %ax,(%esi,%edx,8)$/;"	l
f0103c2b	obj/kern/kernel.asm	/^f0103c2b:	66 c7 44 d6 02 08 00 	movw   $0x8,0x2(%esi,%edx,8)$/;"	l
f0103c32	obj/kern/kernel.asm	/^f0103c32:	c6 44 d6 04 00       	movb   $0x0,0x4(%esi,%edx,8)$/;"	l
f0103c37	obj/kern/kernel.asm	/^f0103c37:	c6 44 d6 05 8e       	movb   $0x8e,0x5(%esi,%edx,8)$/;"	l
f0103c3c	obj/kern/kernel.asm	/^f0103c3c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c3f	obj/kern/kernel.asm	/^f0103c3f:	66 89 44 d6 06       	mov    %ax,0x6(%esi,%edx,8)$/;"	l
f0103c44	obj/kern/kernel.asm	/^f0103c44:	eb 24                	jmp    f0103c6a <idt_init+0x112>$/;"	l
f0103c46	obj/kern/kernel.asm	/^f0103c46:	8b 04 cb             	mov    (%ebx,%ecx,8),%eax$/;"	l
f0103c49	obj/kern/kernel.asm	/^f0103c49:	8b 54 cb 04          	mov    0x4(%ebx,%ecx,8),%edx$/;"	l
f0103c4d	obj/kern/kernel.asm	/^f0103c4d:	66 89 14 c6          	mov    %dx,(%esi,%eax,8)$/;"	l
f0103c51	obj/kern/kernel.asm	/^f0103c51:	66 c7 44 c6 02 08 00 	movw   $0x8,0x2(%esi,%eax,8)$/;"	l
f0103c58	obj/kern/kernel.asm	/^f0103c58:	c6 44 c6 04 00       	movb   $0x0,0x4(%esi,%eax,8)$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	c6 44 c6 05 8f       	movb   $0x8f,0x5(%esi,%eax,8)$/;"	l
f0103c62	obj/kern/kernel.asm	/^f0103c62:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	66 89 54 c6 06       	mov    %dx,0x6(%esi,%eax,8)$/;"	l
f0103c6a	obj/kern/kernel.asm	/^f0103c6a:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0103c6d	obj/kern/kernel.asm	/^f0103c6d:	83 7c cb 04 00       	cmpl   $0x0,0x4(%ebx,%ecx,8)$/;"	l
f0103c72	obj/kern/kernel.asm	/^f0103c72:	0f 85 01 ff ff ff    	jne    f0103b79 <idt_init+0x21>$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	c7 05 44 3e 21 f0 00 	movl   $0xefc00000,0xf0213e44$/;"	l
f0103c7f	obj/kern/kernel.asm	/^f0103c7f:	00 c0 ef $/;"	l
f0103c82	obj/kern/kernel.asm	/^f0103c82:	66 c7 05 48 3e 21 f0 	movw   $0x10,0xf0213e48$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	10 00 $/;"	l
f0103c8b	obj/kern/kernel.asm	/^f0103c8b:	66 b8 68 00          	mov    $0x68,%ax$/;"	l
f0103c8f	obj/kern/kernel.asm	/^f0103c8f:	bb 40 3e 21 f0       	mov    $0xf0213e40,%ebx$/;"	l
f0103c94	obj/kern/kernel.asm	/^f0103c94:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103c96	obj/kern/kernel.asm	/^f0103c96:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f0103c9e	obj/kern/kernel.asm	/^f0103c9e:	09 c8                	or     %ecx,%eax$/;"	l
f0103ca0	obj/kern/kernel.asm	/^f0103ca0:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103ca2	obj/kern/kernel.asm	/^f0103ca2:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
f0103ca5	obj/kern/kernel.asm	/^f0103ca5:	88 ca                	mov    %cl,%dl$/;"	l
f0103ca7	obj/kern/kernel.asm	/^f0103ca7:	80 e6 f0             	and    $0xf0,%dh$/;"	l
f0103caa	obj/kern/kernel.asm	/^f0103caa:	80 ce 09             	or     $0x9,%dh$/;"	l
f0103cad	obj/kern/kernel.asm	/^f0103cad:	80 ce 10             	or     $0x10,%dh$/;"	l
f0103cb0	obj/kern/kernel.asm	/^f0103cb0:	80 e6 9f             	and    $0x9f,%dh$/;"	l
f0103cb3	obj/kern/kernel.asm	/^f0103cb3:	80 ce 80             	or     $0x80,%dh$/;"	l
f0103cb6	obj/kern/kernel.asm	/^f0103cb6:	81 e2 ff ff f0 ff    	and    $0xfff0ffff,%edx$/;"	l
f0103cbc	obj/kern/kernel.asm	/^f0103cbc:	81 e2 ff ff ef ff    	and    $0xffefffff,%edx$/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2:	81 e2 ff ff df ff    	and    $0xffdfffff,%edx$/;"	l
f0103cc8	obj/kern/kernel.asm	/^f0103cc8:	81 ca 00 00 40 00    	or     $0x400000,%edx$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	81 e2 ff ff 7f ff    	and    $0xff7fffff,%edx$/;"	l
f0103cd4	obj/kern/kernel.asm	/^f0103cd4:	81 e3 00 00 00 ff    	and    $0xff000000,%ebx$/;"	l
f0103cda	obj/kern/kernel.asm	/^f0103cda:	81 e2 ff ff ff 00    	and    $0xffffff,%edx$/;"	l
f0103ce0	obj/kern/kernel.asm	/^f0103ce0:	09 da                	or     %ebx,%edx$/;"	l
f0103ce2	obj/kern/kernel.asm	/^f0103ce2:	a3 e8 d5 11 f0       	mov    %eax,0xf011d5e8$/;"	l
f0103ce7	obj/kern/kernel.asm	/^f0103ce7:	89 15 ec d5 11 f0    	mov    %edx,0xf011d5ec$/;"	l
f0103ced	obj/kern/kernel.asm	/^f0103ced:	80 25 ed d5 11 f0 ef 	andb   $0xef,0xf011d5ed$/;"	l
f0103cf4	obj/kern/kernel.asm	/^f0103cf4:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	0f 00 d8             	ltr    %ax$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	0f 01 1d fc d5 11 f0 	lidtl  0xf011d5fc$/;"	l
f0103d03	obj/kern/kernel.asm	/^f0103d03:	5b                   	pop    %ebx$/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04:	5e                   	pop    %esi$/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	5d                   	pop    %ebp$/;"	l
f0103d06	obj/kern/kernel.asm	/^f0103d06:	c3                   	ret    $/;"	l
f0103d07	obj/kern/kernel.asm	/^f0103d07 <print_trapframe>:$/;"	l
f0103d07	obj/kern/kernel.asm	/^f0103d07:	55                   	push   %ebp$/;"	l
f0103d08	obj/kern/kernel.asm	/^f0103d08:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	56                   	push   %esi$/;"	l
f0103d0b	obj/kern/kernel.asm	/^f0103d0b:	53                   	push   %ebx$/;"	l
f0103d0c	obj/kern/kernel.asm	/^f0103d0c:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103d0f	obj/kern/kernel.asm	/^f0103d0f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103d16	obj/kern/kernel.asm	/^f0103d16:	c7 04 24 b6 69 10 f0 	movl   $0xf01069b6,(%esp)$/;"	l
f0103d1d	obj/kern/kernel.asm	/^f0103d1d:	e8 e8 fd ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103d25	obj/kern/kernel.asm	/^f0103d25:	e8 c2 00 00 00       	call   f0103dec <print_regs>$/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103d32	obj/kern/kernel.asm	/^f0103d32:	c7 04 24 c8 69 10 f0 	movl   $0xf01069c8,(%esp)$/;"	l
f0103d39	obj/kern/kernel.asm	/^f0103d39:	e8 cc fd ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0103d42	obj/kern/kernel.asm	/^f0103d42:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103d46	obj/kern/kernel.asm	/^f0103d46:	c7 04 24 db 69 10 f0 	movl   $0xf01069db,(%esp)$/;"	l
f0103d4d	obj/kern/kernel.asm	/^f0103d4d:	e8 b8 fd ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103d52	obj/kern/kernel.asm	/^f0103d52:	8b 73 28             	mov    0x28(%ebx),%esi$/;"	l
f0103d55	obj/kern/kernel.asm	/^f0103d55:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103d58	obj/kern/kernel.asm	/^f0103d58:	e8 c7 fd ff ff       	call   f0103b24 <trapname>$/;"	l
f0103d5d	obj/kern/kernel.asm	/^f0103d5d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103d61	obj/kern/kernel.asm	/^f0103d61:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0103d65	obj/kern/kernel.asm	/^f0103d65:	c7 04 24 ee 69 10 f0 	movl   $0xf01069ee,(%esp)$/;"	l
f0103d6c	obj/kern/kernel.asm	/^f0103d6c:	e8 99 fd ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103d71	obj/kern/kernel.asm	/^f0103d71:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103d78	obj/kern/kernel.asm	/^f0103d78:	c7 04 24 00 6a 10 f0 	movl   $0xf0106a00,(%esp)$/;"	l
f0103d7f	obj/kern/kernel.asm	/^f0103d7f:	e8 86 fd ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	c7 04 24 0f 6a 10 f0 	movl   $0xf0106a0f,(%esp)$/;"	l
f0103d92	obj/kern/kernel.asm	/^f0103d92:	e8 73 fd ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103d97	obj/kern/kernel.asm	/^f0103d97:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0103d9b	obj/kern/kernel.asm	/^f0103d9b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	c7 04 24 1e 6a 10 f0 	movl   $0xf0106a1e,(%esp)$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	e8 5f fd ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103dab	obj/kern/kernel.asm	/^f0103dab:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0103dae	obj/kern/kernel.asm	/^f0103dae:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	c7 04 24 31 6a 10 f0 	movl   $0xf0106a31,(%esp)$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	e8 4c fd ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103dbe	obj/kern/kernel.asm	/^f0103dbe:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103dc5	obj/kern/kernel.asm	/^f0103dc5:	c7 04 24 40 6a 10 f0 	movl   $0xf0106a40,(%esp)$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	e8 39 fd ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103dd1	obj/kern/kernel.asm	/^f0103dd1:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0103dd5	obj/kern/kernel.asm	/^f0103dd5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103dd9	obj/kern/kernel.asm	/^f0103dd9:	c7 04 24 4f 6a 10 f0 	movl   $0xf0106a4f,(%esp)$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0:	e8 25 fd ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103de5	obj/kern/kernel.asm	/^f0103de5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	5b                   	pop    %ebx$/;"	l
f0103de9	obj/kern/kernel.asm	/^f0103de9:	5e                   	pop    %esi$/;"	l
f0103dea	obj/kern/kernel.asm	/^f0103dea:	5d                   	pop    %ebp$/;"	l
f0103deb	obj/kern/kernel.asm	/^f0103deb:	c3                   	ret    $/;"	l
f0103dec	obj/kern/kernel.asm	/^f0103dec <print_regs>:$/;"	l
f0103dec	obj/kern/kernel.asm	/^f0103dec:	55                   	push   %ebp$/;"	l
f0103ded	obj/kern/kernel.asm	/^f0103ded:	89 e5                	mov    %esp,%ebp$/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	53                   	push   %ebx$/;"	l
f0103df0	obj/kern/kernel.asm	/^f0103df0:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103df3	obj/kern/kernel.asm	/^f0103df3:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103df6	obj/kern/kernel.asm	/^f0103df6:	8b 03                	mov    (%ebx),%eax$/;"	l
f0103df8	obj/kern/kernel.asm	/^f0103df8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	c7 04 24 62 6a 10 f0 	movl   $0xf0106a62,(%esp)$/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	e8 02 fd ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103e08	obj/kern/kernel.asm	/^f0103e08:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103e0f	obj/kern/kernel.asm	/^f0103e0f:	c7 04 24 71 6a 10 f0 	movl   $0xf0106a71,(%esp)$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	e8 ef fc ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103e1b	obj/kern/kernel.asm	/^f0103e1b:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103e1e	obj/kern/kernel.asm	/^f0103e1e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103e22	obj/kern/kernel.asm	/^f0103e22:	c7 04 24 80 6a 10 f0 	movl   $0xf0106a80,(%esp)$/;"	l
f0103e29	obj/kern/kernel.asm	/^f0103e29:	e8 dc fc ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103e2e	obj/kern/kernel.asm	/^f0103e2e:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0103e31	obj/kern/kernel.asm	/^f0103e31:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103e35	obj/kern/kernel.asm	/^f0103e35:	c7 04 24 8f 6a 10 f0 	movl   $0xf0106a8f,(%esp)$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	e8 c9 fc ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103e41	obj/kern/kernel.asm	/^f0103e41:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103e48	obj/kern/kernel.asm	/^f0103e48:	c7 04 24 9e 6a 10 f0 	movl   $0xf0106a9e,(%esp)$/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	e8 b6 fc ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0103e57	obj/kern/kernel.asm	/^f0103e57:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	c7 04 24 ad 6a 10 f0 	movl   $0xf0106aad,(%esp)$/;"	l
f0103e62	obj/kern/kernel.asm	/^f0103e62:	e8 a3 fc ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103e67	obj/kern/kernel.asm	/^f0103e67:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f0103e6a	obj/kern/kernel.asm	/^f0103e6a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103e6e	obj/kern/kernel.asm	/^f0103e6e:	c7 04 24 bc 6a 10 f0 	movl   $0xf0106abc,(%esp)$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	e8 90 fc ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103e7a	obj/kern/kernel.asm	/^f0103e7a:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f0103e7d	obj/kern/kernel.asm	/^f0103e7d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	c7 04 24 cb 6a 10 f0 	movl   $0xf0106acb,(%esp)$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88:	e8 7d fc ff ff       	call   f0103b0a <cprintf>$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103e90	obj/kern/kernel.asm	/^f0103e90:	5b                   	pop    %ebx$/;"	l
f0103e91	obj/kern/kernel.asm	/^f0103e91:	5d                   	pop    %ebp$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	c3                   	ret    $/;"	l
f0103e93	obj/kern/kernel.asm	/^f0103e93 <trap_dispatch>:$/;"	l
f0103e93	obj/kern/kernel.asm	/^f0103e93:	55                   	push   %ebp$/;"	l
f0103e94	obj/kern/kernel.asm	/^f0103e94:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	53                   	push   %ebx$/;"	l
f0103e97	obj/kern/kernel.asm	/^f0103e97:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103e9d	obj/kern/kernel.asm	/^f0103e9d:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103ea0	obj/kern/kernel.asm	/^f0103ea0:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0103ea3	obj/kern/kernel.asm	/^f0103ea3:	74 18                	je     f0103ebd <trap_dispatch+0x2a>$/;"	l
f0103ea5	obj/kern/kernel.asm	/^f0103ea5:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0103ea8	obj/kern/kernel.asm	/^f0103ea8:	77 07                	ja     f0103eb1 <trap_dispatch+0x1e>$/;"	l
f0103eaa	obj/kern/kernel.asm	/^f0103eaa:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103ead	obj/kern/kernel.asm	/^f0103ead:	74 18                	je     f0103ec7 <trap_dispatch+0x34>$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	eb 57                	jmp    f0103f08 <trap_dispatch+0x75>$/;"	l
f0103eb1	obj/kern/kernel.asm	/^f0103eb1:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	74 4d                	je     f0103f03 <trap_dispatch+0x70>$/;"	l
f0103eb6	obj/kern/kernel.asm	/^f0103eb6:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103eb9	obj/kern/kernel.asm	/^f0103eb9:	74 16                	je     f0103ed1 <trap_dispatch+0x3e>$/;"	l
f0103ebb	obj/kern/kernel.asm	/^f0103ebb:	eb 4b                	jmp    f0103f08 <trap_dispatch+0x75>$/;"	l
f0103ebd	obj/kern/kernel.asm	/^f0103ebd:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103ec0	obj/kern/kernel.asm	/^f0103ec0:	e8 0e 01 00 00       	call   f0103fd3 <page_fault_handler>$/;"	l
f0103ec5	obj/kern/kernel.asm	/^f0103ec5:	eb 7a                	jmp    f0103f41 <trap_dispatch+0xae>$/;"	l
f0103ec7	obj/kern/kernel.asm	/^f0103ec7:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	e8 7f d1 ff ff       	call   f010104e <monitor>$/;"	l
f0103ecf	obj/kern/kernel.asm	/^f0103ecf:	eb 70                	jmp    f0103f41 <trap_dispatch+0xae>$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	8b 03                	mov    (%ebx),%eax$/;"	l
f0103eda	obj/kern/kernel.asm	/^f0103eda:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103ee1	obj/kern/kernel.asm	/^f0103ee1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103ee5	obj/kern/kernel.asm	/^f0103ee5:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103eec	obj/kern/kernel.asm	/^f0103eec:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f0103ef6	obj/kern/kernel.asm	/^f0103ef6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ef9	obj/kern/kernel.asm	/^f0103ef9:	e8 ba 09 00 00       	call   f01048b8 <syscall>$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	89 43 1c             	mov    %eax,0x1c(%ebx)$/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01:	eb 3e                	jmp    f0103f41 <trap_dispatch+0xae>$/;"	l
f0103f03	obj/kern/kernel.asm	/^f0103f03:	e8 98 02 00 00       	call   f01041a0 <sched_yield>$/;"	l
f0103f08	obj/kern/kernel.asm	/^f0103f08:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103f0b	obj/kern/kernel.asm	/^f0103f0b:	e8 f7 fd ff ff       	call   f0103d07 <print_trapframe>$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	66 83 7b 34 08       	cmpw   $0x8,0x34(%ebx)$/;"	l
f0103f15	obj/kern/kernel.asm	/^f0103f15:	3e 75 1c             	jne,pt f0103f34 <trap_dispatch+0xa1>$/;"	l
f0103f18	obj/kern/kernel.asm	/^f0103f18:	c7 44 24 08 da 6a 10 	movl   $0xf0106ada,0x8(%esp)$/;"	l
f0103f1f	obj/kern/kernel.asm	/^f0103f1f:	f0 $/;"	l
f0103f20	obj/kern/kernel.asm	/^f0103f20:	c7 44 24 04 d8 00 00 	movl   $0xd8,0x4(%esp)$/;"	l
f0103f27	obj/kern/kernel.asm	/^f0103f27:	00 $/;"	l
f0103f28	obj/kern/kernel.asm	/^f0103f28:	c7 04 24 f3 6a 10 f0 	movl   $0xf0106af3,(%esp)$/;"	l
f0103f2f	obj/kern/kernel.asm	/^f0103f2f:	e8 9d c1 ff ff       	call   f01000d1 <_panic>$/;"	l
f0103f34	obj/kern/kernel.asm	/^f0103f34:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f0103f39	obj/kern/kernel.asm	/^f0103f39:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	e8 7b f9 ff ff       	call   f01038bc <env_destroy>$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	83 c4 24             	add    $0x24,%esp$/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	5b                   	pop    %ebx$/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45:	5d                   	pop    %ebp$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	c3                   	ret    $/;"	l
f0103f47	obj/kern/kernel.asm	/^f0103f47 <trap>:$/;"	l
f0103f47	obj/kern/kernel.asm	/^f0103f47:	55                   	push   %ebp$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f4a	obj/kern/kernel.asm	/^f0103f4a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103f4d	obj/kern/kernel.asm	/^f0103f4d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103f50	obj/kern/kernel.asm	/^f0103f50:	0f b7 42 34          	movzwl 0x34(%edx),%eax$/;"	l
f0103f54	obj/kern/kernel.asm	/^f0103f54:	83 e0 03             	and    $0x3,%eax$/;"	l
f0103f57	obj/kern/kernel.asm	/^f0103f57:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	75 4d                	jne    f0103fa9 <trap+0x62>$/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c:	83 3d 24 36 21 f0 00 	cmpl   $0x0,0xf0213624$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	3e 75 24             	jne,pt f0103f8a <trap+0x43>$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	c7 44 24 0c ff 6a 10 	movl   $0xf0106aff,0xc(%esp)$/;"	l
f0103f6d	obj/kern/kernel.asm	/^f0103f6d:	f0 $/;"	l
f0103f6e	obj/kern/kernel.asm	/^f0103f6e:	c7 44 24 08 b0 65 10 	movl   $0xf01065b0,0x8(%esp)$/;"	l
f0103f75	obj/kern/kernel.asm	/^f0103f75:	f0 $/;"	l
f0103f76	obj/kern/kernel.asm	/^f0103f76:	c7 44 24 04 e7 00 00 	movl   $0xe7,0x4(%esp)$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	00 $/;"	l
f0103f7e	obj/kern/kernel.asm	/^f0103f7e:	c7 04 24 f3 6a 10 f0 	movl   $0xf0106af3,(%esp)$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	e8 47 c1 ff ff       	call   f01000d1 <_panic>$/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	00 $/;"	l
f0103f92	obj/kern/kernel.asm	/^f0103f92:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f9e	obj/kern/kernel.asm	/^f0103f9e:	e8 fe 15 00 00       	call   f01055a1 <memcpy>$/;"	l
f0103fa3	obj/kern/kernel.asm	/^f0103fa3:	8b 15 24 36 21 f0    	mov    0xf0213624,%edx$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	e8 e2 fe ff ff       	call   f0103e93 <trap_dispatch>$/;"	l
f0103fb1	obj/kern/kernel.asm	/^f0103fb1:	83 3d 24 36 21 f0 00 	cmpl   $0x0,0xf0213624$/;"	l
f0103fb8	obj/kern/kernel.asm	/^f0103fb8:	74 14                	je     f0103fce <trap+0x87>$/;"	l
f0103fba	obj/kern/kernel.asm	/^f0103fba:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f0103fbf	obj/kern/kernel.asm	/^f0103fbf:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0103fc3	obj/kern/kernel.asm	/^f0103fc3:	3e 75 08             	jne,pt f0103fce <trap+0x87>$/;"	l
f0103fc6	obj/kern/kernel.asm	/^f0103fc6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fc9	obj/kern/kernel.asm	/^f0103fc9:	e8 4c f9 ff ff       	call   f010391a <env_run>$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	e8 cd 01 00 00       	call   f01041a0 <sched_yield>$/;"	l
f0103fd3	obj/kern/kernel.asm	/^f0103fd3 <page_fault_handler>:$/;"	l
f0103fd3	obj/kern/kernel.asm	/^f0103fd3:	55                   	push   %ebp$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0103fdc	obj/kern/kernel.asm	/^f0103fdc:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec:	3e 75 1c             	jne,pt f010400b <page_fault_handler+0x38>$/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef:	c7 44 24 08 70 6b 10 	movl   $0xf0106b70,0x8(%esp)$/;"	l
f0103ff6	obj/kern/kernel.asm	/^f0103ff6:	f0 $/;"	l
f0103ff7	obj/kern/kernel.asm	/^f0103ff7:	c7 44 24 04 06 01 00 	movl   $0x106,0x4(%esp)$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	00 $/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	c7 04 24 f3 6a 10 f0 	movl   $0xf0106af3,(%esp)$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	e8 c6 c0 ff ff       	call   f01000d1 <_panic>$/;"	l
f010400b	obj/kern/kernel.asm	/^f010400b:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f0104014	obj/kern/kernel.asm	/^f0104014:	3e 0f 84 99 00 00 00 	je,pt  f01040b4 <page_fault_handler+0xe1>$/;"	l
f010401b	obj/kern/kernel.asm	/^f010401b:	bf cc ff bf ee       	mov    $0xeebfffcc,%edi$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	81 7b 3c 00 e0 bf ee 	cmpl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0104027	obj/kern/kernel.asm	/^f0104027:	76 06                	jbe    f010402f <page_fault_handler+0x5c>$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	8b 7b 3c             	mov    0x3c(%ebx),%edi$/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c:	83 ef 38             	sub    $0x38,%edi$/;"	l
f010402f	obj/kern/kernel.asm	/^f010402f:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f0104036	obj/kern/kernel.asm	/^f0104036:	00 $/;"	l
f0104037	obj/kern/kernel.asm	/^f0104037:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
f010403e	obj/kern/kernel.asm	/^f010403e:	00 $/;"	l
f010403f	obj/kern/kernel.asm	/^f010403f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104043	obj/kern/kernel.asm	/^f0104043:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f0104048	obj/kern/kernel.asm	/^f0104048:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010404b	obj/kern/kernel.asm	/^f010404b:	e8 34 e3 ff ff       	call   f0102384 <user_mem_assert>$/;"	l
f0104050	obj/kern/kernel.asm	/^f0104050:	89 37                	mov    %esi,(%edi)$/;"	l
f0104052	obj/kern/kernel.asm	/^f0104052:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104055	obj/kern/kernel.asm	/^f0104055:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f0104058	obj/kern/kernel.asm	/^f0104058:	8b 03                	mov    (%ebx),%eax$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	89 47 08             	mov    %eax,0x8(%edi)$/;"	l
f010405d	obj/kern/kernel.asm	/^f010405d:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0104060	obj/kern/kernel.asm	/^f0104060:	89 47 0c             	mov    %eax,0xc(%edi)$/;"	l
f0104063	obj/kern/kernel.asm	/^f0104063:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104066	obj/kern/kernel.asm	/^f0104066:	89 47 10             	mov    %eax,0x10(%edi)$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f010406c	obj/kern/kernel.asm	/^f010406c:	89 47 14             	mov    %eax,0x14(%edi)$/;"	l
f010406f	obj/kern/kernel.asm	/^f010406f:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104072	obj/kern/kernel.asm	/^f0104072:	89 47 18             	mov    %eax,0x18(%edi)$/;"	l
f0104075	obj/kern/kernel.asm	/^f0104075:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078:	89 47 1c             	mov    %eax,0x1c(%edi)$/;"	l
f010407b	obj/kern/kernel.asm	/^f010407b:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f010407e	obj/kern/kernel.asm	/^f010407e:	89 47 20             	mov    %eax,0x20(%edi)$/;"	l
f0104081	obj/kern/kernel.asm	/^f0104081:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f0104084	obj/kern/kernel.asm	/^f0104084:	89 47 24             	mov    %eax,0x24(%edi)$/;"	l
f0104087	obj/kern/kernel.asm	/^f0104087:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f010408a	obj/kern/kernel.asm	/^f010408a:	89 47 28             	mov    %eax,0x28(%edi)$/;"	l
f010408d	obj/kern/kernel.asm	/^f010408d:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090:	89 47 2c             	mov    %eax,0x2c(%edi)$/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104096	obj/kern/kernel.asm	/^f0104096:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0104099	obj/kern/kernel.asm	/^f0104099:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f010409e	obj/kern/kernel.asm	/^f010409e:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f01040a1	obj/kern/kernel.asm	/^f01040a1:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	89 7b 3c             	mov    %edi,0x3c(%ebx)$/;"	l
f01040a7	obj/kern/kernel.asm	/^f01040a7:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f01040ac	obj/kern/kernel.asm	/^f01040ac:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01040af	obj/kern/kernel.asm	/^f01040af:	e8 66 f8 ff ff       	call   f010391a <env_run>$/;"	l
f01040b4	obj/kern/kernel.asm	/^f01040b4:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01040bb	obj/kern/kernel.asm	/^f01040bb:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01040bf	obj/kern/kernel.asm	/^f01040bf:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f01040c4	obj/kern/kernel.asm	/^f01040c4:	8b 40 4c             	mov    0x4c(%eax),%eax$/;"	l
f01040c7	obj/kern/kernel.asm	/^f01040c7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01040cb	obj/kern/kernel.asm	/^f01040cb:	c7 04 24 94 6b 10 f0 	movl   $0xf0106b94,(%esp)$/;"	l
f01040d2	obj/kern/kernel.asm	/^f01040d2:	e8 33 fa ff ff       	call   f0103b0a <cprintf>$/;"	l
f01040d7	obj/kern/kernel.asm	/^f01040d7:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01040da	obj/kern/kernel.asm	/^f01040da:	e8 28 fc ff ff       	call   f0103d07 <print_trapframe>$/;"	l
f01040df	obj/kern/kernel.asm	/^f01040df:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f01040e4	obj/kern/kernel.asm	/^f01040e4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01040e7	obj/kern/kernel.asm	/^f01040e7:	e8 d0 f7 ff ff       	call   f01038bc <env_destroy>$/;"	l
f01040ec	obj/kern/kernel.asm	/^f01040ec:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01040ef	obj/kern/kernel.asm	/^f01040ef:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01040f2	obj/kern/kernel.asm	/^f01040f2:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01040f5	obj/kern/kernel.asm	/^f01040f5:	89 ec                	mov    %ebp,%esp$/;"	l
f01040f7	obj/kern/kernel.asm	/^f01040f7:	5d                   	pop    %ebp$/;"	l
f01040f8	obj/kern/kernel.asm	/^f01040f8:	c3                   	ret    $/;"	l
f01040f9	obj/kern/kernel.asm	/^f01040f9:	00 00                	add    %al,(%eax)$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc <trap_divide>:$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	6a 00                	push   $0x0$/;"	l
f01040fe	obj/kern/kernel.asm	/^f01040fe:	6a 00                	push   $0x0$/;"	l
f0104100	obj/kern/kernel.asm	/^f0104100:	e9 83 00 00 00       	jmp    f0104188 <_alltraps>$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	90                   	nop    $/;"	l
f0104106	obj/kern/kernel.asm	/^f0104106 <trap_debug>:$/;"	l
f0104106	obj/kern/kernel.asm	/^f0104106:	6a 00                	push   $0x0$/;"	l
f0104108	obj/kern/kernel.asm	/^f0104108:	6a 01                	push   $0x1$/;"	l
f010410a	obj/kern/kernel.asm	/^f010410a:	eb 7c                	jmp    f0104188 <_alltraps>$/;"	l
f010410c	obj/kern/kernel.asm	/^f010410c <trap_nmi>:$/;"	l
f010410c	obj/kern/kernel.asm	/^f010410c:	6a 00                	push   $0x0$/;"	l
f010410e	obj/kern/kernel.asm	/^f010410e:	6a 02                	push   $0x2$/;"	l
f0104110	obj/kern/kernel.asm	/^f0104110:	eb 76                	jmp    f0104188 <_alltraps>$/;"	l
f0104112	obj/kern/kernel.asm	/^f0104112 <trap_brkpt>:$/;"	l
f0104112	obj/kern/kernel.asm	/^f0104112:	6a 00                	push   $0x0$/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114:	6a 03                	push   $0x3$/;"	l
f0104116	obj/kern/kernel.asm	/^f0104116:	eb 70                	jmp    f0104188 <_alltraps>$/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118 <trap_oflow>:$/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	6a 00                	push   $0x0$/;"	l
f010411a	obj/kern/kernel.asm	/^f010411a:	6a 04                	push   $0x4$/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c:	eb 6a                	jmp    f0104188 <_alltraps>$/;"	l
f010411e	obj/kern/kernel.asm	/^f010411e <trap_bound>:$/;"	l
f010411e	obj/kern/kernel.asm	/^f010411e:	6a 00                	push   $0x0$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	6a 05                	push   $0x5$/;"	l
f0104122	obj/kern/kernel.asm	/^f0104122:	eb 64                	jmp    f0104188 <_alltraps>$/;"	l
f0104124	obj/kern/kernel.asm	/^f0104124 <trap_illop>:$/;"	l
f0104124	obj/kern/kernel.asm	/^f0104124:	6a 00                	push   $0x0$/;"	l
f0104126	obj/kern/kernel.asm	/^f0104126:	6a 06                	push   $0x6$/;"	l
f0104128	obj/kern/kernel.asm	/^f0104128:	eb 5e                	jmp    f0104188 <_alltraps>$/;"	l
f010412a	obj/kern/kernel.asm	/^f010412a <trap_device>:$/;"	l
f010412a	obj/kern/kernel.asm	/^f010412a:	6a 00                	push   $0x0$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	6a 07                	push   $0x7$/;"	l
f010412e	obj/kern/kernel.asm	/^f010412e:	eb 58                	jmp    f0104188 <_alltraps>$/;"	l
f0104130	obj/kern/kernel.asm	/^f0104130 <trap_dblflt>:$/;"	l
f0104130	obj/kern/kernel.asm	/^f0104130:	6a 08                	push   $0x8$/;"	l
f0104132	obj/kern/kernel.asm	/^f0104132:	eb 54                	jmp    f0104188 <_alltraps>$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134 <trap_tss>:$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	6a 0a                	push   $0xa$/;"	l
f0104136	obj/kern/kernel.asm	/^f0104136:	eb 50                	jmp    f0104188 <_alltraps>$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138 <trap_segnp>:$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	6a 0b                	push   $0xb$/;"	l
f010413a	obj/kern/kernel.asm	/^f010413a:	eb 4c                	jmp    f0104188 <_alltraps>$/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c <trap_stack>:$/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c:	6a 0c                	push   $0xc$/;"	l
f010413e	obj/kern/kernel.asm	/^f010413e:	eb 48                	jmp    f0104188 <_alltraps>$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140 <trap_gpflt>:$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	6a 0d                	push   $0xd$/;"	l
f0104142	obj/kern/kernel.asm	/^f0104142:	eb 44                	jmp    f0104188 <_alltraps>$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144 <trap_pgflt>:$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144:	6a 0e                	push   $0xe$/;"	l
f0104146	obj/kern/kernel.asm	/^f0104146:	eb 40                	jmp    f0104188 <_alltraps>$/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148 <trap_fperr>:$/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	6a 00                	push   $0x0$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	6a 10                	push   $0x10$/;"	l
f010414c	obj/kern/kernel.asm	/^f010414c:	eb 3a                	jmp    f0104188 <_alltraps>$/;"	l
f010414e	obj/kern/kernel.asm	/^f010414e <trap_align>:$/;"	l
f010414e	obj/kern/kernel.asm	/^f010414e:	6a 11                	push   $0x11$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	eb 36                	jmp    f0104188 <_alltraps>$/;"	l
f0104152	obj/kern/kernel.asm	/^f0104152 <trap_mchk>:$/;"	l
f0104152	obj/kern/kernel.asm	/^f0104152:	6a 00                	push   $0x0$/;"	l
f0104154	obj/kern/kernel.asm	/^f0104154:	6a 12                	push   $0x12$/;"	l
f0104156	obj/kern/kernel.asm	/^f0104156:	eb 30                	jmp    f0104188 <_alltraps>$/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158 <trap_simderr>:$/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158:	6a 00                	push   $0x0$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	6a 13                	push   $0x13$/;"	l
f010415c	obj/kern/kernel.asm	/^f010415c:	eb 2a                	jmp    f0104188 <_alltraps>$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e <trap_syscall>:$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	6a 00                	push   $0x0$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	6a 30                	push   $0x30$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	eb 24                	jmp    f0104188 <_alltraps>$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164 <trap_irq_timer>:$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164:	6a 00                	push   $0x0$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	6a 20                	push   $0x20$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	eb 1e                	jmp    f0104188 <_alltraps>$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a <trap_irq_kbd>:$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	6a 00                	push   $0x0$/;"	l
f010416c	obj/kern/kernel.asm	/^f010416c:	6a 21                	push   $0x21$/;"	l
f010416e	obj/kern/kernel.asm	/^f010416e:	eb 18                	jmp    f0104188 <_alltraps>$/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170 <trap_irq_slave>:$/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	6a 00                	push   $0x0$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	6a 22                	push   $0x22$/;"	l
f0104174	obj/kern/kernel.asm	/^f0104174:	eb 12                	jmp    f0104188 <_alltraps>$/;"	l
f0104176	obj/kern/kernel.asm	/^f0104176 <trap_irq_ide>:$/;"	l
f0104176	obj/kern/kernel.asm	/^f0104176:	6a 00                	push   $0x0$/;"	l
f0104178	obj/kern/kernel.asm	/^f0104178:	6a 2e                	push   $0x2e$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a:	eb 0c                	jmp    f0104188 <_alltraps>$/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c <trap_irq_error>:$/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c:	6a 00                	push   $0x0$/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	6a 33                	push   $0x33$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	eb 06                	jmp    f0104188 <_alltraps>$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182 <trap_irq_spurious>:$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182:	6a 00                	push   $0x0$/;"	l
f0104184	obj/kern/kernel.asm	/^f0104184:	6a 3f                	push   $0x3f$/;"	l
f0104186	obj/kern/kernel.asm	/^f0104186:	eb 00                	jmp    f0104188 <_alltraps>$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188 <_alltraps>:$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188:	1e                   	push   %ds$/;"	l
f0104189	obj/kern/kernel.asm	/^f0104189:	06                   	push   %es$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	60                   	pusha  $/;"	l
f010418b	obj/kern/kernel.asm	/^f010418b:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f010418f	obj/kern/kernel.asm	/^f010418f:	8e d8                	mov    %eax,%ds$/;"	l
f0104191	obj/kern/kernel.asm	/^f0104191:	8e c0                	mov    %eax,%es$/;"	l
f0104193	obj/kern/kernel.asm	/^f0104193:	54                   	push   %esp$/;"	l
f0104194	obj/kern/kernel.asm	/^f0104194:	fa                   	cli    $/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	e8 ad fd ff ff       	call   f0103f47 <trap>$/;"	l
f010419a	obj/kern/kernel.asm	/^f010419a:	5c                   	pop    %esp$/;"	l
f010419b	obj/kern/kernel.asm	/^f010419b:	61                   	popa   $/;"	l
f010419c	obj/kern/kernel.asm	/^f010419c:	07                   	pop    %es$/;"	l
f010419d	obj/kern/kernel.asm	/^f010419d:	1f                   	pop    %ds$/;"	l
f010419e	obj/kern/kernel.asm	/^f010419e:	cf                   	iret   $/;"	l
f01041a0	obj/kern/kernel.asm	/^f01041a0 <sched_yield>:$/;"	l
f01041a0	obj/kern/kernel.asm	/^f01041a0:	55                   	push   %ebp$/;"	l
f01041a1	obj/kern/kernel.asm	/^f01041a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01041a3	obj/kern/kernel.asm	/^f01041a3:	53                   	push   %ebx$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01041a7	obj/kern/kernel.asm	/^f01041a7:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01041ac	obj/kern/kernel.asm	/^f01041ac:	83 3d 24 36 21 f0 00 	cmpl   $0x0,0xf0213624$/;"	l
f01041b3	obj/kern/kernel.asm	/^f01041b3:	74 0e                	je     f01041c3 <sched_yield+0x23>$/;"	l
f01041b5	obj/kern/kernel.asm	/^f01041b5:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f01041ba	obj/kern/kernel.asm	/^f01041ba:	8b 58 4c             	mov    0x4c(%eax),%ebx$/;"	l
f01041bd	obj/kern/kernel.asm	/^f01041bd:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f01041c3	obj/kern/kernel.asm	/^f01041c3:	8d 53 01             	lea    0x1(%ebx),%edx$/;"	l
f01041c6	obj/kern/kernel.asm	/^f01041c6:	89 d0                	mov    %edx,%eax$/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01041cd	obj/kern/kernel.asm	/^f01041cd:	29 c2                	sub    %eax,%edx$/;"	l
f01041cf	obj/kern/kernel.asm	/^f01041cf:	39 da                	cmp    %ebx,%edx$/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	74 43                	je     f0104216 <sched_yield+0x76>$/;"	l
f01041d3	obj/kern/kernel.asm	/^f01041d3:	85 d2                	test   %edx,%edx$/;"	l
f01041d5	obj/kern/kernel.asm	/^f01041d5:	74 22                	je     f01041f9 <sched_yield+0x59>$/;"	l
f01041d7	obj/kern/kernel.asm	/^f01041d7:	8b 0d 20 36 21 f0    	mov    0xf0213620,%ecx$/;"	l
f01041dd	obj/kern/kernel.asm	/^f01041dd:	89 d0                	mov    %edx,%eax$/;"	l
f01041df	obj/kern/kernel.asm	/^f01041df:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f01041e2	obj/kern/kernel.asm	/^f01041e2:	29 d0                	sub    %edx,%eax$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01041e7	obj/kern/kernel.asm	/^f01041e7:	83 7c 08 54 01       	cmpl   $0x1,0x54(%eax,%ecx,1)$/;"	l
f01041ec	obj/kern/kernel.asm	/^f01041ec:	3e 75 0a             	jne,pt f01041f9 <sched_yield+0x59>$/;"	l
f01041ef	obj/kern/kernel.asm	/^f01041ef:	01 c8                	add    %ecx,%eax$/;"	l
f01041f1	obj/kern/kernel.asm	/^f01041f1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01041f4	obj/kern/kernel.asm	/^f01041f4:	e8 21 f7 ff ff       	call   f010391a <env_run>$/;"	l
f01041f9	obj/kern/kernel.asm	/^f01041f9:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f01041fc	obj/kern/kernel.asm	/^f01041fc:	89 c8                	mov    %ecx,%eax$/;"	l
f01041fe	obj/kern/kernel.asm	/^f01041fe:	85 c9                	test   %ecx,%ecx$/;"	l
f0104200	obj/kern/kernel.asm	/^f0104200:	3e 79 06             	jns,pt f0104209 <sched_yield+0x69>$/;"	l
f0104203	obj/kern/kernel.asm	/^f0104203:	8d 82 00 04 00 00    	lea    0x400(%edx),%eax$/;"	l
f0104209	obj/kern/kernel.asm	/^f0104209:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	89 ca                	mov    %ecx,%edx$/;"	l
f0104210	obj/kern/kernel.asm	/^f0104210:	29 c2                	sub    %eax,%edx$/;"	l
f0104212	obj/kern/kernel.asm	/^f0104212:	39 da                	cmp    %ebx,%edx$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	75 bd                	jne    f01041d3 <sched_yield+0x33>$/;"	l
f0104216	obj/kern/kernel.asm	/^f0104216:	8b 15 20 36 21 f0    	mov    0xf0213620,%edx$/;"	l
f010421c	obj/kern/kernel.asm	/^f010421c:	89 d8                	mov    %ebx,%eax$/;"	l
f010421e	obj/kern/kernel.asm	/^f010421e:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0104221	obj/kern/kernel.asm	/^f0104221:	29 d8                	sub    %ebx,%eax$/;"	l
f0104223	obj/kern/kernel.asm	/^f0104223:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226:	83 7c 10 54 01       	cmpl   $0x1,0x54(%eax,%edx,1)$/;"	l
f010422b	obj/kern/kernel.asm	/^f010422b:	3e 75 0a             	jne,pt f0104238 <sched_yield+0x98>$/;"	l
f010422e	obj/kern/kernel.asm	/^f010422e:	01 d0                	add    %edx,%eax$/;"	l
f0104230	obj/kern/kernel.asm	/^f0104230:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104233	obj/kern/kernel.asm	/^f0104233:	e8 e2 f6 ff ff       	call   f010391a <env_run>$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	a1 20 36 21 f0       	mov    0xf0213620,%eax$/;"	l
f010423d	obj/kern/kernel.asm	/^f010423d:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104241	obj/kern/kernel.asm	/^f0104241:	3e 75 08             	jne,pt f010424c <sched_yield+0xac>$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104247	obj/kern/kernel.asm	/^f0104247:	e8 ce f6 ff ff       	call   f010391a <env_run>$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	c7 04 24 b8 6b 10 f0 	movl   $0xf0106bb8,(%esp)$/;"	l
f0104253	obj/kern/kernel.asm	/^f0104253:	e8 b2 f8 ff ff       	call   f0103b0a <cprintf>$/;"	l
f0104258	obj/kern/kernel.asm	/^f0104258:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010425f	obj/kern/kernel.asm	/^f010425f:	e8 ea cd ff ff       	call   f010104e <monitor>$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	eb f2                	jmp    f0104258 <sched_yield+0xb8>$/;"	l
f0104268	obj/kern/kernel.asm	/^f0104268 <sys_cputs>:$/;"	l
f0104268	obj/kern/kernel.asm	/^f0104268:	55                   	push   %ebp$/;"	l
f0104269	obj/kern/kernel.asm	/^f0104269:	89 e5                	mov    %esp,%ebp$/;"	l
f010426b	obj/kern/kernel.asm	/^f010426b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f0104271	obj/kern/kernel.asm	/^f0104271:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104277	obj/kern/kernel.asm	/^f0104277:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010427a	obj/kern/kernel.asm	/^f010427a:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f0104281	obj/kern/kernel.asm	/^f0104281:	00 $/;"	l
f0104282	obj/kern/kernel.asm	/^f0104282:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010428a	obj/kern/kernel.asm	/^f010428a:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f010428f	obj/kern/kernel.asm	/^f010428f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104292	obj/kern/kernel.asm	/^f0104292:	e8 ed e0 ff ff       	call   f0102384 <user_mem_assert>$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010429b	obj/kern/kernel.asm	/^f010429b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	c7 04 24 ea 6b 10 f0 	movl   $0xf0106bea,(%esp)$/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6:	e8 5f f8 ff ff       	call   f0103b0a <cprintf>$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f01042b1	obj/kern/kernel.asm	/^f01042b1:	89 ec                	mov    %ebp,%esp$/;"	l
f01042b3	obj/kern/kernel.asm	/^f01042b3:	5d                   	pop    %ebp$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4:	c3                   	ret    $/;"	l
f01042b5	obj/kern/kernel.asm	/^f01042b5 <sys_cgetc>:$/;"	l
f01042b5	obj/kern/kernel.asm	/^f01042b5:	55                   	push   %ebp$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01042b8	obj/kern/kernel.asm	/^f01042b8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01042bb	obj/kern/kernel.asm	/^f01042bb:	e8 61 c3 ff ff       	call   f0100621 <cons_getc>$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0:	85 c0                	test   %eax,%eax$/;"	l
f01042c2	obj/kern/kernel.asm	/^f01042c2:	74 f7                	je     f01042bb <sys_cgetc+0x6>$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	c9                   	leave  $/;"	l
f01042c5	obj/kern/kernel.asm	/^f01042c5:	c3                   	ret    $/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6 <sys_getenvid>:$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	55                   	push   %ebp$/;"	l
f01042c7	obj/kern/kernel.asm	/^f01042c7:	89 e5                	mov    %esp,%ebp$/;"	l
f01042c9	obj/kern/kernel.asm	/^f01042c9:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f01042ce	obj/kern/kernel.asm	/^f01042ce:	8b 40 4c             	mov    0x4c(%eax),%eax$/;"	l
f01042d1	obj/kern/kernel.asm	/^f01042d1:	5d                   	pop    %ebp$/;"	l
f01042d2	obj/kern/kernel.asm	/^f01042d2:	c3                   	ret    $/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3 <sys_env_destroy>:$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	55                   	push   %ebp$/;"	l
f01042d4	obj/kern/kernel.asm	/^f01042d4:	89 e5                	mov    %esp,%ebp$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01042d9	obj/kern/kernel.asm	/^f01042d9:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01042e0	obj/kern/kernel.asm	/^f01042e0:	00 $/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	8d 45 fc             	lea    -0x4(%ebp),%eax$/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01042e8	obj/kern/kernel.asm	/^f01042e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01042eb	obj/kern/kernel.asm	/^f01042eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	e8 09 ef ff ff       	call   f01031fc <envid2env>$/;"	l
f01042f3	obj/kern/kernel.asm	/^f01042f3:	89 c2                	mov    %eax,%edx$/;"	l
f01042f5	obj/kern/kernel.asm	/^f01042f5:	85 c0                	test   %eax,%eax$/;"	l
f01042f7	obj/kern/kernel.asm	/^f01042f7:	78 10                	js     f0104309 <sys_env_destroy+0x36>$/;"	l
f01042f9	obj/kern/kernel.asm	/^f01042f9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01042fc	obj/kern/kernel.asm	/^f01042fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01042ff	obj/kern/kernel.asm	/^f01042ff:	e8 b8 f5 ff ff       	call   f01038bc <env_destroy>$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	89 d0                	mov    %edx,%eax$/;"	l
f010430b	obj/kern/kernel.asm	/^f010430b:	c9                   	leave  $/;"	l
f010430c	obj/kern/kernel.asm	/^f010430c:	c3                   	ret    $/;"	l
f010430d	obj/kern/kernel.asm	/^f010430d <sys_yield>:$/;"	l
f010430d	obj/kern/kernel.asm	/^f010430d:	55                   	push   %ebp$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104310	obj/kern/kernel.asm	/^f0104310:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104313	obj/kern/kernel.asm	/^f0104313:	e8 88 fe ff ff       	call   f01041a0 <sched_yield>$/;"	l
f0104318	obj/kern/kernel.asm	/^f0104318 <sys_exofork>:$/;"	l
f0104318	obj/kern/kernel.asm	/^f0104318:	55                   	push   %ebp$/;"	l
f0104319	obj/kern/kernel.asm	/^f0104319:	89 e5                	mov    %esp,%ebp$/;"	l
f010431b	obj/kern/kernel.asm	/^f010431b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010431e	obj/kern/kernel.asm	/^f010431e:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f0104323	obj/kern/kernel.asm	/^f0104323:	8b 40 4c             	mov    0x4c(%eax),%eax$/;"	l
f0104326	obj/kern/kernel.asm	/^f0104326:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010432a	obj/kern/kernel.asm	/^f010432a:	8d 45 fc             	lea    -0x4(%ebp),%eax$/;"	l
f010432d	obj/kern/kernel.asm	/^f010432d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104330	obj/kern/kernel.asm	/^f0104330:	e8 c5 f0 ff ff       	call   f01033fa <env_alloc>$/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	ba fb ff ff ff       	mov    $0xfffffffb,%edx$/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	85 c0                	test   %eax,%eax$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c:	78 36                	js     f0104374 <sys_exofork+0x5c>$/;"	l
f010433e	obj/kern/kernel.asm	/^f010433e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0104348	obj/kern/kernel.asm	/^f0104348:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f010434f	obj/kern/kernel.asm	/^f010434f:	00 $/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f0104355	obj/kern/kernel.asm	/^f0104355:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104359	obj/kern/kernel.asm	/^f0104359:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f010435c	obj/kern/kernel.asm	/^f010435c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010435f	obj/kern/kernel.asm	/^f010435f:	e8 3d 12 00 00       	call   f01055a1 <memcpy>$/;"	l
f0104364	obj/kern/kernel.asm	/^f0104364:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0104367	obj/kern/kernel.asm	/^f0104367:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f010436e	obj/kern/kernel.asm	/^f010436e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0104371	obj/kern/kernel.asm	/^f0104371:	8b 50 4c             	mov    0x4c(%eax),%edx$/;"	l
f0104374	obj/kern/kernel.asm	/^f0104374:	89 d0                	mov    %edx,%eax$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	c9                   	leave  $/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	c3                   	ret    $/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378 <sys_env_set_status>:$/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378:	55                   	push   %ebp$/;"	l
f0104379	obj/kern/kernel.asm	/^f0104379:	89 e5                	mov    %esp,%ebp$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	53                   	push   %ebx$/;"	l
f010437c	obj/kern/kernel.asm	/^f010437c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104382	obj/kern/kernel.asm	/^f0104382:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0104385	obj/kern/kernel.asm	/^f0104385:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f010438a	obj/kern/kernel.asm	/^f010438a:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010438d	obj/kern/kernel.asm	/^f010438d:	77 2e                	ja     f01043bd <sys_env_set_status+0x45>$/;"	l
f010438f	obj/kern/kernel.asm	/^f010438f:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104396	obj/kern/kernel.asm	/^f0104396:	00 $/;"	l
f0104397	obj/kern/kernel.asm	/^f0104397:	8d 45 f8             	lea    -0x8(%ebp),%eax$/;"	l
f010439a	obj/kern/kernel.asm	/^f010439a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01043a4	obj/kern/kernel.asm	/^f01043a4:	e8 53 ee ff ff       	call   f01031fc <envid2env>$/;"	l
f01043a9	obj/kern/kernel.asm	/^f01043a9:	ba fe ff ff ff       	mov    $0xfffffffe,%edx$/;"	l
f01043ae	obj/kern/kernel.asm	/^f01043ae:	85 c0                	test   %eax,%eax$/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	78 0b                	js     f01043bd <sys_env_set_status+0x45>$/;"	l
f01043b2	obj/kern/kernel.asm	/^f01043b2:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f01043b5	obj/kern/kernel.asm	/^f01043b5:	89 58 54             	mov    %ebx,0x54(%eax)$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01043bd	obj/kern/kernel.asm	/^f01043bd:	89 d0                	mov    %edx,%eax$/;"	l
f01043bf	obj/kern/kernel.asm	/^f01043bf:	83 c4 14             	add    $0x14,%esp$/;"	l
f01043c2	obj/kern/kernel.asm	/^f01043c2:	5b                   	pop    %ebx$/;"	l
f01043c3	obj/kern/kernel.asm	/^f01043c3:	5d                   	pop    %ebp$/;"	l
f01043c4	obj/kern/kernel.asm	/^f01043c4:	c3                   	ret    $/;"	l
f01043c5	obj/kern/kernel.asm	/^f01043c5 <sys_env_set_trapframe>:$/;"	l
f01043c5	obj/kern/kernel.asm	/^f01043c5:	55                   	push   %ebp$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01043c8	obj/kern/kernel.asm	/^f01043c8:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01043cb	obj/kern/kernel.asm	/^f01043cb:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01043d2	obj/kern/kernel.asm	/^f01043d2:	00 $/;"	l
f01043d3	obj/kern/kernel.asm	/^f01043d3:	8d 45 fc             	lea    -0x4(%ebp),%eax$/;"	l
f01043d6	obj/kern/kernel.asm	/^f01043d6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01043dd	obj/kern/kernel.asm	/^f01043dd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0:	e8 17 ee ff ff       	call   f01031fc <envid2env>$/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	89 c2                	mov    %eax,%edx$/;"	l
f01043e7	obj/kern/kernel.asm	/^f01043e7:	85 c0                	test   %eax,%eax$/;"	l
f01043e9	obj/kern/kernel.asm	/^f01043e9:	78 49                	js     f0104434 <sys_env_set_trapframe+0x6f>$/;"	l
f01043eb	obj/kern/kernel.asm	/^f01043eb:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f01043f2	obj/kern/kernel.asm	/^f01043f2:	00 $/;"	l
f01043f3	obj/kern/kernel.asm	/^f01043f3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01043f6	obj/kern/kernel.asm	/^f01043f6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01043fd	obj/kern/kernel.asm	/^f01043fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104400	obj/kern/kernel.asm	/^f0104400:	e8 9c 11 00 00       	call   f01055a1 <memcpy>$/;"	l
f0104405	obj/kern/kernel.asm	/^f0104405:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0104408	obj/kern/kernel.asm	/^f0104408:	81 48 38 00 02 00 00 	orl    $0x200,0x38(%eax)$/;"	l
f010440f	obj/kern/kernel.asm	/^f010440f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0104412	obj/kern/kernel.asm	/^f0104412:	66 83 48 34 03       	orw    $0x3,0x34(%eax)$/;"	l
f0104417	obj/kern/kernel.asm	/^f0104417:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	66 83 48 24 03       	orw    $0x3,0x24(%eax)$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0104422	obj/kern/kernel.asm	/^f0104422:	66 83 48 20 03       	orw    $0x3,0x20(%eax)$/;"	l
f0104427	obj/kern/kernel.asm	/^f0104427:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f010442a	obj/kern/kernel.asm	/^f010442a:	66 83 48 40 03       	orw    $0x3,0x40(%eax)$/;"	l
f010442f	obj/kern/kernel.asm	/^f010442f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104434	obj/kern/kernel.asm	/^f0104434:	89 d0                	mov    %edx,%eax$/;"	l
f0104436	obj/kern/kernel.asm	/^f0104436:	c9                   	leave  $/;"	l
f0104437	obj/kern/kernel.asm	/^f0104437:	c3                   	ret    $/;"	l
f0104438	obj/kern/kernel.asm	/^f0104438 <sys_env_set_pgfault_upcall>:$/;"	l
f0104438	obj/kern/kernel.asm	/^f0104438:	55                   	push   %ebp$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	89 e5                	mov    %esp,%ebp$/;"	l
f010443b	obj/kern/kernel.asm	/^f010443b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010443e	obj/kern/kernel.asm	/^f010443e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104445	obj/kern/kernel.asm	/^f0104445:	00 $/;"	l
f0104446	obj/kern/kernel.asm	/^f0104446:	8d 45 fc             	lea    -0x4(%ebp),%eax$/;"	l
f0104449	obj/kern/kernel.asm	/^f0104449:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104453	obj/kern/kernel.asm	/^f0104453:	e8 a4 ed ff ff       	call   f01031fc <envid2env>$/;"	l
f0104458	obj/kern/kernel.asm	/^f0104458:	ba fe ff ff ff       	mov    $0xfffffffe,%edx$/;"	l
f010445d	obj/kern/kernel.asm	/^f010445d:	85 c0                	test   %eax,%eax$/;"	l
f010445f	obj/kern/kernel.asm	/^f010445f:	78 0e                	js     f010446f <sys_env_set_pgfault_upcall+0x37>$/;"	l
f0104461	obj/kern/kernel.asm	/^f0104461:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0104467	obj/kern/kernel.asm	/^f0104467:	89 50 64             	mov    %edx,0x64(%eax)$/;"	l
f010446a	obj/kern/kernel.asm	/^f010446a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010446f	obj/kern/kernel.asm	/^f010446f:	89 d0                	mov    %edx,%eax$/;"	l
f0104471	obj/kern/kernel.asm	/^f0104471:	c9                   	leave  $/;"	l
f0104472	obj/kern/kernel.asm	/^f0104472:	c3                   	ret    $/;"	l
f0104473	obj/kern/kernel.asm	/^f0104473 <sys_page_alloc>:$/;"	l
f0104473	obj/kern/kernel.asm	/^f0104473:	55                   	push   %ebp$/;"	l
f0104474	obj/kern/kernel.asm	/^f0104474:	89 e5                	mov    %esp,%ebp$/;"	l
f0104476	obj/kern/kernel.asm	/^f0104476:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104479	obj/kern/kernel.asm	/^f0104479:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f010447c	obj/kern/kernel.asm	/^f010447c:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f010447f	obj/kern/kernel.asm	/^f010447f:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104482	obj/kern/kernel.asm	/^f0104482:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0104485	obj/kern/kernel.asm	/^f0104485:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f010448b	obj/kern/kernel.asm	/^f010448b:	77 08                	ja     f0104495 <sys_page_alloc+0x22>$/;"	l
f010448d	obj/kern/kernel.asm	/^f010448d:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	74 0a                	je     f010449f <sys_page_alloc+0x2c>$/;"	l
f0104495	obj/kern/kernel.asm	/^f0104495:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f010449a	obj/kern/kernel.asm	/^f010449a:	e9 fd 00 00 00       	jmp    f010459c <sys_page_alloc+0x129>$/;"	l
f010449f	obj/kern/kernel.asm	/^f010449f:	f7 c6 f8 f1 ff ff    	test   $0xfffff1f8,%esi$/;"	l
f01044a5	obj/kern/kernel.asm	/^f01044a5:	75 10                	jne    f01044b7 <sys_page_alloc+0x44>$/;"	l
f01044a7	obj/kern/kernel.asm	/^f01044a7:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f01044ad	obj/kern/kernel.asm	/^f01044ad:	74 08                	je     f01044b7 <sys_page_alloc+0x44>$/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	f7 c6 04 00 00 00    	test   $0x4,%esi$/;"	l
f01044b5	obj/kern/kernel.asm	/^f01044b5:	75 0a                	jne    f01044c1 <sys_page_alloc+0x4e>$/;"	l
f01044b7	obj/kern/kernel.asm	/^f01044b7:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	e9 db 00 00 00       	jmp    f010459c <sys_page_alloc+0x129>$/;"	l
f01044c1	obj/kern/kernel.asm	/^f01044c1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01044c8	obj/kern/kernel.asm	/^f01044c8:	00 $/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01044d0	obj/kern/kernel.asm	/^f01044d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6:	e8 21 ed ff ff       	call   f01031fc <envid2env>$/;"	l
f01044db	obj/kern/kernel.asm	/^f01044db:	ba fe ff ff ff       	mov    $0xfffffffe,%edx$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	85 c0                	test   %eax,%eax$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	0f 88 b4 00 00 00    	js     f010459c <sys_page_alloc+0x129>$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f01044eb	obj/kern/kernel.asm	/^f01044eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	e8 39 d9 ff ff       	call   f0101e2c <page_alloc>$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	ba fc ff ff ff       	mov    $0xfffffffc,%edx$/;"	l
f01044f8	obj/kern/kernel.asm	/^f01044f8:	85 c0                	test   %eax,%eax$/;"	l
f01044fa	obj/kern/kernel.asm	/^f01044fa:	0f 88 9c 00 00 00    	js     f010459c <sys_page_alloc+0x129>$/;"	l
f0104500	obj/kern/kernel.asm	/^f0104500:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104508	obj/kern/kernel.asm	/^f0104508:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010450b	obj/kern/kernel.asm	/^f010450b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010450f	obj/kern/kernel.asm	/^f010450f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104512	obj/kern/kernel.asm	/^f0104512:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f0104515	obj/kern/kernel.asm	/^f0104515:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104518	obj/kern/kernel.asm	/^f0104518:	e8 2e db ff ff       	call   f010204b <page_insert>$/;"	l
f010451d	obj/kern/kernel.asm	/^f010451d:	85 c0                	test   %eax,%eax$/;"	l
f010451f	obj/kern/kernel.asm	/^f010451f:	3e 79 12             	jns,pt f0104534 <sys_page_alloc+0xc1>$/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104525	obj/kern/kernel.asm	/^f0104525:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104528	obj/kern/kernel.asm	/^f0104528:	e8 95 d9 ff ff       	call   f0101ec2 <page_decref>$/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	ba fc ff ff ff       	mov    $0xfffffffc,%edx$/;"	l
f0104532	obj/kern/kernel.asm	/^f0104532:	eb 68                	jmp    f010459c <sys_page_alloc+0x129>$/;"	l
f0104534	obj/kern/kernel.asm	/^f0104534:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104537	obj/kern/kernel.asm	/^f0104537:	2b 05 cc 42 21 f0    	sub    0xf02142cc,%eax$/;"	l
f010453d	obj/kern/kernel.asm	/^f010453d:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0104540	obj/kern/kernel.asm	/^f0104540:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0104546	obj/kern/kernel.asm	/^f0104546:	89 c2                	mov    %eax,%edx$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010454b	obj/kern/kernel.asm	/^f010454b:	89 d0                	mov    %edx,%eax$/;"	l
f010454d	obj/kern/kernel.asm	/^f010454d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0104550	obj/kern/kernel.asm	/^f0104550:	3b 05 c0 42 21 f0    	cmp    0xf02142c0,%eax$/;"	l
f0104556	obj/kern/kernel.asm	/^f0104556:	3e 72 20             	jb,pt  f0104579 <sys_page_alloc+0x106>$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010455d	obj/kern/kernel.asm	/^f010455d:	c7 44 24 08 4c 60 10 	movl   $0xf010604c,0x8(%esp)$/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564:	f0 $/;"	l
f0104565	obj/kern/kernel.asm	/^f0104565:	c7 44 24 04 5a 00 00 	movl   $0x5a,0x4(%esp)$/;"	l
f010456c	obj/kern/kernel.asm	/^f010456c:	00 $/;"	l
f010456d	obj/kern/kernel.asm	/^f010456d:	c7 04 24 2c 5c 10 f0 	movl   $0xf0105c2c,(%esp)$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	e8 58 bb ff ff       	call   f01000d1 <_panic>$/;"	l
f0104579	obj/kern/kernel.asm	/^f0104579:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f010457f	obj/kern/kernel.asm	/^f010457f:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0104586	obj/kern/kernel.asm	/^f0104586:	00 $/;"	l
f0104587	obj/kern/kernel.asm	/^f0104587:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010458e	obj/kern/kernel.asm	/^f010458e:	00 $/;"	l
f010458f	obj/kern/kernel.asm	/^f010458f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104592	obj/kern/kernel.asm	/^f0104592:	e8 89 0f 00 00       	call   f0105520 <memset>$/;"	l
f0104597	obj/kern/kernel.asm	/^f0104597:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010459c	obj/kern/kernel.asm	/^f010459c:	89 d0                	mov    %edx,%eax$/;"	l
f010459e	obj/kern/kernel.asm	/^f010459e:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f01045a4	obj/kern/kernel.asm	/^f01045a4:	89 ec                	mov    %ebp,%esp$/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6:	5d                   	pop    %ebp$/;"	l
f01045a7	obj/kern/kernel.asm	/^f01045a7:	c3                   	ret    $/;"	l
f01045a8	obj/kern/kernel.asm	/^f01045a8 <sys_page_map>:$/;"	l
f01045a8	obj/kern/kernel.asm	/^f01045a8:	55                   	push   %ebp$/;"	l
f01045a9	obj/kern/kernel.asm	/^f01045a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01045ab	obj/kern/kernel.asm	/^f01045ab:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01045b1	obj/kern/kernel.asm	/^f01045b1:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01045b4	obj/kern/kernel.asm	/^f01045b4:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01045b7	obj/kern/kernel.asm	/^f01045b7:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01045ba	obj/kern/kernel.asm	/^f01045ba:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f01045bd	obj/kern/kernel.asm	/^f01045bd:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f01045c0	obj/kern/kernel.asm	/^f01045c0:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f01045c6	obj/kern/kernel.asm	/^f01045c6:	77 20                	ja     f01045e8 <sys_page_map+0x40>$/;"	l
f01045c8	obj/kern/kernel.asm	/^f01045c8:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	0f 95 c2             	setne  %dl$/;"	l
f01045d1	obj/kern/kernel.asm	/^f01045d1:	81 fe ff ff bf ee    	cmp    $0xeebfffff,%esi$/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7:	0f 97 c0             	seta   %al$/;"	l
f01045da	obj/kern/kernel.asm	/^f01045da:	09 d0                	or     %edx,%eax$/;"	l
f01045dc	obj/kern/kernel.asm	/^f01045dc:	a8 01                	test   $0x1,%al$/;"	l
f01045de	obj/kern/kernel.asm	/^f01045de:	75 08                	jne    f01045e8 <sys_page_map+0x40>$/;"	l
f01045e0	obj/kern/kernel.asm	/^f01045e0:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi$/;"	l
f01045e6	obj/kern/kernel.asm	/^f01045e6:	74 0a                	je     f01045f2 <sys_page_map+0x4a>$/;"	l
f01045e8	obj/kern/kernel.asm	/^f01045e8:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01045ed	obj/kern/kernel.asm	/^f01045ed:	e9 cd 00 00 00       	jmp    f01046bf <sys_page_map+0x117>$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	f7 c7 f8 f1 ff ff    	test   $0xfffff1f8,%edi$/;"	l
f01045f8	obj/kern/kernel.asm	/^f01045f8:	75 10                	jne    f010460a <sys_page_map+0x62>$/;"	l
f01045fa	obj/kern/kernel.asm	/^f01045fa:	f7 c7 01 00 00 00    	test   $0x1,%edi$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	74 08                	je     f010460a <sys_page_map+0x62>$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602:	f7 c7 04 00 00 00    	test   $0x4,%edi$/;"	l
f0104608	obj/kern/kernel.asm	/^f0104608:	75 0a                	jne    f0104614 <sys_page_map+0x6c>$/;"	l
f010460a	obj/kern/kernel.asm	/^f010460a:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f010460f	obj/kern/kernel.asm	/^f010460f:	e9 ab 00 00 00       	jmp    f01046bf <sys_page_map+0x117>$/;"	l
f0104614	obj/kern/kernel.asm	/^f0104614:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	00 $/;"	l
f010461c	obj/kern/kernel.asm	/^f010461c:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104623	obj/kern/kernel.asm	/^f0104623:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104626	obj/kern/kernel.asm	/^f0104626:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104629	obj/kern/kernel.asm	/^f0104629:	e8 ce eb ff ff       	call   f01031fc <envid2env>$/;"	l
f010462e	obj/kern/kernel.asm	/^f010462e:	ba fe ff ff ff       	mov    $0xfffffffe,%edx$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	85 c0                	test   %eax,%eax$/;"	l
f0104635	obj/kern/kernel.asm	/^f0104635:	0f 88 84 00 00 00    	js     f01046bf <sys_page_map+0x117>$/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642:	00 $/;"	l
f0104643	obj/kern/kernel.asm	/^f0104643:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0104646	obj/kern/kernel.asm	/^f0104646:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010464a	obj/kern/kernel.asm	/^f010464a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010464d	obj/kern/kernel.asm	/^f010464d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	e8 a7 eb ff ff       	call   f01031fc <envid2env>$/;"	l
f0104655	obj/kern/kernel.asm	/^f0104655:	ba fe ff ff ff       	mov    $0xfffffffe,%edx$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	85 c0                	test   %eax,%eax$/;"	l
f010465c	obj/kern/kernel.asm	/^f010465c:	78 61                	js     f01046bf <sys_page_map+0x117>$/;"	l
f010465e	obj/kern/kernel.asm	/^f010465e:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0104661	obj/kern/kernel.asm	/^f0104661:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104669	obj/kern/kernel.asm	/^f0104669:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010466c	obj/kern/kernel.asm	/^f010466c:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f010466f	obj/kern/kernel.asm	/^f010466f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	e8 dc da ff ff       	call   f0102153 <page_lookup>$/;"	l
f0104677	obj/kern/kernel.asm	/^f0104677:	89 c1                	mov    %eax,%ecx$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679:	85 c0                	test   %eax,%eax$/;"	l
f010467b	obj/kern/kernel.asm	/^f010467b:	74 08                	je     f0104685 <sys_page_map+0xdd>$/;"	l
f010467d	obj/kern/kernel.asm	/^f010467d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0104680	obj/kern/kernel.asm	/^f0104680:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0104683	obj/kern/kernel.asm	/^f0104683:	75 07                	jne    f010468c <sys_page_map+0xe4>$/;"	l
f0104685	obj/kern/kernel.asm	/^f0104685:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	eb 33                	jmp    f01046bf <sys_page_map+0x117>$/;"	l
f010468c	obj/kern/kernel.asm	/^f010468c:	f7 c7 02 00 00 00    	test   $0x2,%edi$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	74 0d                	je     f01046a1 <sys_page_map+0xf9>$/;"	l
f0104694	obj/kern/kernel.asm	/^f0104694:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0104699	obj/kern/kernel.asm	/^f0104699:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010469c	obj/kern/kernel.asm	/^f010469c:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	74 1e                	je     f01046bf <sys_page_map+0x117>$/;"	l
f01046a1	obj/kern/kernel.asm	/^f01046a1:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01046a5	obj/kern/kernel.asm	/^f01046a5:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01046a9	obj/kern/kernel.asm	/^f01046a9:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01046ad	obj/kern/kernel.asm	/^f01046ad:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01046b0	obj/kern/kernel.asm	/^f01046b0:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	e8 90 d9 ff ff       	call   f010204b <page_insert>$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	99                   	cltd   $/;"	l
f01046bc	obj/kern/kernel.asm	/^f01046bc:	83 e2 fc             	and    $0xfffffffc,%edx$/;"	l
f01046bf	obj/kern/kernel.asm	/^f01046bf:	89 d0                	mov    %edx,%eax$/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01046c4	obj/kern/kernel.asm	/^f01046c4:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01046c7	obj/kern/kernel.asm	/^f01046c7:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	89 ec                	mov    %ebp,%esp$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	5d                   	pop    %ebp$/;"	l
f01046cd	obj/kern/kernel.asm	/^f01046cd:	c3                   	ret    $/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce <sys_page_unmap>:$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	55                   	push   %ebp$/;"	l
f01046cf	obj/kern/kernel.asm	/^f01046cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	53                   	push   %ebx$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01046d5	obj/kern/kernel.asm	/^f01046d5:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01046d8	obj/kern/kernel.asm	/^f01046d8:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	77 08                	ja     f01046e8 <sys_page_unmap+0x1a>$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6:	74 07                	je     f01046ef <sys_page_unmap+0x21>$/;"	l
f01046e8	obj/kern/kernel.asm	/^f01046e8:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01046ed	obj/kern/kernel.asm	/^f01046ed:	eb 3a                	jmp    f0104729 <sys_page_unmap+0x5b>$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01046f6	obj/kern/kernel.asm	/^f01046f6:	00 $/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	8d 45 f8             	lea    -0x8(%ebp),%eax$/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104701	obj/kern/kernel.asm	/^f0104701:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	e8 f3 ea ff ff       	call   f01031fc <envid2env>$/;"	l
f0104709	obj/kern/kernel.asm	/^f0104709:	ba fe ff ff ff       	mov    $0xfffffffe,%edx$/;"	l
f010470e	obj/kern/kernel.asm	/^f010470e:	85 c0                	test   %eax,%eax$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	78 17                	js     f0104729 <sys_page_unmap+0x5b>$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104716	obj/kern/kernel.asm	/^f0104716:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f0104719	obj/kern/kernel.asm	/^f0104719:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f010471c	obj/kern/kernel.asm	/^f010471c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010471f	obj/kern/kernel.asm	/^f010471f:	e8 b8 da ff ff       	call   f01021dc <page_remove>$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104729	obj/kern/kernel.asm	/^f0104729:	89 d0                	mov    %edx,%eax$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	83 c4 14             	add    $0x14,%esp$/;"	l
f010472e	obj/kern/kernel.asm	/^f010472e:	5b                   	pop    %ebx$/;"	l
f010472f	obj/kern/kernel.asm	/^f010472f:	5d                   	pop    %ebp$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	c3                   	ret    $/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731 <sys_ipc_try_send>:$/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	55                   	push   %ebp$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732:	89 e5                	mov    %esp,%ebp$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	56                   	push   %esi$/;"	l
f0104735	obj/kern/kernel.asm	/^f0104735:	53                   	push   %ebx$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0104739	obj/kern/kernel.asm	/^f0104739:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0104746	obj/kern/kernel.asm	/^f0104746:	00 $/;"	l
f0104747	obj/kern/kernel.asm	/^f0104747:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	e8 a3 ea ff ff       	call   f01031fc <envid2env>$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	ba fe ff ff ff       	mov    $0xfffffffe,%edx$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	85 c0                	test   %eax,%eax$/;"	l
f0104760	obj/kern/kernel.asm	/^f0104760:	0f 88 f8 00 00 00    	js     f010485e <sys_ipc_try_send+0x12d>$/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	ba f9 ff ff ff       	mov    $0xfffffff9,%edx$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e:	83 78 68 00          	cmpl   $0x0,0x68(%eax)$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	0f 84 e6 00 00 00    	je     f010485e <sys_ipc_try_send+0x12d>$/;"	l
f0104778	obj/kern/kernel.asm	/^f0104778:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010477b	obj/kern/kernel.asm	/^f010477b:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)$/;"	l
f0104782	obj/kern/kernel.asm	/^f0104782:	85 db                	test   %ebx,%ebx$/;"	l
f0104784	obj/kern/kernel.asm	/^f0104784:	0f 84 9c 00 00 00    	je     f0104826 <sys_ipc_try_send+0xf5>$/;"	l
f010478a	obj/kern/kernel.asm	/^f010478a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010478d	obj/kern/kernel.asm	/^f010478d:	83 78 6c 00          	cmpl   $0x0,0x6c(%eax)$/;"	l
f0104791	obj/kern/kernel.asm	/^f0104791:	0f 84 8f 00 00 00    	je     f0104826 <sys_ipc_try_send+0xf5>$/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f010479d	obj/kern/kernel.asm	/^f010479d:	77 08                	ja     f01047a7 <sys_ipc_try_send+0x76>$/;"	l
f010479f	obj/kern/kernel.asm	/^f010479f:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	74 0a                	je     f01047b1 <sys_ipc_try_send+0x80>$/;"	l
f01047a7	obj/kern/kernel.asm	/^f01047a7:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01047ac	obj/kern/kernel.asm	/^f01047ac:	e9 ad 00 00 00       	jmp    f010485e <sys_ipc_try_send+0x12d>$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	f7 c6 04 00 00 00    	test   $0x4,%esi$/;"	l
f01047b7	obj/kern/kernel.asm	/^f01047b7:	74 10                	je     f01047c9 <sys_ipc_try_send+0x98>$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	74 08                	je     f01047c9 <sys_ipc_try_send+0x98>$/;"	l
f01047c1	obj/kern/kernel.asm	/^f01047c1:	f7 c6 f8 f1 ff ff    	test   $0xfffff1f8,%esi$/;"	l
f01047c7	obj/kern/kernel.asm	/^f01047c7:	74 0a                	je     f01047d3 <sys_ipc_try_send+0xa2>$/;"	l
f01047c9	obj/kern/kernel.asm	/^f01047c9:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01047ce	obj/kern/kernel.asm	/^f01047ce:	e9 8b 00 00 00       	jmp    f010485e <sys_ipc_try_send+0x12d>$/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da:	00 $/;"	l
f01047db	obj/kern/kernel.asm	/^f01047db:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01047df	obj/kern/kernel.asm	/^f01047df:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01047ea	obj/kern/kernel.asm	/^f01047ea:	e8 64 d9 ff ff       	call   f0102153 <page_lookup>$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	89 c1                	mov    %eax,%ecx$/;"	l
f01047f1	obj/kern/kernel.asm	/^f01047f1:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01047f6	obj/kern/kernel.asm	/^f01047f6:	85 c0                	test   %eax,%eax$/;"	l
f01047f8	obj/kern/kernel.asm	/^f01047f8:	74 64                	je     f010485e <sys_ipc_try_send+0x12d>$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01047fe	obj/kern/kernel.asm	/^f01047fe:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	8b 42 6c             	mov    0x6c(%edx),%eax$/;"	l
f0104804	obj/kern/kernel.asm	/^f0104804:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104808	obj/kern/kernel.asm	/^f0104808:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	8b 42 5c             	mov    0x5c(%edx),%eax$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104812	obj/kern/kernel.asm	/^f0104812:	e8 34 d8 ff ff       	call   f010204b <page_insert>$/;"	l
f0104817	obj/kern/kernel.asm	/^f0104817:	ba fc ff ff ff       	mov    $0xfffffffc,%edx$/;"	l
f010481c	obj/kern/kernel.asm	/^f010481c:	85 c0                	test   %eax,%eax$/;"	l
f010481e	obj/kern/kernel.asm	/^f010481e:	78 3e                	js     f010485e <sys_ipc_try_send+0x12d>$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104823	obj/kern/kernel.asm	/^f0104823:	89 70 78             	mov    %esi,0x78(%eax)$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104829	obj/kern/kernel.asm	/^f0104829:	c7 40 68 00 00 00 00 	movl   $0x0,0x68(%eax)$/;"	l
f0104830	obj/kern/kernel.asm	/^f0104830:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	8b 50 4c             	mov    0x4c(%eax),%edx$/;"	l
f0104838	obj/kern/kernel.asm	/^f0104838:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%eax)$/;"	l
f0104851	obj/kern/kernel.asm	/^f0104851:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104854	obj/kern/kernel.asm	/^f0104854:	83 78 78 00          	cmpl   $0x0,0x78(%eax)$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	0f 95 c0             	setne  %al$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	0f b6 d0             	movzbl %al,%edx$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	89 d0                	mov    %edx,%eax$/;"	l
f0104860	obj/kern/kernel.asm	/^f0104860:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104863	obj/kern/kernel.asm	/^f0104863:	5b                   	pop    %ebx$/;"	l
f0104864	obj/kern/kernel.asm	/^f0104864:	5e                   	pop    %esi$/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	5d                   	pop    %ebp$/;"	l
f0104866	obj/kern/kernel.asm	/^f0104866:	c3                   	ret    $/;"	l
f0104867	obj/kern/kernel.asm	/^f0104867 <sys_ipc_recv>:$/;"	l
f0104867	obj/kern/kernel.asm	/^f0104867:	55                   	push   %ebp$/;"	l
f0104868	obj/kern/kernel.asm	/^f0104868:	89 e5                	mov    %esp,%ebp$/;"	l
f010486a	obj/kern/kernel.asm	/^f010486a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010486d	obj/kern/kernel.asm	/^f010486d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870:	81 fa ff ff bf ee    	cmp    $0xeebfffff,%edx$/;"	l
f0104876	obj/kern/kernel.asm	/^f0104876:	77 08                	ja     f0104880 <sys_ipc_recv+0x19>$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f010487e	obj/kern/kernel.asm	/^f010487e:	75 31                	jne    f01048b1 <sys_ipc_recv+0x4a>$/;"	l
f0104880	obj/kern/kernel.asm	/^f0104880:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f0104885	obj/kern/kernel.asm	/^f0104885:	c7 40 68 01 00 00 00 	movl   $0x1,0x68(%eax)$/;"	l
f010488c	obj/kern/kernel.asm	/^f010488c:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	89 50 6c             	mov    %edx,0x6c(%eax)$/;"	l
f0104894	obj/kern/kernel.asm	/^f0104894:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f0104899	obj/kern/kernel.asm	/^f0104899:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f01048a0	obj/kern/kernel.asm	/^f01048a0:	a1 24 36 21 f0       	mov    0xf0213624,%eax$/;"	l
f01048a5	obj/kern/kernel.asm	/^f01048a5:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	e8 ef f8 ff ff       	call   f01041a0 <sched_yield>$/;"	l
f01048b1	obj/kern/kernel.asm	/^f01048b1:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01048b6	obj/kern/kernel.asm	/^f01048b6:	c9                   	leave  $/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	c3                   	ret    $/;"	l
f01048b8	obj/kern/kernel.asm	/^f01048b8 <syscall>:$/;"	l
f01048b8	obj/kern/kernel.asm	/^f01048b8:	55                   	push   %ebp$/;"	l
f01048b9	obj/kern/kernel.asm	/^f01048b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01048cd	obj/kern/kernel.asm	/^f01048cd:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01048d0	obj/kern/kernel.asm	/^f01048d0:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f01048d3	obj/kern/kernel.asm	/^f01048d3:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f01048d6	obj/kern/kernel.asm	/^f01048d6:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	83 fa 0d             	cmp    $0xd,%edx$/;"	l
f01048de	obj/kern/kernel.asm	/^f01048de:	0f 87 dc 00 00 00    	ja     f01049c0 <syscall+0x108>$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	ff 24 95 f0 6b 10 f0 	jmp    *-0xfef9410(,%edx,4)$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01048ef	obj/kern/kernel.asm	/^f01048ef:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2:	e8 71 f9 ff ff       	call   f0104268 <sys_cputs>$/;"	l
f01048f7	obj/kern/kernel.asm	/^f01048f7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01048fc	obj/kern/kernel.asm	/^f01048fc:	e9 bf 00 00 00       	jmp    f01049c0 <syscall+0x108>$/;"	l
f0104901	obj/kern/kernel.asm	/^f0104901:	e8 af f9 ff ff       	call   f01042b5 <sys_cgetc>$/;"	l
f0104906	obj/kern/kernel.asm	/^f0104906:	e9 b5 00 00 00       	jmp    f01049c0 <syscall+0x108>$/;"	l
f010490b	obj/kern/kernel.asm	/^f010490b:	e8 b6 f9 ff ff       	call   f01042c6 <sys_getenvid>$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	e9 ab 00 00 00       	jmp    f01049c0 <syscall+0x108>$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104918	obj/kern/kernel.asm	/^f0104918:	e8 b6 f9 ff ff       	call   f01042d3 <sys_env_destroy>$/;"	l
f010491d	obj/kern/kernel.asm	/^f010491d:	e9 9e 00 00 00       	jmp    f01049c0 <syscall+0x108>$/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922:	e8 e6 f9 ff ff       	call   f010430d <sys_yield>$/;"	l
f0104927	obj/kern/kernel.asm	/^f0104927:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	e9 8f 00 00 00       	jmp    f01049c0 <syscall+0x108>$/;"	l
f0104931	obj/kern/kernel.asm	/^f0104931:	e8 e2 f9 ff ff       	call   f0104318 <sys_exofork>$/;"	l
f0104936	obj/kern/kernel.asm	/^f0104936:	e9 85 00 00 00       	jmp    f01049c0 <syscall+0x108>$/;"	l
f010493b	obj/kern/kernel.asm	/^f010493b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010493f	obj/kern/kernel.asm	/^f010493f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104942	obj/kern/kernel.asm	/^f0104942:	e8 31 fa ff ff       	call   f0104378 <sys_env_set_status>$/;"	l
f0104947	obj/kern/kernel.asm	/^f0104947:	eb 77                	jmp    f01049c0 <syscall+0x108>$/;"	l
f0104949	obj/kern/kernel.asm	/^f0104949:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0104951	obj/kern/kernel.asm	/^f0104951:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104954	obj/kern/kernel.asm	/^f0104954:	e8 1a fb ff ff       	call   f0104473 <sys_page_alloc>$/;"	l
f0104959	obj/kern/kernel.asm	/^f0104959:	eb 65                	jmp    f01049c0 <syscall+0x108>$/;"	l
f010495b	obj/kern/kernel.asm	/^f010495b:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104971	obj/kern/kernel.asm	/^f0104971:	e8 32 fc ff ff       	call   f01045a8 <sys_page_map>$/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	eb 48                	jmp    f01049c0 <syscall+0x108>$/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010497f	obj/kern/kernel.asm	/^f010497f:	e8 4a fd ff ff       	call   f01046ce <sys_page_unmap>$/;"	l
f0104984	obj/kern/kernel.asm	/^f0104984:	eb 3a                	jmp    f01049c0 <syscall+0x108>$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010498a	obj/kern/kernel.asm	/^f010498a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	e8 a6 fa ff ff       	call   f0104438 <sys_env_set_pgfault_upcall>$/;"	l
f0104992	obj/kern/kernel.asm	/^f0104992:	eb 2c                	jmp    f01049c0 <syscall+0x108>$/;"	l
f0104994	obj/kern/kernel.asm	/^f0104994:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010499c	obj/kern/kernel.asm	/^f010499c:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	e8 89 fd ff ff       	call   f0104731 <sys_ipc_try_send>$/;"	l
f01049a8	obj/kern/kernel.asm	/^f01049a8:	eb 16                	jmp    f01049c0 <syscall+0x108>$/;"	l
f01049aa	obj/kern/kernel.asm	/^f01049aa:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	e8 b5 fe ff ff       	call   f0104867 <sys_ipc_recv>$/;"	l
f01049b2	obj/kern/kernel.asm	/^f01049b2:	eb 0c                	jmp    f01049c0 <syscall+0x108>$/;"	l
f01049b4	obj/kern/kernel.asm	/^f01049b4:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01049b8	obj/kern/kernel.asm	/^f01049b8:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01049bb	obj/kern/kernel.asm	/^f01049bb:	e8 05 fa ff ff       	call   f01043c5 <sys_env_set_trapframe>$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01049c9	obj/kern/kernel.asm	/^f01049c9:	89 ec                	mov    %ebp,%esp$/;"	l
f01049cb	obj/kern/kernel.asm	/^f01049cb:	5d                   	pop    %ebp$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	c3                   	ret    $/;"	l
f01049cd	obj/kern/kernel.asm	/^f01049cd:	00 00                	add    %al,(%eax)$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0 <stab_binsearch>:$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	55                   	push   %ebp$/;"	l
f01049d1	obj/kern/kernel.asm	/^f01049d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	57                   	push   %edi$/;"	l
f01049d4	obj/kern/kernel.asm	/^f01049d4:	56                   	push   %esi$/;"	l
f01049d5	obj/kern/kernel.asm	/^f01049d5:	53                   	push   %ebx$/;"	l
f01049d6	obj/kern/kernel.asm	/^f01049d6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01049d9	obj/kern/kernel.asm	/^f01049d9:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01049dc	obj/kern/kernel.asm	/^f01049dc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01049df	obj/kern/kernel.asm	/^f01049df:	8b 08                	mov    (%eax),%ecx$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01049e4	obj/kern/kernel.asm	/^f01049e4:	8b 12                	mov    (%edx),%edx$/;"	l
f01049e6	obj/kern/kernel.asm	/^f01049e6:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f01049e9	obj/kern/kernel.asm	/^f01049e9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f01049f0	obj/kern/kernel.asm	/^f01049f0:	39 d1                	cmp    %edx,%ecx$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	0f 8f 8e 00 00 00    	jg     f0104a86 <stab_binsearch+0xb6>$/;"	l
f01049f8	obj/kern/kernel.asm	/^f01049f8:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f01049fb	obj/kern/kernel.asm	/^f01049fb:	8d 04 19             	lea    (%ecx,%ebx,1),%eax$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	89 c2                	mov    %eax,%edx$/;"	l
f0104a00	obj/kern/kernel.asm	/^f0104a00:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
f0104a03	obj/kern/kernel.asm	/^f0104a03:	01 d0                	add    %edx,%eax$/;"	l
f0104a05	obj/kern/kernel.asm	/^f0104a05:	89 c3                	mov    %eax,%ebx$/;"	l
f0104a07	obj/kern/kernel.asm	/^f0104a07:	d1 fb                	sar    %ebx$/;"	d
f0104a09	obj/kern/kernel.asm	/^f0104a09:	89 da                	mov    %ebx,%edx$/;"	l
f0104a0b	obj/kern/kernel.asm	/^f0104a0b:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0104a0d	obj/kern/kernel.asm	/^f0104a0d:	7c 25                	jl     f0104a34 <stab_binsearch+0x64>$/;"	l
f0104a0f	obj/kern/kernel.asm	/^f0104a0f:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0104a12	obj/kern/kernel.asm	/^f0104a12:	0f b6 44 87 04       	movzbl 0x4(%edi,%eax,4),%eax$/;"	l
f0104a17	obj/kern/kernel.asm	/^f0104a17:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a:	74 14                	je     f0104a30 <stab_binsearch+0x60>$/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0104a1f	obj/kern/kernel.asm	/^f0104a1f:	39 ca                	cmp    %ecx,%edx$/;"	l
f0104a21	obj/kern/kernel.asm	/^f0104a21:	7c 11                	jl     f0104a34 <stab_binsearch+0x64>$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	8d 04 52             	lea    (%edx,%edx,2),%eax$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	0f b6 44 87 04       	movzbl 0x4(%edi,%eax,4),%eax$/;"	l
f0104a2b	obj/kern/kernel.asm	/^f0104a2b:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	75 ec                	jne    f0104a1c <stab_binsearch+0x4c>$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30:	39 ca                	cmp    %ecx,%edx$/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32:	7d 05                	jge    f0104a39 <stab_binsearch+0x69>$/;"	l
f0104a34	obj/kern/kernel.asm	/^f0104a34:	8d 4b 01             	lea    0x1(%ebx),%ecx$/;"	l
f0104a37	obj/kern/kernel.asm	/^f0104a37:	eb 44                	jmp    f0104a7d <stab_binsearch+0xad>$/;"	l
f0104a39	obj/kern/kernel.asm	/^f0104a39:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	8d 34 52             	lea    (%edx,%edx,2),%esi$/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	89 75 ec             	mov    %esi,-0x14(%ebp)$/;"	l
f0104a46	obj/kern/kernel.asm	/^f0104a46:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0104a49	obj/kern/kernel.asm	/^f0104a49:	39 44 b7 08          	cmp    %eax,0x8(%edi,%esi,4)$/;"	l
f0104a4d	obj/kern/kernel.asm	/^f0104a4d:	73 0a                	jae    f0104a59 <stab_binsearch+0x89>$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52:	89 16                	mov    %edx,(%esi)$/;"	l
f0104a54	obj/kern/kernel.asm	/^f0104a54:	8d 4b 01             	lea    0x1(%ebx),%ecx$/;"	l
f0104a57	obj/kern/kernel.asm	/^f0104a57:	eb 24                	jmp    f0104a7d <stab_binsearch+0xad>$/;"	l
f0104a59	obj/kern/kernel.asm	/^f0104a59:	8d 04 52             	lea    (%edx,%edx,2),%eax$/;"	l
f0104a5c	obj/kern/kernel.asm	/^f0104a5c:	8b 5d 18             	mov    0x18(%ebp),%ebx$/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	39 5c 87 08          	cmp    %ebx,0x8(%edi,%eax,4)$/;"	l
f0104a63	obj/kern/kernel.asm	/^f0104a63:	76 0d                	jbe    f0104a72 <stab_binsearch+0xa2>$/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	8d 42 ff             	lea    -0x1(%edx),%eax$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0104a6b	obj/kern/kernel.asm	/^f0104a6b:	89 06                	mov    %eax,(%esi)$/;"	l
f0104a6d	obj/kern/kernel.asm	/^f0104a6d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0104a70	obj/kern/kernel.asm	/^f0104a70:	eb 0b                	jmp    f0104a7d <stab_binsearch+0xad>$/;"	l
f0104a72	obj/kern/kernel.asm	/^f0104a72:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	89 10                	mov    %edx,(%eax)$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	89 d1                	mov    %edx,%ecx$/;"	l
f0104a79	obj/kern/kernel.asm	/^f0104a79:	83 45 18 01          	addl   $0x1,0x18(%ebp)$/;"	l
f0104a7d	obj/kern/kernel.asm	/^f0104a7d:	3b 4d e8             	cmp    -0x18(%ebp),%ecx$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	0f 8e 72 ff ff ff    	jle    f01049f8 <stab_binsearch+0x28>$/;"	l
f0104a86	obj/kern/kernel.asm	/^f0104a86:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0104a8a	obj/kern/kernel.asm	/^f0104a8a:	75 0f                	jne    f0104a9b <stab_binsearch+0xcb>$/;"	l
f0104a8c	obj/kern/kernel.asm	/^f0104a8c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104a8f	obj/kern/kernel.asm	/^f0104a8f:	8b 02                	mov    (%edx),%eax$/;"	l
f0104a91	obj/kern/kernel.asm	/^f0104a91:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104a97	obj/kern/kernel.asm	/^f0104a97:	89 03                	mov    %eax,(%ebx)$/;"	l
f0104a99	obj/kern/kernel.asm	/^f0104a99:	eb 35                	jmp    f0104ad0 <stab_binsearch+0x100>$/;"	l
f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	8b 0e                	mov    (%esi),%ecx$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	39 08                	cmp    %ecx,(%eax)$/;"	l
f0104aa5	obj/kern/kernel.asm	/^f0104aa5:	7d 24                	jge    f0104acb <stab_binsearch+0xfb>$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	8d 04 49             	lea    (%ecx,%ecx,2),%eax$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	0f b6 44 87 04       	movzbl 0x4(%edi,%eax,4),%eax$/;"	l
f0104aaf	obj/kern/kernel.asm	/^f0104aaf:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	74 17                	je     f0104acb <stab_binsearch+0xfb>$/;"	l
f0104ab4	obj/kern/kernel.asm	/^f0104ab4:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0104ab7	obj/kern/kernel.asm	/^f0104ab7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104aba	obj/kern/kernel.asm	/^f0104aba:	39 0a                	cmp    %ecx,(%edx)$/;"	l
f0104abc	obj/kern/kernel.asm	/^f0104abc:	7d 0d                	jge    f0104acb <stab_binsearch+0xfb>$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	8d 04 49             	lea    (%ecx,%ecx,2),%eax$/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	0f b6 44 87 04       	movzbl 0x4(%edi,%eax,4),%eax$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	75 e9                	jne    f0104ab4 <stab_binsearch+0xe4>$/;"	l
f0104acb	obj/kern/kernel.asm	/^f0104acb:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104ace	obj/kern/kernel.asm	/^f0104ace:	89 0b                	mov    %ecx,(%ebx)$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0104ad3	obj/kern/kernel.asm	/^f0104ad3:	5b                   	pop    %ebx$/;"	l
f0104ad4	obj/kern/kernel.asm	/^f0104ad4:	5e                   	pop    %esi$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	5f                   	pop    %edi$/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	5d                   	pop    %ebp$/;"	l
f0104ad7	obj/kern/kernel.asm	/^f0104ad7:	c3                   	ret    $/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8 <debuginfo_eip>:$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	55                   	push   %ebp$/;"	l
f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	89 e5                	mov    %esp,%ebp$/;"	l
f0104adb	obj/kern/kernel.asm	/^f0104adb:	57                   	push   %edi$/;"	l
f0104adc	obj/kern/kernel.asm	/^f0104adc:	56                   	push   %esi$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	53                   	push   %ebx$/;"	l
f0104ade	obj/kern/kernel.asm	/^f0104ade:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0104ae1	obj/kern/kernel.asm	/^f0104ae1:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104ae7	obj/kern/kernel.asm	/^f0104ae7:	c7 06 28 6c 10 f0    	movl   $0xf0106c28,(%esi)$/;"	l
f0104aed	obj/kern/kernel.asm	/^f0104aed:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f0104af4	obj/kern/kernel.asm	/^f0104af4:	c7 46 08 28 6c 10 f0 	movl   $0xf0106c28,0x8(%esi)$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	c7 46 0c 09 00 00 00 	movl   $0x9,0xc(%esi)$/;"	l
f0104b02	obj/kern/kernel.asm	/^f0104b02:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f0104b0c	obj/kern/kernel.asm	/^f0104b0c:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f0104b12	obj/kern/kernel.asm	/^f0104b12:	76 1a                	jbe    f0104b2e <debuginfo_eip+0x56>$/;"	l
f0104b14	obj/kern/kernel.asm	/^f0104b14:	bb 24 6f 10 f0       	mov    $0xf0106f24,%ebx$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	b8 40 19 11 f0       	mov    $0xf0111940,%eax$/;"	l
f0104b1e	obj/kern/kernel.asm	/^f0104b1e:	c7 45 d8 41 19 11 f0 	movl   $0xf0111941,-0x28(%ebp)$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	c7 45 d4 ee 4d 11 f0 	movl   $0xf0114dee,-0x2c(%ebp)$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	eb 1d                	jmp    f0104b4b <debuginfo_eip+0x73>$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	8b 1d 00 00 20 00    	mov    0x200000,%ebx$/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34:	a1 04 00 20 00       	mov    0x200004,%eax$/;"	l
f0104b39	obj/kern/kernel.asm	/^f0104b39:	8b 15 08 00 20 00    	mov    0x200008,%edx$/;"	l
f0104b3f	obj/kern/kernel.asm	/^f0104b3f:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f0104b48	obj/kern/kernel.asm	/^f0104b48:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0104b4b	obj/kern/kernel.asm	/^f0104b4b:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	39 55 d4             	cmp    %edx,-0x2c(%ebp)$/;"	l
f0104b51	obj/kern/kernel.asm	/^f0104b51:	76 09                	jbe    f0104b5c <debuginfo_eip+0x84>$/;"	l
f0104b53	obj/kern/kernel.asm	/^f0104b53:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0104b56	obj/kern/kernel.asm	/^f0104b56:	80 7a ff 00          	cmpb   $0x0,-0x1(%edx)$/;"	l
f0104b5a	obj/kern/kernel.asm	/^f0104b5a:	74 0a                	je     f0104b66 <debuginfo_eip+0x8e>$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	e9 ab 01 00 00       	jmp    f0104d11 <debuginfo_eip+0x239>$/;"	l
f0104b66	obj/kern/kernel.asm	/^f0104b66:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f0104b6d	obj/kern/kernel.asm	/^f0104b6d:	29 d8                	sub    %ebx,%eax$/;"	l
f0104b6f	obj/kern/kernel.asm	/^f0104b6f:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104b7b	obj/kern/kernel.asm	/^f0104b7b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104b7e	obj/kern/kernel.asm	/^f0104b7e:	89 7c 24 10          	mov    %edi,0x10(%esp)$/;"	l
f0104b82	obj/kern/kernel.asm	/^f0104b82:	c7 44 24 0c 64 00 00 	movl   $0x64,0xc(%esp)$/;"	l
f0104b89	obj/kern/kernel.asm	/^f0104b89:	00 $/;"	l
f0104b8a	obj/kern/kernel.asm	/^f0104b8a:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0104b8d	obj/kern/kernel.asm	/^f0104b8d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104b91	obj/kern/kernel.asm	/^f0104b91:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b98	obj/kern/kernel.asm	/^f0104b98:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104b9b	obj/kern/kernel.asm	/^f0104b9b:	e8 30 fe ff ff       	call   f01049d0 <stab_binsearch>$/;"	l
f0104ba0	obj/kern/kernel.asm	/^f0104ba0:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0104ba5	obj/kern/kernel.asm	/^f0104ba5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0104ba9	obj/kern/kernel.asm	/^f0104ba9:	0f 84 62 01 00 00    	je     f0104d11 <debuginfo_eip+0x239>$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104bb5	obj/kern/kernel.asm	/^f0104bb5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0104bbb	obj/kern/kernel.asm	/^f0104bbb:	89 7c 24 10          	mov    %edi,0x10(%esp)$/;"	l
f0104bbf	obj/kern/kernel.asm	/^f0104bbf:	c7 44 24 0c 24 00 00 	movl   $0x24,0xc(%esp)$/;"	l
f0104bc6	obj/kern/kernel.asm	/^f0104bc6:	00 $/;"	l
f0104bc7	obj/kern/kernel.asm	/^f0104bc7:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104bd5	obj/kern/kernel.asm	/^f0104bd5:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104bd8	obj/kern/kernel.asm	/^f0104bd8:	e8 f3 fd ff ff       	call   f01049d0 <stab_binsearch>$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104be0	obj/kern/kernel.asm	/^f0104be0:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f0104be3	obj/kern/kernel.asm	/^f0104be3:	7f 38                	jg     f0104c1d <debuginfo_eip+0x145>$/;"	l
f0104be5	obj/kern/kernel.asm	/^f0104be5:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0104bef	obj/kern/kernel.asm	/^f0104bef:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	2b 45 d8             	sub    -0x28(%ebp),%eax$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	39 04 1a             	cmp    %eax,(%edx,%ebx,1)$/;"	l
f0104bf8	obj/kern/kernel.asm	/^f0104bf8:	73 09                	jae    f0104c03 <debuginfo_eip+0x12b>$/;"	l
f0104bfa	obj/kern/kernel.asm	/^f0104bfa:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	03 04 1a             	add    (%edx,%ebx,1),%eax$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	89 46 08             	mov    %eax,0x8(%esi)$/;"	l
f0104c03	obj/kern/kernel.asm	/^f0104c03:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104c06	obj/kern/kernel.asm	/^f0104c06:	8d 04 52             	lea    (%edx,%edx,2),%eax$/;"	l
f0104c09	obj/kern/kernel.asm	/^f0104c09:	8b 44 83 08          	mov    0x8(%ebx,%eax,4),%eax$/;"	l
f0104c0d	obj/kern/kernel.asm	/^f0104c0d:	89 46 10             	mov    %eax,0x10(%esi)$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	29 c7                	sub    %eax,%edi$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104c1b	obj/kern/kernel.asm	/^f0104c1b:	eb 0f                	jmp    f0104c2c <debuginfo_eip+0x154>$/;"	l
f0104c1d	obj/kern/kernel.asm	/^f0104c1d:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104c23	obj/kern/kernel.asm	/^f0104c23:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104c29	obj/kern/kernel.asm	/^f0104c29:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0104c33	obj/kern/kernel.asm	/^f0104c33:	00 $/;"	l
f0104c34	obj/kern/kernel.asm	/^f0104c34:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0104c37	obj/kern/kernel.asm	/^f0104c37:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	e8 c4 08 00 00       	call   f0105503 <strfind>$/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f:	2b 46 08             	sub    0x8(%esi),%eax$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	89 46 0c             	mov    %eax,0xc(%esi)$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	89 7c 24 10          	mov    %edi,0x10(%esp)$/;"	l
f0104c49	obj/kern/kernel.asm	/^f0104c49:	c7 44 24 0c 44 00 00 	movl   $0x44,0xc(%esp)$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	00 $/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104c58	obj/kern/kernel.asm	/^f0104c58:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104c5b	obj/kern/kernel.asm	/^f0104c5b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c5f	obj/kern/kernel.asm	/^f0104c5f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	e8 69 fd ff ff       	call   f01049d0 <stab_binsearch>$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	0f 8f 99 00 00 00    	jg     f0104d11 <debuginfo_eip+0x239>$/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	0f b7 44 83 06       	movzwl 0x6(%ebx,%eax,4),%eax$/;"	l
f0104c83	obj/kern/kernel.asm	/^f0104c83:	89 46 04             	mov    %eax,0x4(%esi)$/;"	l
f0104c86	obj/kern/kernel.asm	/^f0104c86:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0104c89	obj/kern/kernel.asm	/^f0104c89:	eb 04                	jmp    f0104c8f <debuginfo_eip+0x1b7>$/;"	l
f0104c8b	obj/kern/kernel.asm	/^f0104c8b:	83 6d dc 01          	subl   $0x1,-0x24(%ebp)$/;"	l
f0104c8f	obj/kern/kernel.asm	/^f0104c8f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104c92	obj/kern/kernel.asm	/^f0104c92:	39 d0                	cmp    %edx,%eax$/;"	l
f0104c94	obj/kern/kernel.asm	/^f0104c94:	7c 1b                	jl     f0104cb1 <debuginfo_eip+0x1d9>$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104c9c	obj/kern/kernel.asm	/^f0104c9c:	80 7c 18 04 84       	cmpb   $0x84,0x4(%eax,%ebx,1)$/;"	l
f0104ca1	obj/kern/kernel.asm	/^f0104ca1:	74 0e                	je     f0104cb1 <debuginfo_eip+0x1d9>$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	80 7c 18 04 64       	cmpb   $0x64,0x4(%eax,%ebx,1)$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	75 e1                	jne    f0104c8b <debuginfo_eip+0x1b3>$/;"	l
f0104caa	obj/kern/kernel.asm	/^f0104caa:	83 7c 18 08 00       	cmpl   $0x0,0x8(%eax,%ebx,1)$/;"	l
f0104caf	obj/kern/kernel.asm	/^f0104caf:	74 da                	je     f0104c8b <debuginfo_eip+0x1b3>$/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	7c 1d                	jl     f0104cd6 <debuginfo_eip+0x1fe>$/;"	l
f0104cb9	obj/kern/kernel.asm	/^f0104cb9:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0104cc3	obj/kern/kernel.asm	/^f0104cc3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104cc6	obj/kern/kernel.asm	/^f0104cc6:	2b 45 d8             	sub    -0x28(%ebp),%eax$/;"	l
f0104cc9	obj/kern/kernel.asm	/^f0104cc9:	39 04 1a             	cmp    %eax,(%edx,%ebx,1)$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	73 08                	jae    f0104cd6 <debuginfo_eip+0x1fe>$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0104cd1	obj/kern/kernel.asm	/^f0104cd1:	03 04 1a             	add    (%edx,%ebx,1),%eax$/;"	l
f0104cd4	obj/kern/kernel.asm	/^f0104cd4:	89 06                	mov    %eax,(%esi)$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f0104cdd	obj/kern/kernel.asm	/^f0104cdd:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)$/;"	l
f0104ce1	obj/kern/kernel.asm	/^f0104ce1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104ce7	obj/kern/kernel.asm	/^f0104ce7:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104ced	obj/kern/kernel.asm	/^f0104ced:	80 7c 93 04 a0       	cmpb   $0xa0,0x4(%ebx,%edx,4)$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	3e 75 17             	jne,pt f0104d0c <debuginfo_eip+0x234>$/;"	l
f0104cf5	obj/kern/kernel.asm	/^f0104cf5:	83 46 14 01          	addl   $0x1,0x14(%esi)$/;"	l
f0104cf9	obj/kern/kernel.asm	/^f0104cf9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104cff	obj/kern/kernel.asm	/^f0104cff:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104d02	obj/kern/kernel.asm	/^f0104d02:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104d05	obj/kern/kernel.asm	/^f0104d05:	80 7c 93 04 a0       	cmpb   $0xa0,0x4(%ebx,%edx,4)$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	74 e9                	je     f0104cf5 <debuginfo_eip+0x21d>$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104d11	obj/kern/kernel.asm	/^f0104d11:	89 d0                	mov    %edx,%eax$/;"	l
f0104d13	obj/kern/kernel.asm	/^f0104d13:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	5b                   	pop    %ebx$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	5e                   	pop    %esi$/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18:	5f                   	pop    %edi$/;"	l
f0104d19	obj/kern/kernel.asm	/^f0104d19:	5d                   	pop    %ebp$/;"	l
f0104d1a	obj/kern/kernel.asm	/^f0104d1a:	c3                   	ret    $/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c <printnum>:$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	55                   	push   %ebp$/;"	l
f0104d1d	obj/kern/kernel.asm	/^f0104d1d:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d1f	obj/kern/kernel.asm	/^f0104d1f:	57                   	push   %edi$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	56                   	push   %esi$/;"	l
f0104d21	obj/kern/kernel.asm	/^f0104d21:	53                   	push   %ebx$/;"	l
f0104d22	obj/kern/kernel.asm	/^f0104d22:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	8b 5d 1c             	mov    0x1c(%ebp),%ebx$/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b:	8b 7d 20             	mov    0x20(%ebp),%edi$/;"	l
f0104d2e	obj/kern/kernel.asm	/^f0104d2e:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0104d31	obj/kern/kernel.asm	/^f0104d31:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104d36	obj/kern/kernel.asm	/^f0104d36:	3b 55 14             	cmp    0x14(%ebp),%edx$/;"	l
f0104d39	obj/kern/kernel.asm	/^f0104d39:	77 50                	ja     f0104d8b <printnum+0x6f>$/;"	l
f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	72 05                	jb     f0104d42 <printnum+0x26>$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
f0104d40	obj/kern/kernel.asm	/^f0104d40:	77 49                	ja     f0104d8b <printnum+0x6f>$/;"	l
f0104d42	obj/kern/kernel.asm	/^f0104d42:	89 7c 24 18          	mov    %edi,0x18(%esp)$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0104d49	obj/kern/kernel.asm	/^f0104d49:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0104d50	obj/kern/kernel.asm	/^f0104d50:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104d54	obj/kern/kernel.asm	/^f0104d54:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0104d5f	obj/kern/kernel.asm	/^f0104d5f:	00 $/;"	l
f0104d60	obj/kern/kernel.asm	/^f0104d60:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104d63	obj/kern/kernel.asm	/^f0104d63:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0104d66	obj/kern/kernel.asm	/^f0104d66:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104d6d	obj/kern/kernel.asm	/^f0104d6d:	e8 a6 09 00 00       	call   f0105718 <__udivdi3>$/;"	l
f0104d72	obj/kern/kernel.asm	/^f0104d72:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104d81	obj/kern/kernel.asm	/^f0104d81:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	e8 93 ff ff ff       	call   f0104d1c <printnum>$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	eb 18                	jmp    f0104da3 <printnum+0x87>$/;"	l
f0104d8b	obj/kern/kernel.asm	/^f0104d8b:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104d8e	obj/kern/kernel.asm	/^f0104d8e:	85 db                	test   %ebx,%ebx$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	7e 11                	jle    f0104da3 <printnum+0x87>$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0104d99	obj/kern/kernel.asm	/^f0104d99:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104d9c	obj/kern/kernel.asm	/^f0104d9c:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104d9f	obj/kern/kernel.asm	/^f0104d9f:	85 db                	test   %ebx,%ebx$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	7f ef                	jg     f0104d92 <printnum+0x76>$/;"	l
f0104da3	obj/kern/kernel.asm	/^f0104da3:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0104dae	obj/kern/kernel.asm	/^f0104dae:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0104db9	obj/kern/kernel.asm	/^f0104db9:	00 $/;"	l
f0104dba	obj/kern/kernel.asm	/^f0104dba:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104dbd	obj/kern/kernel.asm	/^f0104dbd:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104dc3	obj/kern/kernel.asm	/^f0104dc3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104dc7	obj/kern/kernel.asm	/^f0104dc7:	e8 6c 0a 00 00       	call   f0105838 <__umoddi3>$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0:	0f be 80 2c 6d 10 f0 	movsbl -0xfef92d4(%eax),%eax$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104ddd	obj/kern/kernel.asm	/^f0104ddd:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	5b                   	pop    %ebx$/;"	l
f0104de1	obj/kern/kernel.asm	/^f0104de1:	5e                   	pop    %esi$/;"	l
f0104de2	obj/kern/kernel.asm	/^f0104de2:	5f                   	pop    %edi$/;"	l
f0104de3	obj/kern/kernel.asm	/^f0104de3:	5d                   	pop    %ebp$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	c3                   	ret    $/;"	l
f0104de5	obj/kern/kernel.asm	/^f0104de5 <getuint>:$/;"	l
f0104de5	obj/kern/kernel.asm	/^f0104de5:	55                   	push   %ebp$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	89 e5                	mov    %esp,%ebp$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104deb	obj/kern/kernel.asm	/^f0104deb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104df1	obj/kern/kernel.asm	/^f0104df1:	7e 0f                	jle    f0104e02 <getuint+0x1d>$/;"	l
f0104df3	obj/kern/kernel.asm	/^f0104df3:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104df5	obj/kern/kernel.asm	/^f0104df5:	83 c0 08             	add    $0x8,%eax$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	89 01                	mov    %eax,(%ecx)$/;"	l
f0104dfa	obj/kern/kernel.asm	/^f0104dfa:	8b 50 fc             	mov    -0x4(%eax),%edx$/;"	l
f0104dfd	obj/kern/kernel.asm	/^f0104dfd:	8b 40 f8             	mov    -0x8(%eax),%eax$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	eb 24                	jmp    f0104e26 <getuint+0x41>$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	85 c0                	test   %eax,%eax$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	74 11                	je     f0104e17 <getuint+0x32>$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	83 c0 04             	add    $0x4,%eax$/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	89 01                	mov    %eax,(%ecx)$/;"	l
f0104e0d	obj/kern/kernel.asm	/^f0104e0d:	8b 40 fc             	mov    -0x4(%eax),%eax$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104e15	obj/kern/kernel.asm	/^f0104e15:	eb 0f                	jmp    f0104e26 <getuint+0x41>$/;"	l
f0104e17	obj/kern/kernel.asm	/^f0104e17:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	83 c0 04             	add    $0x4,%eax$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	89 01                	mov    %eax,(%ecx)$/;"	l
f0104e1e	obj/kern/kernel.asm	/^f0104e1e:	8b 40 fc             	mov    -0x4(%eax),%eax$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	5d                   	pop    %ebp$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	c3                   	ret    $/;"	l
f0104e28	obj/kern/kernel.asm	/^f0104e28 <getint>:$/;"	l
f0104e28	obj/kern/kernel.asm	/^f0104e28:	55                   	push   %ebp$/;"	l
f0104e29	obj/kern/kernel.asm	/^f0104e29:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e2b	obj/kern/kernel.asm	/^f0104e2b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104e31	obj/kern/kernel.asm	/^f0104e31:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34:	7e 0f                	jle    f0104e45 <getint+0x1d>$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	8b 02                	mov    (%edx),%eax$/;"	l
f0104e38	obj/kern/kernel.asm	/^f0104e38:	83 c0 08             	add    $0x8,%eax$/;"	l
f0104e3b	obj/kern/kernel.asm	/^f0104e3b:	89 02                	mov    %eax,(%edx)$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	8b 50 fc             	mov    -0x4(%eax),%edx$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	8b 40 f8             	mov    -0x8(%eax),%eax$/;"	l
f0104e43	obj/kern/kernel.asm	/^f0104e43:	eb 1c                	jmp    f0104e61 <getint+0x39>$/;"	l
f0104e45	obj/kern/kernel.asm	/^f0104e45:	85 c0                	test   %eax,%eax$/;"	l
f0104e47	obj/kern/kernel.asm	/^f0104e47:	74 0d                	je     f0104e56 <getint+0x2e>$/;"	l
f0104e49	obj/kern/kernel.asm	/^f0104e49:	8b 02                	mov    (%edx),%eax$/;"	l
f0104e4b	obj/kern/kernel.asm	/^f0104e4b:	83 c0 04             	add    $0x4,%eax$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	89 02                	mov    %eax,(%edx)$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	8b 40 fc             	mov    -0x4(%eax),%eax$/;"	l
f0104e53	obj/kern/kernel.asm	/^f0104e53:	99                   	cltd   $/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	eb 0b                	jmp    f0104e61 <getint+0x39>$/;"	l
f0104e56	obj/kern/kernel.asm	/^f0104e56:	8b 02                	mov    (%edx),%eax$/;"	l
f0104e58	obj/kern/kernel.asm	/^f0104e58:	83 c0 04             	add    $0x4,%eax$/;"	l
f0104e5b	obj/kern/kernel.asm	/^f0104e5b:	89 02                	mov    %eax,(%edx)$/;"	l
f0104e5d	obj/kern/kernel.asm	/^f0104e5d:	8b 40 fc             	mov    -0x4(%eax),%eax$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	99                   	cltd   $/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	5d                   	pop    %ebp$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	c3                   	ret    $/;"	l
f0104e63	obj/kern/kernel.asm	/^f0104e63 <vprintfmt>:$/;"	l
f0104e63	obj/kern/kernel.asm	/^f0104e63:	55                   	push   %ebp$/;"	l
f0104e64	obj/kern/kernel.asm	/^f0104e64:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66:	57                   	push   %edi$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	56                   	push   %esi$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68:	53                   	push   %ebx$/;"	l
f0104e69	obj/kern/kernel.asm	/^f0104e69:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104e6c	obj/kern/kernel.asm	/^f0104e6c:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f0104e72	obj/kern/kernel.asm	/^f0104e72:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104e75	obj/kern/kernel.asm	/^f0104e75:	83 fa 25             	cmp    $0x25,%edx$/;"	l
f0104e78	obj/kern/kernel.asm	/^f0104e78:	74 20                	je     f0104e9a <vprintfmt+0x37>$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	85 d2                	test   %edx,%edx$/;"	l
f0104e7c	obj/kern/kernel.asm	/^f0104e7c:	0f 84 48 03 00 00    	je     f01051ca <vprintfmt+0x367>$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104e85	obj/kern/kernel.asm	/^f0104e85:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104e89	obj/kern/kernel.asm	/^f0104e89:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0104e8c	obj/kern/kernel.asm	/^f0104e8c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104e8f	obj/kern/kernel.asm	/^f0104e8f:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f0104e92	obj/kern/kernel.asm	/^f0104e92:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104e95	obj/kern/kernel.asm	/^f0104e95:	83 fa 25             	cmp    $0x25,%edx$/;"	l
f0104e98	obj/kern/kernel.asm	/^f0104e98:	75 e0                	jne    f0104e7a <vprintfmt+0x17>$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	c6 45 eb 20          	movb   $0x20,-0x15(%ebp)$/;"	l
f0104e9e	obj/kern/kernel.asm	/^f0104e9e:	c7 45 f0 ff ff ff ff 	movl   $0xffffffff,-0x10(%ebp)$/;"	l
f0104ea5	obj/kern/kernel.asm	/^f0104ea5:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104eaf	obj/kern/kernel.asm	/^f0104eaf:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f0104eb9	obj/kern/kernel.asm	/^f0104eb9:	8d 42 dd             	lea    -0x23(%edx),%eax$/;"	l
f0104ebc	obj/kern/kernel.asm	/^f0104ebc:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	83 f8 55             	cmp    $0x55,%eax$/;"	l
f0104ec2	obj/kern/kernel.asm	/^f0104ec2:	0f 87 d5 02 00 00    	ja     f010519d <vprintfmt+0x33a>$/;"	l
f0104ec8	obj/kern/kernel.asm	/^f0104ec8:	ff 24 85 bc 6d 10 f0 	jmp    *-0xfef9244(,%eax,4)$/;"	l
f0104ecf	obj/kern/kernel.asm	/^f0104ecf:	c6 45 eb 2d          	movb   $0x2d,-0x15(%ebp)$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	eb e1                	jmp    f0104eb6 <vprintfmt+0x53>$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	c6 45 eb 30          	movb   $0x30,-0x15(%ebp)$/;"	l
f0104ed9	obj/kern/kernel.asm	/^f0104ed9:	eb db                	jmp    f0104eb6 <vprintfmt+0x53>$/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	8d 04 b6             	lea    (%esi,%esi,4),%eax$/;"	l
f0104ee3	obj/kern/kernel.asm	/^f0104ee3:	8d 74 42 d0          	lea    -0x30(%edx,%eax,2),%esi$/;"	l
f0104ee7	obj/kern/kernel.asm	/^f0104ee7:	0f be 13             	movsbl (%ebx),%edx$/;"	l
f0104eea	obj/kern/kernel.asm	/^f0104eea:	8d 42 d0             	lea    -0x30(%edx),%eax$/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0104ef0	obj/kern/kernel.asm	/^f0104ef0:	77 29                	ja     f0104f1b <vprintfmt+0xb8>$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	eb e9                	jmp    f0104ee0 <vprintfmt+0x7d>$/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	83 45 14 04          	addl   $0x4,0x14(%ebp)$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104efe	obj/kern/kernel.asm	/^f0104efe:	8b 70 fc             	mov    -0x4(%eax),%esi$/;"	l
f0104f01	obj/kern/kernel.asm	/^f0104f01:	eb 18                	jmp    f0104f1b <vprintfmt+0xb8>$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0104f07	obj/kern/kernel.asm	/^f0104f07:	79 ad                	jns    f0104eb6 <vprintfmt+0x53>$/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	eb a4                	jmp    f0104eb6 <vprintfmt+0x53>$/;"	l
f0104f12	obj/kern/kernel.asm	/^f0104f12:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)$/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	eb 9b                	jmp    f0104eb6 <vprintfmt+0x53>$/;"	l
f0104f1b	obj/kern/kernel.asm	/^f0104f1b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0104f1f	obj/kern/kernel.asm	/^f0104f1f:	79 95                	jns    f0104eb6 <vprintfmt+0x53>$/;"	l
f0104f21	obj/kern/kernel.asm	/^f0104f21:	89 75 f0             	mov    %esi,-0x10(%ebp)$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f0104f29	obj/kern/kernel.asm	/^f0104f29:	eb 8b                	jmp    f0104eb6 <vprintfmt+0x53>$/;"	l
f0104f2b	obj/kern/kernel.asm	/^f0104f2b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e:	eb 86                	jmp    f0104eb6 <vprintfmt+0x53>$/;"	l
f0104f30	obj/kern/kernel.asm	/^f0104f30:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104f33	obj/kern/kernel.asm	/^f0104f33:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	83 45 14 04          	addl   $0x4,0x14(%ebp)$/;"	l
f0104f3b	obj/kern/kernel.asm	/^f0104f3b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104f3e	obj/kern/kernel.asm	/^f0104f3e:	8b 40 fc             	mov    -0x4(%eax),%eax$/;"	l
f0104f41	obj/kern/kernel.asm	/^f0104f41:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104f44	obj/kern/kernel.asm	/^f0104f44:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104f47	obj/kern/kernel.asm	/^f0104f47:	e9 23 ff ff ff       	jmp    f0104e6f <vprintfmt+0xc>$/;"	l
f0104f4c	obj/kern/kernel.asm	/^f0104f4c:	83 45 14 04          	addl   $0x4,0x14(%ebp)$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104f53	obj/kern/kernel.asm	/^f0104f53:	8b 50 fc             	mov    -0x4(%eax),%edx$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	89 d0                	mov    %edx,%eax$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0104f5b	obj/kern/kernel.asm	/^f0104f5b:	31 c2                	xor    %eax,%edx$/;"	l
f0104f5d	obj/kern/kernel.asm	/^f0104f5d:	29 c2                	sub    %eax,%edx$/;"	l
f0104f5f	obj/kern/kernel.asm	/^f0104f5f:	83 fa 0e             	cmp    $0xe,%edx$/;"	l
f0104f62	obj/kern/kernel.asm	/^f0104f62:	7f 0c                	jg     f0104f70 <vprintfmt+0x10d>$/;"	l
f0104f64	obj/kern/kernel.asm	/^f0104f64:	8b 3c 95 80 6d 10 f0 	mov    -0xfef9280(,%edx,4),%edi$/;"	l
f0104f6b	obj/kern/kernel.asm	/^f0104f6b:	85 ff                	test   %edi,%edi$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	3e 75 23             	jne,pt f0104f93 <vprintfmt+0x130>$/;"	l
f0104f70	obj/kern/kernel.asm	/^f0104f70:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74:	c7 44 24 08 3d 6d 10 	movl   $0xf0106d3d,0x8(%esp)$/;"	l
f0104f7b	obj/kern/kernel.asm	/^f0104f7b:	f0 $/;"	l
f0104f7c	obj/kern/kernel.asm	/^f0104f7c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104f86	obj/kern/kernel.asm	/^f0104f86:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104f89	obj/kern/kernel.asm	/^f0104f89:	e8 44 02 00 00       	call   f01051d2 <printfmt>$/;"	l
f0104f8e	obj/kern/kernel.asm	/^f0104f8e:	e9 dc fe ff ff       	jmp    f0104e6f <vprintfmt+0xc>$/;"	l
f0104f93	obj/kern/kernel.asm	/^f0104f93:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104f97	obj/kern/kernel.asm	/^f0104f97:	c7 44 24 08 c2 65 10 	movl   $0xf01065c2,0x8(%esp)$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	f0 $/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104fa2	obj/kern/kernel.asm	/^f0104fa2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104fa9	obj/kern/kernel.asm	/^f0104fa9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104fac	obj/kern/kernel.asm	/^f0104fac:	e8 21 02 00 00       	call   f01051d2 <printfmt>$/;"	l
f0104fb1	obj/kern/kernel.asm	/^f0104fb1:	e9 b9 fe ff ff       	jmp    f0104e6f <vprintfmt+0xc>$/;"	l
f0104fb6	obj/kern/kernel.asm	/^f0104fb6:	83 45 14 04          	addl   $0x4,0x14(%ebp)$/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	8b 78 fc             	mov    -0x4(%eax),%edi$/;"	l
f0104fc0	obj/kern/kernel.asm	/^f0104fc0:	85 ff                	test   %edi,%edi$/;"	l
f0104fc2	obj/kern/kernel.asm	/^f0104fc2:	3e 75 05             	jne,pt f0104fca <vprintfmt+0x167>$/;"	l
f0104fc5	obj/kern/kernel.asm	/^f0104fc5:	bf 46 6d 10 f0       	mov    $0xf0106d46,%edi$/;"	l
f0104fca	obj/kern/kernel.asm	/^f0104fca:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	0f 9f c0             	setg   %al$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	80 7d eb 2d          	cmpb   $0x2d,-0x15(%ebp)$/;"	l
f0104fd5	obj/kern/kernel.asm	/^f0104fd5:	0f 95 c2             	setne  %dl$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	85 d0                	test   %edx,%eax$/;"	l
f0104fdd	obj/kern/kernel.asm	/^f0104fdd:	3e 74 36             	je,pt  f0105016 <vprintfmt+0x1b3>$/;"	l
f0104fe0	obj/kern/kernel.asm	/^f0104fe0:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104fe4	obj/kern/kernel.asm	/^f0104fe4:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0104fe7	obj/kern/kernel.asm	/^f0104fe7:	e8 b9 03 00 00       	call   f01053a5 <strnlen>$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	29 45 f0             	sub    %eax,-0x10(%ebp)$/;"	l
f0104fef	obj/kern/kernel.asm	/^f0104fef:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0104ff3	obj/kern/kernel.asm	/^f0104ff3:	7e 21                	jle    f0105016 <vprintfmt+0x1b3>$/;"	l
f0104ff5	obj/kern/kernel.asm	/^f0104ff5:	0f be 45 eb          	movsbl -0x15(%ebp),%eax$/;"	l
f0104ff9	obj/kern/kernel.asm	/^f0104ff9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104ffc	obj/kern/kernel.asm	/^f0104ffc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104fff	obj/kern/kernel.asm	/^f0104fff:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105003	obj/kern/kernel.asm	/^f0105003:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105006	obj/kern/kernel.asm	/^f0105006:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105009	obj/kern/kernel.asm	/^f0105009:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010500c	obj/kern/kernel.asm	/^f010500c:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	7f e6                	jg     f0104ffc <vprintfmt+0x199>$/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016:	0f be 17             	movsbl (%edi),%edx$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	83 c7 01             	add    $0x1,%edi$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	85 d2                	test   %edx,%edx$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	74 50                	je     f0105070 <vprintfmt+0x20d>$/;"	l
f0105020	obj/kern/kernel.asm	/^f0105020:	85 f6                	test   %esi,%esi$/;"	l
f0105022	obj/kern/kernel.asm	/^f0105022:	78 05                	js     f0105029 <vprintfmt+0x1c6>$/;"	l
f0105024	obj/kern/kernel.asm	/^f0105024:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105027	obj/kern/kernel.asm	/^f0105027:	78 47                	js     f0105070 <vprintfmt+0x20d>$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f010502d	obj/kern/kernel.asm	/^f010502d:	74 1c                	je     f010504b <vprintfmt+0x1e8>$/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	8d 42 e0             	lea    -0x20(%edx),%eax$/;"	l
f0105032	obj/kern/kernel.asm	/^f0105032:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f0105035	obj/kern/kernel.asm	/^f0105035:	3e 76 13             	jbe,pt f010504b <vprintfmt+0x1e8>$/;"	l
f0105038	obj/kern/kernel.asm	/^f0105038:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010503b	obj/kern/kernel.asm	/^f010503b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010503f	obj/kern/kernel.asm	/^f010503f:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0105046	obj/kern/kernel.asm	/^f0105046:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105049	obj/kern/kernel.asm	/^f0105049:	eb 0d                	jmp    f0105058 <vprintfmt+0x1f5>$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010504e	obj/kern/kernel.asm	/^f010504e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105052	obj/kern/kernel.asm	/^f0105052:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105055	obj/kern/kernel.asm	/^f0105055:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
f010505c	obj/kern/kernel.asm	/^f010505c:	0f be 17             	movsbl (%edi),%edx$/;"	l
f010505f	obj/kern/kernel.asm	/^f010505f:	83 c7 01             	add    $0x1,%edi$/;"	l
f0105062	obj/kern/kernel.asm	/^f0105062:	85 d2                	test   %edx,%edx$/;"	l
f0105064	obj/kern/kernel.asm	/^f0105064:	74 0a                	je     f0105070 <vprintfmt+0x20d>$/;"	l
f0105066	obj/kern/kernel.asm	/^f0105066:	85 f6                	test   %esi,%esi$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	2e 78 be             	js,pn  f0105029 <vprintfmt+0x1c6>$/;"	l
f010506b	obj/kern/kernel.asm	/^f010506b:	83 ee 01             	sub    $0x1,%esi$/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e:	79 b9                	jns    f0105029 <vprintfmt+0x1c6>$/;"	l
f0105070	obj/kern/kernel.asm	/^f0105070:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0105074	obj/kern/kernel.asm	/^f0105074:	2e 0f 8e f4 fd ff ff 	jle,pn f0104e6f <vprintfmt+0xc>$/;"	l
f010507b	obj/kern/kernel.asm	/^f010507b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010507e	obj/kern/kernel.asm	/^f010507e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105082	obj/kern/kernel.asm	/^f0105082:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0105089	obj/kern/kernel.asm	/^f0105089:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
f0105090	obj/kern/kernel.asm	/^f0105090:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0105094	obj/kern/kernel.asm	/^f0105094:	7f e5                	jg     f010507b <vprintfmt+0x218>$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096:	e9 d4 fd ff ff       	jmp    f0104e6f <vprintfmt+0xc>$/;"	l
f010509b	obj/kern/kernel.asm	/^f010509b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010509f	obj/kern/kernel.asm	/^f010509f:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	e8 7e fd ff ff       	call   f0104e28 <getint>$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	89 c6                	mov    %eax,%esi$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	89 d7                	mov    %edx,%edi$/;"	l
f01050ae	obj/kern/kernel.asm	/^f01050ae:	85 d2                	test   %edx,%edx$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	3e 79 18             	jns,pt f01050cb <vprintfmt+0x268>$/;"	l
f01050b3	obj/kern/kernel.asm	/^f01050b3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01050ba	obj/kern/kernel.asm	/^f01050ba:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	f7 de                	neg    %esi$/;"	l
f01050c6	obj/kern/kernel.asm	/^f01050c6:	83 d7 00             	adc    $0x0,%edi$/;"	l
f01050c9	obj/kern/kernel.asm	/^f01050c9:	f7 df                	neg    %edi$/;"	l
f01050cb	obj/kern/kernel.asm	/^f01050cb:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	e9 84 00 00 00       	jmp    f0105159 <vprintfmt+0x2f6>$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01050d9	obj/kern/kernel.asm	/^f01050d9:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01050dc	obj/kern/kernel.asm	/^f01050dc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050df	obj/kern/kernel.asm	/^f01050df:	e8 01 fd ff ff       	call   f0104de5 <getuint>$/;"	l
f01050e4	obj/kern/kernel.asm	/^f01050e4:	89 c6                	mov    %eax,%esi$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	89 d7                	mov    %edx,%edi$/;"	l
f01050e8	obj/kern/kernel.asm	/^f01050e8:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
f01050ed	obj/kern/kernel.asm	/^f01050ed:	eb 6a                	jmp    f0105159 <vprintfmt+0x2f6>$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01050f3	obj/kern/kernel.asm	/^f01050f3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01050f6	obj/kern/kernel.asm	/^f01050f6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	e8 e7 fc ff ff       	call   f0104de5 <getuint>$/;"	l
f01050fe	obj/kern/kernel.asm	/^f01050fe:	89 c6                	mov    %eax,%esi$/;"	l
f0105100	obj/kern/kernel.asm	/^f0105100:	89 d7                	mov    %edx,%edi$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f0105107	obj/kern/kernel.asm	/^f0105107:	eb 50                	jmp    f0105159 <vprintfmt+0x2f6>$/;"	l
f0105109	obj/kern/kernel.asm	/^f0105109:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105110	obj/kern/kernel.asm	/^f0105110:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0105117	obj/kern/kernel.asm	/^f0105117:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010511a	obj/kern/kernel.asm	/^f010511a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010511d	obj/kern/kernel.asm	/^f010511d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0105128	obj/kern/kernel.asm	/^f0105128:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010512b	obj/kern/kernel.asm	/^f010512b:	83 45 14 04          	addl   $0x4,0x14(%ebp)$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132:	8b 70 fc             	mov    -0x4(%eax),%esi$/;"	l
f0105135	obj/kern/kernel.asm	/^f0105135:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f010513f	obj/kern/kernel.asm	/^f010513f:	eb 18                	jmp    f0105159 <vprintfmt+0x2f6>$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105145	obj/kern/kernel.asm	/^f0105145:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010514b	obj/kern/kernel.asm	/^f010514b:	e8 95 fc ff ff       	call   f0104de5 <getuint>$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	89 c6                	mov    %eax,%esi$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152:	89 d7                	mov    %edx,%edi$/;"	l
f0105154	obj/kern/kernel.asm	/^f0105154:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f0105159	obj/kern/kernel.asm	/^f0105159:	0f be 45 eb          	movsbl -0x15(%ebp),%eax$/;"	l
f010515d	obj/kern/kernel.asm	/^f010515d:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0105161	obj/kern/kernel.asm	/^f0105161:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105164	obj/kern/kernel.asm	/^f0105164:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010517b	obj/kern/kernel.asm	/^f010517b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105181	obj/kern/kernel.asm	/^f0105181:	e8 96 fb ff ff       	call   f0104d1c <printnum>$/;"	l
f0105186	obj/kern/kernel.asm	/^f0105186:	e9 e4 fc ff ff       	jmp    f0104e6f <vprintfmt+0xc>$/;"	l
f010518b	obj/kern/kernel.asm	/^f010518b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105192	obj/kern/kernel.asm	/^f0105192:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105195	obj/kern/kernel.asm	/^f0105195:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105198	obj/kern/kernel.asm	/^f0105198:	e9 d2 fc ff ff       	jmp    f0104e6f <vprintfmt+0xc>$/;"	l
f010519d	obj/kern/kernel.asm	/^f010519d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01051a4	obj/kern/kernel.asm	/^f01051a4:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f01051ab	obj/kern/kernel.asm	/^f01051ab:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01051ae	obj/kern/kernel.asm	/^f01051ae:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f01051b5	obj/kern/kernel.asm	/^f01051b5:	2e 0f 84 b3 fc ff ff 	je,pn  f0104e6f <vprintfmt+0xc>$/;"	l
f01051bc	obj/kern/kernel.asm	/^f01051bc:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01051bf	obj/kern/kernel.asm	/^f01051bf:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f01051c3	obj/kern/kernel.asm	/^f01051c3:	75 f7                	jne    f01051bc <vprintfmt+0x359>$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	e9 a5 fc ff ff       	jmp    f0104e6f <vprintfmt+0xc>$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01051cd	obj/kern/kernel.asm	/^f01051cd:	5b                   	pop    %ebx$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	5e                   	pop    %esi$/;"	l
f01051cf	obj/kern/kernel.asm	/^f01051cf:	5f                   	pop    %edi$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	5d                   	pop    %ebp$/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	c3                   	ret    $/;"	l
f01051d2	obj/kern/kernel.asm	/^f01051d2 <printfmt>:$/;"	l
f01051d2	obj/kern/kernel.asm	/^f01051d2:	55                   	push   %ebp$/;"	l
f01051d3	obj/kern/kernel.asm	/^f01051d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01051d5	obj/kern/kernel.asm	/^f01051d5:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01051db	obj/kern/kernel.asm	/^f01051db:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01051df	obj/kern/kernel.asm	/^f01051df:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01051e6	obj/kern/kernel.asm	/^f01051e6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01051e9	obj/kern/kernel.asm	/^f01051e9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01051f3	obj/kern/kernel.asm	/^f01051f3:	e8 6b fc ff ff       	call   f0104e63 <vprintfmt>$/;"	l
f01051f8	obj/kern/kernel.asm	/^f01051f8:	c9                   	leave  $/;"	l
f01051f9	obj/kern/kernel.asm	/^f01051f9:	c3                   	ret    $/;"	l
f01051fa	obj/kern/kernel.asm	/^f01051fa <sprintputch>:$/;"	l
f01051fa	obj/kern/kernel.asm	/^f01051fa:	55                   	push   %ebp$/;"	l
f01051fb	obj/kern/kernel.asm	/^f01051fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01051fd	obj/kern/kernel.asm	/^f01051fd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	83 42 08 01          	addl   $0x1,0x8(%edx)$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	3b 4a 04             	cmp    0x4(%edx),%ecx$/;"	l
f0105209	obj/kern/kernel.asm	/^f0105209:	73 08                	jae    f0105213 <sprintputch+0x19>$/;"	l
f010520b	obj/kern/kernel.asm	/^f010520b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010520e	obj/kern/kernel.asm	/^f010520e:	88 01                	mov    %al,(%ecx)$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	83 02 01             	addl   $0x1,(%edx)$/;"	l
f0105213	obj/kern/kernel.asm	/^f0105213:	5d                   	pop    %ebp$/;"	l
f0105214	obj/kern/kernel.asm	/^f0105214:	c3                   	ret    $/;"	l
f0105215	obj/kern/kernel.asm	/^f0105215 <vsnprintf>:$/;"	l
f0105215	obj/kern/kernel.asm	/^f0105215:	55                   	push   %ebp$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	89 e5                	mov    %esp,%ebp$/;"	l
f0105218	obj/kern/kernel.asm	/^f0105218:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010521b	obj/kern/kernel.asm	/^f010521b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010521e	obj/kern/kernel.asm	/^f010521e:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105221	obj/kern/kernel.asm	/^f0105221:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f0105224	obj/kern/kernel.asm	/^f0105224:	8d 44 0a ff          	lea    -0x1(%edx,%ecx,1),%eax$/;"	l
f0105228	obj/kern/kernel.asm	/^f0105228:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010522b	obj/kern/kernel.asm	/^f010522b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0105232	obj/kern/kernel.asm	/^f0105232:	85 d2                	test   %edx,%edx$/;"	l
f0105234	obj/kern/kernel.asm	/^f0105234:	0f 94 c2             	sete   %dl$/;"	l
f0105237	obj/kern/kernel.asm	/^f0105237:	85 c9                	test   %ecx,%ecx$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	0f 9e c0             	setle  %al$/;"	l
f010523c	obj/kern/kernel.asm	/^f010523c:	09 d0                	or     %edx,%eax$/;"	l
f010523e	obj/kern/kernel.asm	/^f010523e:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105243	obj/kern/kernel.asm	/^f0105243:	a8 01                	test   $0x1,%al$/;"	l
f0105245	obj/kern/kernel.asm	/^f0105245:	75 2a                	jne    f0105271 <vsnprintf+0x5c>$/;"	l
f0105247	obj/kern/kernel.asm	/^f0105247:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010524a	obj/kern/kernel.asm	/^f010524a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105255	obj/kern/kernel.asm	/^f0105255:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010525c	obj/kern/kernel.asm	/^f010525c:	c7 04 24 fa 51 10 f0 	movl   $0xf01051fa,(%esp)$/;"	l
f0105263	obj/kern/kernel.asm	/^f0105263:	e8 fb fb ff ff       	call   f0104e63 <vprintfmt>$/;"	l
f0105268	obj/kern/kernel.asm	/^f0105268:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010526b	obj/kern/kernel.asm	/^f010526b:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f010526e	obj/kern/kernel.asm	/^f010526e:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0105271	obj/kern/kernel.asm	/^f0105271:	89 d0                	mov    %edx,%eax$/;"	l
f0105273	obj/kern/kernel.asm	/^f0105273:	c9                   	leave  $/;"	l
f0105274	obj/kern/kernel.asm	/^f0105274:	c3                   	ret    $/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275 <snprintf>:$/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275:	55                   	push   %ebp$/;"	l
f0105276	obj/kern/kernel.asm	/^f0105276:	89 e5                	mov    %esp,%ebp$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010527b	obj/kern/kernel.asm	/^f010527b:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105285	obj/kern/kernel.asm	/^f0105285:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105293	obj/kern/kernel.asm	/^f0105293:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	e8 7a ff ff ff       	call   f0105215 <vsnprintf>$/;"	l
f010529b	obj/kern/kernel.asm	/^f010529b:	c9                   	leave  $/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	c3                   	ret    $/;"	l
f010529d	obj/kern/kernel.asm	/^f010529d:	00 00                	add    %al,(%eax)$/;"	l
f01052a0	obj/kern/kernel.asm	/^f01052a0 <readline>:$/;"	l
f01052a0	obj/kern/kernel.asm	/^f01052a0:	55                   	push   %ebp$/;"	l
f01052a1	obj/kern/kernel.asm	/^f01052a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01052a3	obj/kern/kernel.asm	/^f01052a3:	57                   	push   %edi$/;"	l
f01052a4	obj/kern/kernel.asm	/^f01052a4:	56                   	push   %esi$/;"	l
f01052a5	obj/kern/kernel.asm	/^f01052a5:	53                   	push   %ebx$/;"	l
f01052a6	obj/kern/kernel.asm	/^f01052a6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01052a9	obj/kern/kernel.asm	/^f01052a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01052ac	obj/kern/kernel.asm	/^f01052ac:	85 c0                	test   %eax,%eax$/;"	l
f01052ae	obj/kern/kernel.asm	/^f01052ae:	74 10                	je     f01052c0 <readline+0x20>$/;"	l
f01052b0	obj/kern/kernel.asm	/^f01052b0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01052b4	obj/kern/kernel.asm	/^f01052b4:	c7 04 24 c2 65 10 f0 	movl   $0xf01065c2,(%esp)$/;"	l
f01052bb	obj/kern/kernel.asm	/^f01052bb:	e8 4a e8 ff ff       	call   f0103b0a <cprintf>$/;"	l
f01052c0	obj/kern/kernel.asm	/^f01052c0:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01052cc	obj/kern/kernel.asm	/^f01052cc:	e8 08 b4 ff ff       	call   f01006d9 <iscons>$/;"	l
f01052d1	obj/kern/kernel.asm	/^f01052d1:	89 c7                	mov    %eax,%edi$/;"	l
f01052d3	obj/kern/kernel.asm	/^f01052d3:	e8 f0 b3 ff ff       	call   f01006c8 <getchar>$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	89 c3                	mov    %eax,%ebx$/;"	l
f01052da	obj/kern/kernel.asm	/^f01052da:	85 c0                	test   %eax,%eax$/;"	l
f01052dc	obj/kern/kernel.asm	/^f01052dc:	3e 79 1f             	jns,pt f01052fe <readline+0x5e>$/;"	l
f01052df	obj/kern/kernel.asm	/^f01052df:	83 f8 f8             	cmp    $0xfffffff8,%eax$/;"	l
f01052e2	obj/kern/kernel.asm	/^f01052e2:	74 10                	je     f01052f4 <readline+0x54>$/;"	l
f01052e4	obj/kern/kernel.asm	/^f01052e4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	c7 04 24 14 6f 10 f0 	movl   $0xf0106f14,(%esp)$/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	e8 16 e8 ff ff       	call   f0103b0a <cprintf>$/;"	l
f01052f4	obj/kern/kernel.asm	/^f01052f4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01052f9	obj/kern/kernel.asm	/^f01052f9:	e9 81 00 00 00       	jmp    f010537f <readline+0xdf>$/;"	l
f01052fe	obj/kern/kernel.asm	/^f01052fe:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f0105301	obj/kern/kernel.asm	/^f0105301:	0f 9f c0             	setg   %al$/;"	l
f0105304	obj/kern/kernel.asm	/^f0105304:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f010530a	obj/kern/kernel.asm	/^f010530a:	0f 9e c2             	setle  %dl$/;"	l
f010530d	obj/kern/kernel.asm	/^f010530d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105310	obj/kern/kernel.asm	/^f0105310:	85 d0                	test   %edx,%eax$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	74 18                	je     f010532c <readline+0x8c>$/;"	l
f0105314	obj/kern/kernel.asm	/^f0105314:	85 ff                	test   %edi,%edi$/;"	l
f0105316	obj/kern/kernel.asm	/^f0105316:	3e 74 08             	je,pt  f0105321 <readline+0x81>$/;"	l
f0105319	obj/kern/kernel.asm	/^f0105319:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	e8 94 b3 ff ff       	call   f01006b5 <cputchar>$/;"	l
f0105321	obj/kern/kernel.asm	/^f0105321:	88 9e c0 3e 21 f0    	mov    %bl,-0xfdec140(%esi)$/;"	l
f0105327	obj/kern/kernel.asm	/^f0105327:	83 c6 01             	add    $0x1,%esi$/;"	l
f010532a	obj/kern/kernel.asm	/^f010532a:	eb a7                	jmp    f01052d3 <readline+0x33>$/;"	l
f010532c	obj/kern/kernel.asm	/^f010532c:	83 fb 08             	cmp    $0x8,%ebx$/;"	l
f010532f	obj/kern/kernel.asm	/^f010532f:	0f 94 c0             	sete   %al$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	85 f6                	test   %esi,%esi$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	0f 9f c2             	setg   %dl$/;"	l
f0105337	obj/kern/kernel.asm	/^f0105337:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010533a	obj/kern/kernel.asm	/^f010533a:	85 d0                	test   %edx,%eax$/;"	l
f010533c	obj/kern/kernel.asm	/^f010533c:	74 12                	je     f0105350 <readline+0xb0>$/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e:	85 ff                	test   %edi,%edi$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	3e 74 08             	je,pt  f010534b <readline+0xab>$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105346	obj/kern/kernel.asm	/^f0105346:	e8 6a b3 ff ff       	call   f01006b5 <cputchar>$/;"	l
f010534b	obj/kern/kernel.asm	/^f010534b:	83 ee 01             	sub    $0x1,%esi$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	eb 83                	jmp    f01052d3 <readline+0x33>$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	0f 94 c2             	sete   %dl$/;"	l
f0105356	obj/kern/kernel.asm	/^f0105356:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0105359	obj/kern/kernel.asm	/^f0105359:	0f 94 c0             	sete   %al$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	09 d0                	or     %edx,%eax$/;"	l
f010535e	obj/kern/kernel.asm	/^f010535e:	a8 01                	test   $0x1,%al$/;"	l
f0105360	obj/kern/kernel.asm	/^f0105360:	0f 84 6d ff ff ff    	je     f01052d3 <readline+0x33>$/;"	l
f0105366	obj/kern/kernel.asm	/^f0105366:	85 ff                	test   %edi,%edi$/;"	l
f0105368	obj/kern/kernel.asm	/^f0105368:	3e 74 08             	je,pt  f0105373 <readline+0xd3>$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010536e	obj/kern/kernel.asm	/^f010536e:	e8 42 b3 ff ff       	call   f01006b5 <cputchar>$/;"	l
f0105373	obj/kern/kernel.asm	/^f0105373:	c6 86 c0 3e 21 f0 00 	movb   $0x0,-0xfdec140(%esi)$/;"	l
f010537a	obj/kern/kernel.asm	/^f010537a:	b8 c0 3e 21 f0       	mov    $0xf0213ec0,%eax$/;"	l
f010537f	obj/kern/kernel.asm	/^f010537f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	5b                   	pop    %ebx$/;"	l
f0105383	obj/kern/kernel.asm	/^f0105383:	5e                   	pop    %esi$/;"	l
f0105384	obj/kern/kernel.asm	/^f0105384:	5f                   	pop    %edi$/;"	l
f0105385	obj/kern/kernel.asm	/^f0105385:	5d                   	pop    %ebp$/;"	l
f0105386	obj/kern/kernel.asm	/^f0105386:	c3                   	ret    $/;"	l
f0105388	obj/kern/kernel.asm	/^f0105388 <strlen>:$/;"	l
f0105388	obj/kern/kernel.asm	/^f0105388:	55                   	push   %ebp$/;"	l
f0105389	obj/kern/kernel.asm	/^f0105389:	89 e5                	mov    %esp,%ebp$/;"	l
f010538b	obj/kern/kernel.asm	/^f010538b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f0105396	obj/kern/kernel.asm	/^f0105396:	74 0b                	je     f01053a3 <strlen+0x1b>$/;"	l
f0105398	obj/kern/kernel.asm	/^f0105398:	83 c0 01             	add    $0x1,%eax$/;"	l
f010539b	obj/kern/kernel.asm	/^f010539b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010539e	obj/kern/kernel.asm	/^f010539e:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f01053a1	obj/kern/kernel.asm	/^f01053a1:	75 f5                	jne    f0105398 <strlen+0x10>$/;"	l
f01053a3	obj/kern/kernel.asm	/^f01053a3:	5d                   	pop    %ebp$/;"	l
f01053a4	obj/kern/kernel.asm	/^f01053a4:	c3                   	ret    $/;"	l
f01053a5	obj/kern/kernel.asm	/^f01053a5 <strnlen>:$/;"	l
f01053a5	obj/kern/kernel.asm	/^f01053a5:	55                   	push   %ebp$/;"	l
f01053a6	obj/kern/kernel.asm	/^f01053a6:	89 e5                	mov    %esp,%ebp$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01053ab	obj/kern/kernel.asm	/^f01053ab:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01053ae	obj/kern/kernel.asm	/^f01053ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053b3	obj/kern/kernel.asm	/^f01053b3:	85 d2                	test   %edx,%edx$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	74 15                	je     f01053cc <strnlen+0x27>$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	80 39 00             	cmpb   $0x0,(%ecx)$/;"	l
f01053ba	obj/kern/kernel.asm	/^f01053ba:	74 10                	je     f01053cc <strnlen+0x27>$/;"	l
f01053bc	obj/kern/kernel.asm	/^f01053bc:	83 c0 01             	add    $0x1,%eax$/;"	l
f01053bf	obj/kern/kernel.asm	/^f01053bf:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01053c2	obj/kern/kernel.asm	/^f01053c2:	83 ea 01             	sub    $0x1,%edx$/;"	l
f01053c5	obj/kern/kernel.asm	/^f01053c5:	74 05                	je     f01053cc <strnlen+0x27>$/;"	l
f01053c7	obj/kern/kernel.asm	/^f01053c7:	80 39 00             	cmpb   $0x0,(%ecx)$/;"	l
f01053ca	obj/kern/kernel.asm	/^f01053ca:	75 f0                	jne    f01053bc <strnlen+0x17>$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	5d                   	pop    %ebp$/;"	l
f01053cd	obj/kern/kernel.asm	/^f01053cd:	c3                   	ret    $/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce <strcpy>:$/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce:	55                   	push   %ebp$/;"	l
f01053cf	obj/kern/kernel.asm	/^f01053cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01053d1	obj/kern/kernel.asm	/^f01053d1:	53                   	push   %ebx$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01053d5	obj/kern/kernel.asm	/^f01053d5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01053d8	obj/kern/kernel.asm	/^f01053d8:	89 cb                	mov    %ecx,%ebx$/;"	l
f01053da	obj/kern/kernel.asm	/^f01053da:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f01053dd	obj/kern/kernel.asm	/^f01053dd:	83 c2 01             	add    $0x1,%edx$/;"	l
f01053e0	obj/kern/kernel.asm	/^f01053e0:	88 01                	mov    %al,(%ecx)$/;"	l
f01053e2	obj/kern/kernel.asm	/^f01053e2:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	84 c0                	test   %al,%al$/;"	l
f01053e7	obj/kern/kernel.asm	/^f01053e7:	75 f1                	jne    f01053da <strcpy+0xc>$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	89 d8                	mov    %ebx,%eax$/;"	l
f01053eb	obj/kern/kernel.asm	/^f01053eb:	5b                   	pop    %ebx$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	5d                   	pop    %ebp$/;"	l
f01053ed	obj/kern/kernel.asm	/^f01053ed:	c3                   	ret    $/;"	l
f01053ee	obj/kern/kernel.asm	/^f01053ee <strncpy>:$/;"	l
f01053ee	obj/kern/kernel.asm	/^f01053ee:	55                   	push   %ebp$/;"	l
f01053ef	obj/kern/kernel.asm	/^f01053ef:	89 e5                	mov    %esp,%ebp$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	57                   	push   %edi$/;"	l
f01053f2	obj/kern/kernel.asm	/^f01053f2:	56                   	push   %esi$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	53                   	push   %ebx$/;"	l
f01053f4	obj/kern/kernel.asm	/^f01053f4:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01053f7	obj/kern/kernel.asm	/^f01053f7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01053fa	obj/kern/kernel.asm	/^f01053fa:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	89 cf                	mov    %ecx,%edi$/;"	l
f01053ff	obj/kern/kernel.asm	/^f01053ff:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105404	obj/kern/kernel.asm	/^f0105404:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105406	obj/kern/kernel.asm	/^f0105406:	73 15                	jae    f010541d <strncpy+0x2f>$/;"	l
f0105408	obj/kern/kernel.asm	/^f0105408:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	88 01                	mov    %al,(%ecx)$/;"	l
f010540d	obj/kern/kernel.asm	/^f010540d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f0105416	obj/kern/kernel.asm	/^f0105416:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0105419	obj/kern/kernel.asm	/^f0105419:	39 f3                	cmp    %esi,%ebx$/;"	l
f010541b	obj/kern/kernel.asm	/^f010541b:	72 eb                	jb     f0105408 <strncpy+0x1a>$/;"	l
f010541d	obj/kern/kernel.asm	/^f010541d:	89 f8                	mov    %edi,%eax$/;"	l
f010541f	obj/kern/kernel.asm	/^f010541f:	5b                   	pop    %ebx$/;"	l
f0105420	obj/kern/kernel.asm	/^f0105420:	5e                   	pop    %esi$/;"	l
f0105421	obj/kern/kernel.asm	/^f0105421:	5f                   	pop    %edi$/;"	l
f0105422	obj/kern/kernel.asm	/^f0105422:	5d                   	pop    %ebp$/;"	l
f0105423	obj/kern/kernel.asm	/^f0105423:	c3                   	ret    $/;"	l
f0105424	obj/kern/kernel.asm	/^f0105424 <strlcpy>:$/;"	l
f0105424	obj/kern/kernel.asm	/^f0105424:	55                   	push   %ebp$/;"	l
f0105425	obj/kern/kernel.asm	/^f0105425:	89 e5                	mov    %esp,%ebp$/;"	l
f0105427	obj/kern/kernel.asm	/^f0105427:	56                   	push   %esi$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	53                   	push   %ebx$/;"	l
f0105429	obj/kern/kernel.asm	/^f0105429:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010542c	obj/kern/kernel.asm	/^f010542c:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010542f	obj/kern/kernel.asm	/^f010542f:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105432	obj/kern/kernel.asm	/^f0105432:	89 de                	mov    %ebx,%esi$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	85 d2                	test   %edx,%edx$/;"	l
f0105436	obj/kern/kernel.asm	/^f0105436:	74 22                	je     f010545a <strlcpy+0x36>$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010543b	obj/kern/kernel.asm	/^f010543b:	74 1a                	je     f0105457 <strlcpy+0x33>$/;"	l
f010543d	obj/kern/kernel.asm	/^f010543d:	80 39 00             	cmpb   $0x0,(%ecx)$/;"	l
f0105440	obj/kern/kernel.asm	/^f0105440:	74 15                	je     f0105457 <strlcpy+0x33>$/;"	l
f0105442	obj/kern/kernel.asm	/^f0105442:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105445	obj/kern/kernel.asm	/^f0105445:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105448	obj/kern/kernel.asm	/^f0105448:	88 03                	mov    %al,(%ebx)$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0105450	obj/kern/kernel.asm	/^f0105450:	74 05                	je     f0105457 <strlcpy+0x33>$/;"	l
f0105452	obj/kern/kernel.asm	/^f0105452:	80 39 00             	cmpb   $0x0,(%ecx)$/;"	l
f0105455	obj/kern/kernel.asm	/^f0105455:	75 eb                	jne    f0105442 <strlcpy+0x1e>$/;"	l
f0105457	obj/kern/kernel.asm	/^f0105457:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f010545a	obj/kern/kernel.asm	/^f010545a:	89 d8                	mov    %ebx,%eax$/;"	l
f010545c	obj/kern/kernel.asm	/^f010545c:	29 f0                	sub    %esi,%eax$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	5b                   	pop    %ebx$/;"	l
f010545f	obj/kern/kernel.asm	/^f010545f:	5e                   	pop    %esi$/;"	l
f0105460	obj/kern/kernel.asm	/^f0105460:	5d                   	pop    %ebp$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	c3                   	ret    $/;"	l
f0105462	obj/kern/kernel.asm	/^f0105462 <strcmp>:$/;"	l
f0105462	obj/kern/kernel.asm	/^f0105462:	55                   	push   %ebp$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	89 e5                	mov    %esp,%ebp$/;"	l
f0105465	obj/kern/kernel.asm	/^f0105465:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105468	obj/kern/kernel.asm	/^f0105468:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010546b	obj/kern/kernel.asm	/^f010546b:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f010546e	obj/kern/kernel.asm	/^f010546e:	74 1a                	je     f010548a <strcmp+0x28>$/;"	l
f0105470	obj/kern/kernel.asm	/^f0105470:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0105473	obj/kern/kernel.asm	/^f0105473:	3a 01                	cmp    (%ecx),%al$/;"	l
f0105475	obj/kern/kernel.asm	/^f0105475:	3e 75 12             	jne,pt f010548a <strcmp+0x28>$/;"	l
f0105478	obj/kern/kernel.asm	/^f0105478:	83 c2 01             	add    $0x1,%edx$/;"	l
f010547b	obj/kern/kernel.asm	/^f010547b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010547e	obj/kern/kernel.asm	/^f010547e:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f0105481	obj/kern/kernel.asm	/^f0105481:	74 07                	je     f010548a <strcmp+0x28>$/;"	l
f0105483	obj/kern/kernel.asm	/^f0105483:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	3a 01                	cmp    (%ecx),%al$/;"	l
f0105488	obj/kern/kernel.asm	/^f0105488:	74 ee                	je     f0105478 <strcmp+0x16>$/;"	l
f010548a	obj/kern/kernel.asm	/^f010548a:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f010548d	obj/kern/kernel.asm	/^f010548d:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0105490	obj/kern/kernel.asm	/^f0105490:	29 d0                	sub    %edx,%eax$/;"	l
f0105492	obj/kern/kernel.asm	/^f0105492:	5d                   	pop    %ebp$/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	c3                   	ret    $/;"	l
f0105494	obj/kern/kernel.asm	/^f0105494 <strncmp>:$/;"	l
f0105494	obj/kern/kernel.asm	/^f0105494:	55                   	push   %ebp$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	89 e5                	mov    %esp,%ebp$/;"	l
f0105497	obj/kern/kernel.asm	/^f0105497:	53                   	push   %ebx$/;"	l
f0105498	obj/kern/kernel.asm	/^f0105498:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010549b	obj/kern/kernel.asm	/^f010549b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010549e	obj/kern/kernel.asm	/^f010549e:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01054a1	obj/kern/kernel.asm	/^f01054a1:	85 c9                	test   %ecx,%ecx$/;"	l
f01054a3	obj/kern/kernel.asm	/^f01054a3:	74 28                	je     f01054cd <strncmp+0x39>$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	74 1f                	je     f01054c9 <strncmp+0x35>$/;"	l
f01054aa	obj/kern/kernel.asm	/^f01054aa:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f01054ad	obj/kern/kernel.asm	/^f01054ad:	3a 03                	cmp    (%ebx),%al$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	3e 75 17             	jne,pt f01054c9 <strncmp+0x35>$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2:	83 c2 01             	add    $0x1,%edx$/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01054b8	obj/kern/kernel.asm	/^f01054b8:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f01054bb	obj/kern/kernel.asm	/^f01054bb:	74 10                	je     f01054cd <strncmp+0x39>$/;"	l
f01054bd	obj/kern/kernel.asm	/^f01054bd:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f01054c0	obj/kern/kernel.asm	/^f01054c0:	74 07                	je     f01054c9 <strncmp+0x35>$/;"	l
f01054c2	obj/kern/kernel.asm	/^f01054c2:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f01054c5	obj/kern/kernel.asm	/^f01054c5:	3a 03                	cmp    (%ebx),%al$/;"	l
f01054c7	obj/kern/kernel.asm	/^f01054c7:	74 e9                	je     f01054b2 <strncmp+0x1e>$/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9:	85 c9                	test   %ecx,%ecx$/;"	l
f01054cb	obj/kern/kernel.asm	/^f01054cb:	75 07                	jne    f01054d4 <strncmp+0x40>$/;"	l
f01054cd	obj/kern/kernel.asm	/^f01054cd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01054d2	obj/kern/kernel.asm	/^f01054d2:	eb 0a                	jmp    f01054de <strncmp+0x4a>$/;"	l
f01054d4	obj/kern/kernel.asm	/^f01054d4:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01054d7	obj/kern/kernel.asm	/^f01054d7:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01054da	obj/kern/kernel.asm	/^f01054da:	29 c2                	sub    %eax,%edx$/;"	l
f01054dc	obj/kern/kernel.asm	/^f01054dc:	89 d0                	mov    %edx,%eax$/;"	l
f01054de	obj/kern/kernel.asm	/^f01054de:	5b                   	pop    %ebx$/;"	l
f01054df	obj/kern/kernel.asm	/^f01054df:	5d                   	pop    %ebp$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	c3                   	ret    $/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1 <strchr>:$/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1:	55                   	push   %ebp$/;"	l
f01054e2	obj/kern/kernel.asm	/^f01054e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01054e4	obj/kern/kernel.asm	/^f01054e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01054eb	obj/kern/kernel.asm	/^f01054eb:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee:	74 0c                	je     f01054fc <strchr+0x1b>$/;"	l
f01054f0	obj/kern/kernel.asm	/^f01054f0:	38 10                	cmp    %dl,(%eax)$/;"	l
f01054f2	obj/kern/kernel.asm	/^f01054f2:	74 0d                	je     f0105501 <strchr+0x20>$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	83 c0 01             	add    $0x1,%eax$/;"	l
f01054f7	obj/kern/kernel.asm	/^f01054f7:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f01054fa	obj/kern/kernel.asm	/^f01054fa:	75 f4                	jne    f01054f0 <strchr+0xf>$/;"	l
f01054fc	obj/kern/kernel.asm	/^f01054fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	5d                   	pop    %ebp$/;"	l
f0105502	obj/kern/kernel.asm	/^f0105502:	c3                   	ret    $/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503 <strfind>:$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	55                   	push   %ebp$/;"	l
f0105504	obj/kern/kernel.asm	/^f0105504:	89 e5                	mov    %esp,%ebp$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105509	obj/kern/kernel.asm	/^f0105509:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f010550d	obj/kern/kernel.asm	/^f010550d:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0105510	obj/kern/kernel.asm	/^f0105510:	74 0c                	je     f010551e <strfind+0x1b>$/;"	l
f0105512	obj/kern/kernel.asm	/^f0105512:	38 10                	cmp    %dl,(%eax)$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	74 08                	je     f010551e <strfind+0x1b>$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105519	obj/kern/kernel.asm	/^f0105519:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f010551c	obj/kern/kernel.asm	/^f010551c:	75 f4                	jne    f0105512 <strfind+0xf>$/;"	l
f010551e	obj/kern/kernel.asm	/^f010551e:	5d                   	pop    %ebp$/;"	l
f010551f	obj/kern/kernel.asm	/^f010551f:	c3                   	ret    $/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520 <memset>:$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	55                   	push   %ebp$/;"	l
f0105521	obj/kern/kernel.asm	/^f0105521:	89 e5                	mov    %esp,%ebp$/;"	l
f0105523	obj/kern/kernel.asm	/^f0105523:	53                   	push   %ebx$/;"	l
f0105524	obj/kern/kernel.asm	/^f0105524:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105527	obj/kern/kernel.asm	/^f0105527:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	89 d9                	mov    %ebx,%ecx$/;"	l
f010552c	obj/kern/kernel.asm	/^f010552c:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010552f	obj/kern/kernel.asm	/^f010552f:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0105532	obj/kern/kernel.asm	/^f0105532:	78 0a                	js     f010553e <memset+0x1e>$/;"	l
f0105534	obj/kern/kernel.asm	/^f0105534:	88 01                	mov    %al,(%ecx)$/;"	l
f0105536	obj/kern/kernel.asm	/^f0105536:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010553c	obj/kern/kernel.asm	/^f010553c:	79 f6                	jns    f0105534 <memset+0x14>$/;"	l
f010553e	obj/kern/kernel.asm	/^f010553e:	89 d8                	mov    %ebx,%eax$/;"	l
f0105540	obj/kern/kernel.asm	/^f0105540:	5b                   	pop    %ebx$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	5d                   	pop    %ebp$/;"	l
f0105542	obj/kern/kernel.asm	/^f0105542:	c3                   	ret    $/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543 <memmove>:$/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543:	55                   	push   %ebp$/;"	l
f0105544	obj/kern/kernel.asm	/^f0105544:	89 e5                	mov    %esp,%ebp$/;"	l
f0105546	obj/kern/kernel.asm	/^f0105546:	56                   	push   %esi$/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	53                   	push   %ebx$/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010554b	obj/kern/kernel.asm	/^f010554b:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010554e	obj/kern/kernel.asm	/^f010554e:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	89 f2                	mov    %esi,%edx$/;"	l
f0105553	obj/kern/kernel.asm	/^f0105553:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105555	obj/kern/kernel.asm	/^f0105555:	73 29                	jae    f0105580 <memmove+0x3d>$/;"	l
f0105557	obj/kern/kernel.asm	/^f0105557:	8d 04 19             	lea    (%ecx,%ebx,1),%eax$/;"	l
f010555a	obj/kern/kernel.asm	/^f010555a:	39 f0                	cmp    %esi,%eax$/;"	l
f010555c	obj/kern/kernel.asm	/^f010555c:	76 22                	jbe    f0105580 <memmove+0x3d>$/;"	l
f010555e	obj/kern/kernel.asm	/^f010555e:	89 c1                	mov    %eax,%ecx$/;"	l
f0105560	obj/kern/kernel.asm	/^f0105560:	8d 14 1e             	lea    (%esi,%ebx,1),%edx$/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105566	obj/kern/kernel.asm	/^f0105566:	83 fb ff             	cmp    $0xffffffff,%ebx$/;"	l
f0105569	obj/kern/kernel.asm	/^f0105569:	74 30                	je     f010559b <memmove+0x58>$/;"	l
f010556b	obj/kern/kernel.asm	/^f010556b:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010556e	obj/kern/kernel.asm	/^f010556e:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105574	obj/kern/kernel.asm	/^f0105574:	88 02                	mov    %al,(%edx)$/;"	l
f0105576	obj/kern/kernel.asm	/^f0105576:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105579	obj/kern/kernel.asm	/^f0105579:	83 fb ff             	cmp    $0xffffffff,%ebx$/;"	l
f010557c	obj/kern/kernel.asm	/^f010557c:	75 ed                	jne    f010556b <memmove+0x28>$/;"	l
f010557e	obj/kern/kernel.asm	/^f010557e:	eb 1b                	jmp    f010559b <memmove+0x58>$/;"	l
f0105580	obj/kern/kernel.asm	/^f0105580:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105583	obj/kern/kernel.asm	/^f0105583:	83 fb ff             	cmp    $0xffffffff,%ebx$/;"	l
f0105586	obj/kern/kernel.asm	/^f0105586:	74 13                	je     f010559b <memmove+0x58>$/;"	l
f0105588	obj/kern/kernel.asm	/^f0105588:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010558b	obj/kern/kernel.asm	/^f010558b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010558e	obj/kern/kernel.asm	/^f010558e:	88 02                	mov    %al,(%edx)$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105593	obj/kern/kernel.asm	/^f0105593:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596:	83 fb ff             	cmp    $0xffffffff,%ebx$/;"	l
f0105599	obj/kern/kernel.asm	/^f0105599:	75 ed                	jne    f0105588 <memmove+0x45>$/;"	l
f010559b	obj/kern/kernel.asm	/^f010559b:	89 f0                	mov    %esi,%eax$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	5b                   	pop    %ebx$/;"	l
f010559e	obj/kern/kernel.asm	/^f010559e:	5e                   	pop    %esi$/;"	l
f010559f	obj/kern/kernel.asm	/^f010559f:	5d                   	pop    %ebp$/;"	l
f01055a0	obj/kern/kernel.asm	/^f01055a0:	c3                   	ret    $/;"	l
f01055a1	obj/kern/kernel.asm	/^f01055a1 <memcpy>:$/;"	l
f01055a1	obj/kern/kernel.asm	/^f01055a1:	55                   	push   %ebp$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01055a4	obj/kern/kernel.asm	/^f01055a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01055a7	obj/kern/kernel.asm	/^f01055a7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01055aa	obj/kern/kernel.asm	/^f01055aa:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01055b1	obj/kern/kernel.asm	/^f01055b1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01055b5	obj/kern/kernel.asm	/^f01055b5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01055b8	obj/kern/kernel.asm	/^f01055b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01055bb	obj/kern/kernel.asm	/^f01055bb:	e8 83 ff ff ff       	call   f0105543 <memmove>$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	c9                   	leave  $/;"	l
f01055c1	obj/kern/kernel.asm	/^f01055c1:	c3                   	ret    $/;"	l
f01055c2	obj/kern/kernel.asm	/^f01055c2 <memcmp>:$/;"	l
f01055c2	obj/kern/kernel.asm	/^f01055c2:	55                   	push   %ebp$/;"	l
f01055c3	obj/kern/kernel.asm	/^f01055c3:	89 e5                	mov    %esp,%ebp$/;"	l
f01055c5	obj/kern/kernel.asm	/^f01055c5:	53                   	push   %ebx$/;"	l
f01055c6	obj/kern/kernel.asm	/^f01055c6:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01055cc	obj/kern/kernel.asm	/^f01055cc:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01055cf	obj/kern/kernel.asm	/^f01055cf:	83 ea 01             	sub    $0x1,%edx$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2:	83 fa ff             	cmp    $0xffffffff,%edx$/;"	l
f01055d5	obj/kern/kernel.asm	/^f01055d5:	74 22                	je     f01055f9 <memcmp+0x37>$/;"	l
f01055d7	obj/kern/kernel.asm	/^f01055d7:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01055da	obj/kern/kernel.asm	/^f01055da:	3a 03                	cmp    (%ebx),%al$/;"	l
f01055dc	obj/kern/kernel.asm	/^f01055dc:	3e 74 0c             	je,pt  f01055eb <memcmp+0x29>$/;"	l
f01055df	obj/kern/kernel.asm	/^f01055df:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	29 c2                	sub    %eax,%edx$/;"	l
f01055e7	obj/kern/kernel.asm	/^f01055e7:	89 d0                	mov    %edx,%eax$/;"	l
f01055e9	obj/kern/kernel.asm	/^f01055e9:	eb 13                	jmp    f01055fe <memcmp+0x3c>$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01055f1	obj/kern/kernel.asm	/^f01055f1:	83 ea 01             	sub    $0x1,%edx$/;"	l
f01055f4	obj/kern/kernel.asm	/^f01055f4:	83 fa ff             	cmp    $0xffffffff,%edx$/;"	l
f01055f7	obj/kern/kernel.asm	/^f01055f7:	75 de                	jne    f01055d7 <memcmp+0x15>$/;"	l
f01055f9	obj/kern/kernel.asm	/^f01055f9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01055fe	obj/kern/kernel.asm	/^f01055fe:	5b                   	pop    %ebx$/;"	l
f01055ff	obj/kern/kernel.asm	/^f01055ff:	5d                   	pop    %ebp$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	c3                   	ret    $/;"	l
f0105601	obj/kern/kernel.asm	/^f0105601 <memfind>:$/;"	l
f0105601	obj/kern/kernel.asm	/^f0105601:	55                   	push   %ebp$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	89 e5                	mov    %esp,%ebp$/;"	l
f0105604	obj/kern/kernel.asm	/^f0105604:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105607	obj/kern/kernel.asm	/^f0105607:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	89 c2                	mov    %eax,%edx$/;"	l
f010560c	obj/kern/kernel.asm	/^f010560c:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	39 d0                	cmp    %edx,%eax$/;"	l
f0105611	obj/kern/kernel.asm	/^f0105611:	73 0b                	jae    f010561e <memfind+0x1d>$/;"	l
f0105613	obj/kern/kernel.asm	/^f0105613:	38 08                	cmp    %cl,(%eax)$/;"	l
f0105615	obj/kern/kernel.asm	/^f0105615:	74 07                	je     f010561e <memfind+0x1d>$/;"	l
f0105617	obj/kern/kernel.asm	/^f0105617:	83 c0 01             	add    $0x1,%eax$/;"	l
f010561a	obj/kern/kernel.asm	/^f010561a:	39 d0                	cmp    %edx,%eax$/;"	l
f010561c	obj/kern/kernel.asm	/^f010561c:	72 f5                	jb     f0105613 <memfind+0x12>$/;"	l
f010561e	obj/kern/kernel.asm	/^f010561e:	5d                   	pop    %ebp$/;"	l
f010561f	obj/kern/kernel.asm	/^f010561f:	c3                   	ret    $/;"	l
f0105620	obj/kern/kernel.asm	/^f0105620 <strtol>:$/;"	l
f0105620	obj/kern/kernel.asm	/^f0105620:	55                   	push   %ebp$/;"	l
f0105621	obj/kern/kernel.asm	/^f0105621:	89 e5                	mov    %esp,%ebp$/;"	l
f0105623	obj/kern/kernel.asm	/^f0105623:	57                   	push   %edi$/;"	l
f0105624	obj/kern/kernel.asm	/^f0105624:	56                   	push   %esi$/;"	l
f0105625	obj/kern/kernel.asm	/^f0105625:	53                   	push   %ebx$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105629	obj/kern/kernel.asm	/^f0105629:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010562c	obj/kern/kernel.asm	/^f010562c:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f010562f	obj/kern/kernel.asm	/^f010562f:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105632	obj/kern/kernel.asm	/^f0105632:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0105639	obj/kern/kernel.asm	/^f0105639:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010563e	obj/kern/kernel.asm	/^f010563e:	80 39 20             	cmpb   $0x20,(%ecx)$/;"	l
f0105641	obj/kern/kernel.asm	/^f0105641:	0f 94 c2             	sete   %dl$/;"	l
f0105644	obj/kern/kernel.asm	/^f0105644:	80 39 09             	cmpb   $0x9,(%ecx)$/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647:	0f 94 c0             	sete   %al$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a:	09 d0                	or     %edx,%eax$/;"	l
f010564c	obj/kern/kernel.asm	/^f010564c:	a8 01                	test   $0x1,%al$/;"	l
f010564e	obj/kern/kernel.asm	/^f010564e:	74 15                	je     f0105665 <strtol+0x45>$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105653	obj/kern/kernel.asm	/^f0105653:	80 39 20             	cmpb   $0x20,(%ecx)$/;"	l
f0105656	obj/kern/kernel.asm	/^f0105656:	0f 94 c2             	sete   %dl$/;"	l
f0105659	obj/kern/kernel.asm	/^f0105659:	80 39 09             	cmpb   $0x9,(%ecx)$/;"	l
f010565c	obj/kern/kernel.asm	/^f010565c:	0f 94 c0             	sete   %al$/;"	l
f010565f	obj/kern/kernel.asm	/^f010565f:	09 d0                	or     %edx,%eax$/;"	l
f0105661	obj/kern/kernel.asm	/^f0105661:	a8 01                	test   $0x1,%al$/;"	l
f0105663	obj/kern/kernel.asm	/^f0105663:	75 eb                	jne    f0105650 <strtol+0x30>$/;"	l
f0105665	obj/kern/kernel.asm	/^f0105665:	80 39 2b             	cmpb   $0x2b,(%ecx)$/;"	l
f0105668	obj/kern/kernel.asm	/^f0105668:	3e 75 05             	jne,pt f0105670 <strtol+0x50>$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e:	eb 10                	jmp    f0105680 <strtol+0x60>$/;"	l
f0105670	obj/kern/kernel.asm	/^f0105670:	80 39 2d             	cmpb   $0x2d,(%ecx)$/;"	l
f0105673	obj/kern/kernel.asm	/^f0105673:	3e 75 0a             	jne,pt f0105680 <strtol+0x60>$/;"	l
f0105676	obj/kern/kernel.asm	/^f0105676:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105679	obj/kern/kernel.asm	/^f0105679:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
f0105680	obj/kern/kernel.asm	/^f0105680:	85 db                	test   %ebx,%ebx$/;"	l
f0105682	obj/kern/kernel.asm	/^f0105682:	0f 94 c2             	sete   %dl$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	0f 94 c0             	sete   %al$/;"	l
f010568b	obj/kern/kernel.asm	/^f010568b:	09 d0                	or     %edx,%eax$/;"	l
f010568d	obj/kern/kernel.asm	/^f010568d:	a8 01                	test   $0x1,%al$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	74 17                	je     f01056a8 <strtol+0x88>$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	3e 75 11             	jne,pt f01056a8 <strtol+0x88>$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f010569b	obj/kern/kernel.asm	/^f010569b:	3e 75 0a             	jne,pt f01056a8 <strtol+0x88>$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	83 c1 02             	add    $0x2,%ecx$/;"	l
f01056a1	obj/kern/kernel.asm	/^f01056a1:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f01056a6	obj/kern/kernel.asm	/^f01056a6:	eb 17                	jmp    f01056bf <strtol+0x9f>$/;"	l
f01056a8	obj/kern/kernel.asm	/^f01056a8:	85 db                	test   %ebx,%ebx$/;"	l
f01056aa	obj/kern/kernel.asm	/^f01056aa:	75 13                	jne    f01056bf <strtol+0x9f>$/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f01056af	obj/kern/kernel.asm	/^f01056af:	3e 75 07             	jne,pt f01056b9 <strtol+0x99>$/;"	l
f01056b2	obj/kern/kernel.asm	/^f01056b2:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01056b5	obj/kern/kernel.asm	/^f01056b5:	b3 08                	mov    $0x8,%bl$/;"	l
f01056b7	obj/kern/kernel.asm	/^f01056b7:	eb 06                	jmp    f01056bf <strtol+0x9f>$/;"	l
f01056b9	obj/kern/kernel.asm	/^f01056b9:	85 db                	test   %ebx,%ebx$/;"	l
f01056bb	obj/kern/kernel.asm	/^f01056bb:	75 02                	jne    f01056bf <strtol+0x9f>$/;"	l
f01056bd	obj/kern/kernel.asm	/^f01056bd:	b3 0a                	mov    $0xa,%bl$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	2c 30                	sub    $0x30,%al$/;"	l
f01056c4	obj/kern/kernel.asm	/^f01056c4:	3c 09                	cmp    $0x9,%al$/;"	l
f01056c6	obj/kern/kernel.asm	/^f01056c6:	77 08                	ja     f01056d0 <strtol+0xb0>$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	0f be 01             	movsbl (%ecx),%eax$/;"	l
f01056cb	obj/kern/kernel.asm	/^f01056cb:	83 e8 30             	sub    $0x30,%eax$/;"	l
f01056ce	obj/kern/kernel.asm	/^f01056ce:	eb 20                	jmp    f01056f0 <strtol+0xd0>$/;"	l
f01056d0	obj/kern/kernel.asm	/^f01056d0:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01056d3	obj/kern/kernel.asm	/^f01056d3:	2c 61                	sub    $0x61,%al$/;"	l
f01056d5	obj/kern/kernel.asm	/^f01056d5:	3c 19                	cmp    $0x19,%al$/;"	l
f01056d7	obj/kern/kernel.asm	/^f01056d7:	77 08                	ja     f01056e1 <strtol+0xc1>$/;"	l
f01056d9	obj/kern/kernel.asm	/^f01056d9:	0f be 01             	movsbl (%ecx),%eax$/;"	l
f01056dc	obj/kern/kernel.asm	/^f01056dc:	83 e8 57             	sub    $0x57,%eax$/;"	l
f01056df	obj/kern/kernel.asm	/^f01056df:	eb 0f                	jmp    f01056f0 <strtol+0xd0>$/;"	l
f01056e1	obj/kern/kernel.asm	/^f01056e1:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01056e4	obj/kern/kernel.asm	/^f01056e4:	2c 41                	sub    $0x41,%al$/;"	l
f01056e6	obj/kern/kernel.asm	/^f01056e6:	3c 19                	cmp    $0x19,%al$/;"	l
f01056e8	obj/kern/kernel.asm	/^f01056e8:	77 14                	ja     f01056fe <strtol+0xde>$/;"	l
f01056ea	obj/kern/kernel.asm	/^f01056ea:	0f be 01             	movsbl (%ecx),%eax$/;"	l
f01056ed	obj/kern/kernel.asm	/^f01056ed:	83 e8 37             	sub    $0x37,%eax$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	39 d8                	cmp    %ebx,%eax$/;"	l
f01056f2	obj/kern/kernel.asm	/^f01056f2:	7d 0a                	jge    f01056fe <strtol+0xde>$/;"	l
f01056f4	obj/kern/kernel.asm	/^f01056f4:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01056f7	obj/kern/kernel.asm	/^f01056f7:	0f af f3             	imul   %ebx,%esi$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	01 c6                	add    %eax,%esi$/;"	l
f01056fc	obj/kern/kernel.asm	/^f01056fc:	eb c1                	jmp    f01056bf <strtol+0x9f>$/;"	l
f01056fe	obj/kern/kernel.asm	/^f01056fe:	85 ff                	test   %edi,%edi$/;"	l
f0105700	obj/kern/kernel.asm	/^f0105700:	74 02                	je     f0105704 <strtol+0xe4>$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	89 0f                	mov    %ecx,(%edi)$/;"	l
f0105704	obj/kern/kernel.asm	/^f0105704:	89 f0                	mov    %esi,%eax$/;"	l
f0105706	obj/kern/kernel.asm	/^f0105706:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f010570a	obj/kern/kernel.asm	/^f010570a:	74 02                	je     f010570e <strtol+0xee>$/;"	l
f010570c	obj/kern/kernel.asm	/^f010570c:	f7 d8                	neg    %eax$/;"	l
f010570e	obj/kern/kernel.asm	/^f010570e:	83 c4 04             	add    $0x4,%esp$/;"	l
f0105711	obj/kern/kernel.asm	/^f0105711:	5b                   	pop    %ebx$/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712:	5e                   	pop    %esi$/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	5f                   	pop    %edi$/;"	l
f0105714	obj/kern/kernel.asm	/^f0105714:	5d                   	pop    %ebp$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	c3                   	ret    $/;"	l
f0105718	obj/kern/kernel.asm	/^f0105718 <__udivdi3>:$/;"	l
f0105718	obj/kern/kernel.asm	/^f0105718:	55                   	push   %ebp$/;"	l
f0105719	obj/kern/kernel.asm	/^f0105719:	89 e5                	mov    %esp,%ebp$/;"	l
f010571b	obj/kern/kernel.asm	/^f010571b:	57                   	push   %edi$/;"	l
f010571c	obj/kern/kernel.asm	/^f010571c:	56                   	push   %esi$/;"	l
f010571d	obj/kern/kernel.asm	/^f010571d:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105720	obj/kern/kernel.asm	/^f0105720:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0105723	obj/kern/kernel.asm	/^f0105723:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105726	obj/kern/kernel.asm	/^f0105726:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010572c	obj/kern/kernel.asm	/^f010572c:	85 d2                	test   %edx,%edx$/;"	l
f010572e	obj/kern/kernel.asm	/^f010572e:	89 75 f0             	mov    %esi,-0x10(%ebp)$/;"	l
f0105731	obj/kern/kernel.asm	/^f0105731:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105734	obj/kern/kernel.asm	/^f0105734:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0105737	obj/kern/kernel.asm	/^f0105737:	89 fe                	mov    %edi,%esi$/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	75 21                	jne    f010575c <__udivdi3+0x44>$/;"	l
f010573b	obj/kern/kernel.asm	/^f010573b:	39 f8                	cmp    %edi,%eax$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	76 55                	jbe    f0105794 <__udivdi3+0x7c>$/;"	l
f010573f	obj/kern/kernel.asm	/^f010573f:	89 fa                	mov    %edi,%edx$/;"	l
f0105741	obj/kern/kernel.asm	/^f0105741:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	89 c7                	mov    %eax,%edi$/;"	l
f0105749	obj/kern/kernel.asm	/^f0105749:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f0105750	obj/kern/kernel.asm	/^f0105750:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0105753	obj/kern/kernel.asm	/^f0105753:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105756	obj/kern/kernel.asm	/^f0105756:	89 f8                	mov    %edi,%eax$/;"	l
f0105758	obj/kern/kernel.asm	/^f0105758:	5e                   	pop    %esi$/;"	l
f0105759	obj/kern/kernel.asm	/^f0105759:	5f                   	pop    %edi$/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	5d                   	pop    %ebp$/;"	l
f010575b	obj/kern/kernel.asm	/^f010575b:	c3                   	ret    $/;"	l
f010575c	obj/kern/kernel.asm	/^f010575c:	31 ff                	xor    %edi,%edi$/;"	l
f010575e	obj/kern/kernel.asm	/^f010575e:	39 75 f4             	cmp    %esi,-0xc(%ebp)$/;"	l
f0105761	obj/kern/kernel.asm	/^f0105761:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f0105768	obj/kern/kernel.asm	/^f0105768:	77 e6                	ja     f0105750 <__udivdi3+0x38>$/;"	l
f010576a	obj/kern/kernel.asm	/^f010576a:	0f bd 45 f4          	bsr    -0xc(%ebp),%eax$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	89 c7                	mov    %eax,%edi$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	75 52                	jne    f01057c7 <__udivdi3+0xaf>$/;"	l
f0105775	obj/kern/kernel.asm	/^f0105775:	3b 75 f4             	cmp    -0xc(%ebp),%esi$/;"	l
f0105778	obj/kern/kernel.asm	/^f0105778:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0105780	obj/kern/kernel.asm	/^f0105780:	0f 97 c2             	seta   %dl$/;"	l
f0105783	obj/kern/kernel.asm	/^f0105783:	39 4d f0             	cmp    %ecx,-0x10(%ebp)$/;"	l
f0105786	obj/kern/kernel.asm	/^f0105786:	0f 93 c0             	setae  %al$/;"	l
f0105789	obj/kern/kernel.asm	/^f0105789:	09 d0                	or     %edx,%eax$/;"	l
f010578b	obj/kern/kernel.asm	/^f010578b:	a8 01                	test   $0x1,%al$/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	75 ba                	jne    f0105749 <__udivdi3+0x31>$/;"	l
f010578f	obj/kern/kernel.asm	/^f010578f:	66 31 ff             	xor    %di,%di$/;"	l
f0105792	obj/kern/kernel.asm	/^f0105792:	eb b5                	jmp    f0105749 <__udivdi3+0x31>$/;"	l
f0105794	obj/kern/kernel.asm	/^f0105794:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105797	obj/kern/kernel.asm	/^f0105797:	85 c0                	test   %eax,%eax$/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	75 0e                	jne    f01057a9 <__udivdi3+0x91>$/;"	l
f010579b	obj/kern/kernel.asm	/^f010579b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01057a0	obj/kern/kernel.asm	/^f01057a0:	31 c9                	xor    %ecx,%ecx$/;"	l
f01057a2	obj/kern/kernel.asm	/^f01057a2:	31 d2                	xor    %edx,%edx$/;"	l
f01057a4	obj/kern/kernel.asm	/^f01057a4:	f7 f1                	div    %ecx$/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01057a9	obj/kern/kernel.asm	/^f01057a9:	89 f0                	mov    %esi,%eax$/;"	l
f01057ab	obj/kern/kernel.asm	/^f01057ab:	31 d2                	xor    %edx,%edx$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
f01057b0	obj/kern/kernel.asm	/^f01057b0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01057b3	obj/kern/kernel.asm	/^f01057b3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01057b6	obj/kern/kernel.asm	/^f01057b6:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f01057bc	obj/kern/kernel.asm	/^f01057bc:	83 c4 14             	add    $0x14,%esp$/;"	l
f01057bf	obj/kern/kernel.asm	/^f01057bf:	89 c7                	mov    %eax,%edi$/;"	l
f01057c1	obj/kern/kernel.asm	/^f01057c1:	5e                   	pop    %esi$/;"	l
f01057c2	obj/kern/kernel.asm	/^f01057c2:	89 f8                	mov    %edi,%eax$/;"	l
f01057c4	obj/kern/kernel.asm	/^f01057c4:	5f                   	pop    %edi$/;"	l
f01057c5	obj/kern/kernel.asm	/^f01057c5:	5d                   	pop    %ebp$/;"	l
f01057c6	obj/kern/kernel.asm	/^f01057c6:	c3                   	ret    $/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01057cc	obj/kern/kernel.asm	/^f01057cc:	89 f9                	mov    %edi,%ecx$/;"	l
f01057ce	obj/kern/kernel.asm	/^f01057ce:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01057d1	obj/kern/kernel.asm	/^f01057d1:	29 f8                	sub    %edi,%eax$/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	d3 e2                	shl    %cl,%edx$/;"	d
f01057d5	obj/kern/kernel.asm	/^f01057d5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f01057d8	obj/kern/kernel.asm	/^f01057d8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01057db	obj/kern/kernel.asm	/^f01057db:	0f b6 4d e8          	movzbl -0x18(%ebp),%ecx$/;"	l
f01057df	obj/kern/kernel.asm	/^f01057df:	d3 e8                	shr    %cl,%eax$/;"	d
f01057e1	obj/kern/kernel.asm	/^f01057e1:	89 f9                	mov    %edi,%ecx$/;"	l
f01057e3	obj/kern/kernel.asm	/^f01057e3:	09 c2                	or     %eax,%edx$/;"	l
f01057e5	obj/kern/kernel.asm	/^f01057e5:	d3 65 e4             	shll   %cl,-0x1c(%ebp)$/;"	d
f01057e8	obj/kern/kernel.asm	/^f01057e8:	0f b6 4d e8          	movzbl -0x18(%ebp),%ecx$/;"	l
f01057ec	obj/kern/kernel.asm	/^f01057ec:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f01057ef	obj/kern/kernel.asm	/^f01057ef:	89 f2                	mov    %esi,%edx$/;"	l
f01057f1	obj/kern/kernel.asm	/^f01057f1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	d3 ea                	shr    %cl,%edx$/;"	d
f01057f6	obj/kern/kernel.asm	/^f01057f6:	89 f9                	mov    %edi,%ecx$/;"	l
f01057f8	obj/kern/kernel.asm	/^f01057f8:	d3 e6                	shl    %cl,%esi$/;"	d
f01057fa	obj/kern/kernel.asm	/^f01057fa:	0f b6 4d e8          	movzbl -0x18(%ebp),%ecx$/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe:	d3 e8                	shr    %cl,%eax$/;"	d
f0105800	obj/kern/kernel.asm	/^f0105800:	89 f9                	mov    %edi,%ecx$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	09 c6                	or     %eax,%esi$/;"	l
f0105804	obj/kern/kernel.asm	/^f0105804:	d3 65 f0             	shll   %cl,-0x10(%ebp)$/;"	d
f0105807	obj/kern/kernel.asm	/^f0105807:	89 f0                	mov    %esi,%eax$/;"	l
f0105809	obj/kern/kernel.asm	/^f0105809:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
f010580c	obj/kern/kernel.asm	/^f010580c:	89 d6                	mov    %edx,%esi$/;"	l
f010580e	obj/kern/kernel.asm	/^f010580e:	89 c7                	mov    %eax,%edi$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105813	obj/kern/kernel.asm	/^f0105813:	f7 e7                	mul    %edi$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	39 f2                	cmp    %esi,%edx$/;"	l
f0105817	obj/kern/kernel.asm	/^f0105817:	77 14                	ja     f010582d <__udivdi3+0x115>$/;"	l
f0105819	obj/kern/kernel.asm	/^f0105819:	0f 94 c2             	sete   %dl$/;"	l
f010581c	obj/kern/kernel.asm	/^f010581c:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f010581f	obj/kern/kernel.asm	/^f010581f:	0f 97 c0             	seta   %al$/;"	l
f0105822	obj/kern/kernel.asm	/^f0105822:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105825	obj/kern/kernel.asm	/^f0105825:	85 d0                	test   %edx,%eax$/;"	l
f0105827	obj/kern/kernel.asm	/^f0105827:	0f 84 1c ff ff ff    	je     f0105749 <__udivdi3+0x31>$/;"	l
f010582d	obj/kern/kernel.asm	/^f010582d:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105830	obj/kern/kernel.asm	/^f0105830:	e9 14 ff ff ff       	jmp    f0105749 <__udivdi3+0x31>$/;"	l
f0105835	obj/kern/kernel.asm	/^f0105835:	90                   	nop    $/;"	l
f0105836	obj/kern/kernel.asm	/^f0105836:	90                   	nop    $/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	90                   	nop    $/;"	l
f0105838	obj/kern/kernel.asm	/^f0105838 <__umoddi3>:$/;"	l
f0105838	obj/kern/kernel.asm	/^f0105838:	55                   	push   %ebp$/;"	l
f0105839	obj/kern/kernel.asm	/^f0105839:	89 e5                	mov    %esp,%ebp$/;"	l
f010583b	obj/kern/kernel.asm	/^f010583b:	57                   	push   %edi$/;"	l
f010583c	obj/kern/kernel.asm	/^f010583c:	56                   	push   %esi$/;"	l
f010583d	obj/kern/kernel.asm	/^f010583d:	8d 4d f0             	lea    -0x10(%ebp),%ecx$/;"	l
f0105840	obj/kern/kernel.asm	/^f0105840:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0105843	obj/kern/kernel.asm	/^f0105843:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f010584a	obj/kern/kernel.asm	/^f010584a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105851	obj/kern/kernel.asm	/^f0105851:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0105854	obj/kern/kernel.asm	/^f0105854:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105857	obj/kern/kernel.asm	/^f0105857:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
f010585a	obj/kern/kernel.asm	/^f010585a:	89 d7                	mov    %edx,%edi$/;"	l
f010585c	obj/kern/kernel.asm	/^f010585c:	89 c6                	mov    %eax,%esi$/;"	l
f010585e	obj/kern/kernel.asm	/^f010585e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105861	obj/kern/kernel.asm	/^f0105861:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	85 ff                	test   %edi,%edi$/;"	l
f0105866	obj/kern/kernel.asm	/^f0105866:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f0105869	obj/kern/kernel.asm	/^f0105869:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	75 3c                	jne    f01058aa <__umoddi3+0x72>$/;"	l
f010586e	obj/kern/kernel.asm	/^f010586e:	39 d6                	cmp    %edx,%esi$/;"	l
f0105870	obj/kern/kernel.asm	/^f0105870:	0f 86 ac 00 00 00    	jbe    f0105922 <__umoddi3+0xea>$/;"	l
f0105876	obj/kern/kernel.asm	/^f0105876:	f7 f6                	div    %esi$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	85 c9                	test   %ecx,%ecx$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	74 1b                	je     f010589d <__umoddi3+0x65>$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105885	obj/kern/kernel.asm	/^f0105885:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010588f	obj/kern/kernel.asm	/^f010588f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105892	obj/kern/kernel.asm	/^f0105892:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105895	obj/kern/kernel.asm	/^f0105895:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0105898	obj/kern/kernel.asm	/^f0105898:	89 10                	mov    %edx,(%eax)$/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	89 48 04             	mov    %ecx,0x4(%eax)$/;"	l
f010589d	obj/kern/kernel.asm	/^f010589d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01058a0	obj/kern/kernel.asm	/^f01058a0:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3:	83 c4 38             	add    $0x38,%esp$/;"	l
f01058a6	obj/kern/kernel.asm	/^f01058a6:	5e                   	pop    %esi$/;"	l
f01058a7	obj/kern/kernel.asm	/^f01058a7:	5f                   	pop    %edi$/;"	l
f01058a8	obj/kern/kernel.asm	/^f01058a8:	5d                   	pop    %ebp$/;"	l
f01058a9	obj/kern/kernel.asm	/^f01058a9:	c3                   	ret    $/;"	l
f01058aa	obj/kern/kernel.asm	/^f01058aa:	3b 7d c4             	cmp    -0x3c(%ebp),%edi$/;"	l
f01058ad	obj/kern/kernel.asm	/^f01058ad:	76 1f                	jbe    f01058ce <__umoddi3+0x96>$/;"	l
f01058af	obj/kern/kernel.asm	/^f01058af:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01058b2	obj/kern/kernel.asm	/^f01058b2:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f01058b5	obj/kern/kernel.asm	/^f01058b5:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f01058b8	obj/kern/kernel.asm	/^f01058b8:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01058bb	obj/kern/kernel.asm	/^f01058bb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01058be	obj/kern/kernel.asm	/^f01058be:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01058c1	obj/kern/kernel.asm	/^f01058c1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	83 c4 38             	add    $0x38,%esp$/;"	l
f01058ca	obj/kern/kernel.asm	/^f01058ca:	5e                   	pop    %esi$/;"	l
f01058cb	obj/kern/kernel.asm	/^f01058cb:	5f                   	pop    %edi$/;"	l
f01058cc	obj/kern/kernel.asm	/^f01058cc:	5d                   	pop    %ebp$/;"	l
f01058cd	obj/kern/kernel.asm	/^f01058cd:	c3                   	ret    $/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	0f bd c7             	bsr    %edi,%eax$/;"	l
f01058d1	obj/kern/kernel.asm	/^f01058d1:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
f01058d4	obj/kern/kernel.asm	/^f01058d4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01058d7	obj/kern/kernel.asm	/^f01058d7:	75 6c                	jne    f0105945 <__umoddi3+0x10d>$/;"	l
f01058d9	obj/kern/kernel.asm	/^f01058d9:	39 7d c4             	cmp    %edi,-0x3c(%ebp)$/;"	l
f01058dc	obj/kern/kernel.asm	/^f01058dc:	0f 97 c2             	seta   %dl$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	39 75 dc             	cmp    %esi,-0x24(%ebp)$/;"	l
f01058e2	obj/kern/kernel.asm	/^f01058e2:	0f 93 c0             	setae  %al$/;"	l
f01058e5	obj/kern/kernel.asm	/^f01058e5:	09 d0                	or     %edx,%eax$/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	a8 01                	test   $0x1,%al$/;"	l
f01058e9	obj/kern/kernel.asm	/^f01058e9:	74 10                	je     f01058fb <__umoddi3+0xc3>$/;"	l
f01058eb	obj/kern/kernel.asm	/^f01058eb:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f01058ee	obj/kern/kernel.asm	/^f01058ee:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	29 f0                	sub    %esi,%eax$/;"	l
f01058f3	obj/kern/kernel.asm	/^f01058f3:	19 fa                	sbb    %edi,%edx$/;"	l
f01058f5	obj/kern/kernel.asm	/^f01058f5:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01058f8	obj/kern/kernel.asm	/^f01058f8:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f01058fb	obj/kern/kernel.asm	/^f01058fb:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f01058fe	obj/kern/kernel.asm	/^f01058fe:	85 d2                	test   %edx,%edx$/;"	l
f0105900	obj/kern/kernel.asm	/^f0105900:	2e 74 9a             	je,pn  f010589d <__umoddi3+0x65>$/;"	l
f0105903	obj/kern/kernel.asm	/^f0105903:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105906	obj/kern/kernel.asm	/^f0105906:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f0105909	obj/kern/kernel.asm	/^f0105909:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010590f	obj/kern/kernel.asm	/^f010590f:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105912	obj/kern/kernel.asm	/^f0105912:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105918	obj/kern/kernel.asm	/^f0105918:	89 01                	mov    %eax,(%ecx)$/;"	l
f010591a	obj/kern/kernel.asm	/^f010591a:	89 51 04             	mov    %edx,0x4(%ecx)$/;"	l
f010591d	obj/kern/kernel.asm	/^f010591d:	e9 7b ff ff ff       	jmp    f010589d <__umoddi3+0x65>$/;"	l
f0105922	obj/kern/kernel.asm	/^f0105922:	85 f6                	test   %esi,%esi$/;"	l
f0105924	obj/kern/kernel.asm	/^f0105924:	75 0b                	jne    f0105931 <__umoddi3+0xf9>$/;"	l
f0105926	obj/kern/kernel.asm	/^f0105926:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010592b	obj/kern/kernel.asm	/^f010592b:	31 d2                	xor    %edx,%edx$/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d:	f7 f6                	div    %esi$/;"	l
f010592f	obj/kern/kernel.asm	/^f010592f:	89 c6                	mov    %eax,%esi$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105934	obj/kern/kernel.asm	/^f0105934:	89 fa                	mov    %edi,%edx$/;"	l
f0105936	obj/kern/kernel.asm	/^f0105936:	f7 f6                	div    %esi$/;"	l
f0105938	obj/kern/kernel.asm	/^f0105938:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010593b	obj/kern/kernel.asm	/^f010593b:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	f7 f6                	div    %esi$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	e9 33 ff ff ff       	jmp    f0105878 <__umoddi3+0x40>$/;"	l
f0105945	obj/kern/kernel.asm	/^f0105945:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010594a	obj/kern/kernel.asm	/^f010594a:	89 fa                	mov    %edi,%edx$/;"	l
f010594c	obj/kern/kernel.asm	/^f010594c:	0f b6 4d d4          	movzbl -0x2c(%ebp),%ecx$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
f0105953	obj/kern/kernel.asm	/^f0105953:	d3 e2                	shl    %cl,%edx$/;"	d
f0105955	obj/kern/kernel.asm	/^f0105955:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105958	obj/kern/kernel.asm	/^f0105958:	89 f0                	mov    %esi,%eax$/;"	l
f010595a	obj/kern/kernel.asm	/^f010595a:	89 d7                	mov    %edx,%edi$/;"	l
f010595c	obj/kern/kernel.asm	/^f010595c:	0f b6 4d d8          	movzbl -0x28(%ebp),%ecx$/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f0105963	obj/kern/kernel.asm	/^f0105963:	d3 e8                	shr    %cl,%eax$/;"	d
f0105965	obj/kern/kernel.asm	/^f0105965:	0f b6 4d d4          	movzbl -0x2c(%ebp),%ecx$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	d3 e6                	shl    %cl,%esi$/;"	d
f010596b	obj/kern/kernel.asm	/^f010596b:	0f b6 4d d8          	movzbl -0x28(%ebp),%ecx$/;"	l
f010596f	obj/kern/kernel.asm	/^f010596f:	09 c7                	or     %eax,%edi$/;"	l
f0105971	obj/kern/kernel.asm	/^f0105971:	d3 ea                	shr    %cl,%edx$/;"	d
f0105973	obj/kern/kernel.asm	/^f0105973:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105976	obj/kern/kernel.asm	/^f0105976:	0f b6 4d d4          	movzbl -0x2c(%ebp),%ecx$/;"	l
f010597a	obj/kern/kernel.asm	/^f010597a:	d3 e0                	shl    %cl,%eax$/;"	d
f010597c	obj/kern/kernel.asm	/^f010597c:	0f b6 4d d8          	movzbl -0x28(%ebp),%ecx$/;"	l
f0105980	obj/kern/kernel.asm	/^f0105980:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105986	obj/kern/kernel.asm	/^f0105986:	d3 e8                	shr    %cl,%eax$/;"	d
f0105988	obj/kern/kernel.asm	/^f0105988:	0f b6 4d d4          	movzbl -0x2c(%ebp),%ecx$/;"	l
f010598c	obj/kern/kernel.asm	/^f010598c:	0b 45 c4             	or     -0x3c(%ebp),%eax$/;"	l
f010598f	obj/kern/kernel.asm	/^f010598f:	d3 65 dc             	shll   %cl,-0x24(%ebp)$/;"	d
f0105992	obj/kern/kernel.asm	/^f0105992:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	f7 f7                	div    %edi$/;"	l
f0105997	obj/kern/kernel.asm	/^f0105997:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f010599d	obj/kern/kernel.asm	/^f010599d:	f7 e6                	mul    %esi$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f01059a2	obj/kern/kernel.asm	/^f01059a2:	39 ca                	cmp    %ecx,%edx$/;"	l
f01059a4	obj/kern/kernel.asm	/^f01059a4:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01059a7	obj/kern/kernel.asm	/^f01059a7:	77 13                	ja     f01059bc <__umoddi3+0x184>$/;"	l
f01059a9	obj/kern/kernel.asm	/^f01059a9:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01059ac	obj/kern/kernel.asm	/^f01059ac:	0f 94 c2             	sete   %dl$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f01059b2	obj/kern/kernel.asm	/^f01059b2:	0f 97 c0             	seta   %al$/;"	l
f01059b5	obj/kern/kernel.asm	/^f01059b5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01059b8	obj/kern/kernel.asm	/^f01059b8:	85 d0                	test   %edx,%eax$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	74 10                	je     f01059cc <__umoddi3+0x194>$/;"	l
f01059bc	obj/kern/kernel.asm	/^f01059bc:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01059bf	obj/kern/kernel.asm	/^f01059bf:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f01059c2	obj/kern/kernel.asm	/^f01059c2:	29 f1                	sub    %esi,%ecx$/;"	l
f01059c4	obj/kern/kernel.asm	/^f01059c4:	19 fa                	sbb    %edi,%edx$/;"	l
f01059c6	obj/kern/kernel.asm	/^f01059c6:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f01059c9	obj/kern/kernel.asm	/^f01059c9:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f01059cc	obj/kern/kernel.asm	/^f01059cc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	85 c0                	test   %eax,%eax$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	2e 0f 84 c5 fe ff ff 	je,pn  f010589d <__umoddi3+0x65>$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	0f b6 4d d8          	movzbl -0x28(%ebp),%ecx$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f01059df	obj/kern/kernel.asm	/^f01059df:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01059e2	obj/kern/kernel.asm	/^f01059e2:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f01059e5	obj/kern/kernel.asm	/^f01059e5:	1b 55 d0             	sbb    -0x30(%ebp),%edx$/;"	l
f01059e8	obj/kern/kernel.asm	/^f01059e8:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f01059eb	obj/kern/kernel.asm	/^f01059eb:	d3 e2                	shl    %cl,%edx$/;"	d
f01059ed	obj/kern/kernel.asm	/^f01059ed:	0f b6 4d d4          	movzbl -0x2c(%ebp),%ecx$/;"	l
f01059f1	obj/kern/kernel.asm	/^f01059f1:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01059f4	obj/kern/kernel.asm	/^f01059f4:	d3 e8                	shr    %cl,%eax$/;"	d
f01059f6	obj/kern/kernel.asm	/^f01059f6:	09 c2                	or     %eax,%edx$/;"	l
f01059f8	obj/kern/kernel.asm	/^f01059f8:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01059fb	obj/kern/kernel.asm	/^f01059fb:	d3 e8                	shr    %cl,%eax$/;"	d
f01059fd	obj/kern/kernel.asm	/^f01059fd:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105a03	obj/kern/kernel.asm	/^f0105a03:	e9 87 fe ff ff       	jmp    f010588f <__umoddi3+0x57>$/;"	l
f_dir	inc/fs.h	/^	struct File *f_dir;$/;"	m	struct:File	typeref:struct:File::File
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4 - sizeof(struct File*)];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
failures	user/testpmap.c	/^int n, va, r, initva, maxpa, maxva, maxnum, failures;$/;"	v
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon2	typeref:struct:Fd::__anon2::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fdtab	lib/entry.S	/^fdtab:$/;"	l
file	inc/fd.h	/^	struct File file;$/;"	m	struct:FdFile	typeref:struct:FdFile::File
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f
file_clear_block	fs/fs.c	/^file_clear_block(struct File *f, uint32_t filebno)$/;"	f
file_close	fs/fs.c	/^file_close(struct File *f)$/;"	f
file_close	lib/file.c	/^file_close(struct Fd *fd)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_dirty	fs/fs.c	/^file_dirty(struct File *f, off_t offset)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_map_block	fs/fs.c	/^file_map_block(struct File *f, uint32_t filebno, uint32_t *diskbno, bool alloc)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	lib/file.c	/^file_read(struct Fd *fd, void *buf, size_t n, off_t offset)$/;"	f	file:
file_remove	fs/fs.c	/^file_remove(const char *path)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_stat	lib/file.c	/^file_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
file_trunc	lib/file.c	/^file_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	lib/file.c	/^file_write(struct Fd *fd, const void *buf, size_t n, off_t offset)$/;"	f	file:
fileid	obj/fs/fs.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileid	obj/user/cat.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/echo.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/forktree.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/icode.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/idle.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/init.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/ls.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/lsfd.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/num.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/pingpong.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/primes.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/primespipe.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/sh.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/testfdsharing.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/testkbd.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/testmalloc.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/testpipe.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/testpiperace.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/testpiperace2.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/testpteshare.asm	/^	fileid = fd->fd_file.id;$/;"	d
fileid	obj/user/testshell.asm	/^	fileid = fd->fd_file.id;$/;"	d
finishfs	fs/fsformat.c	/^finishfs(void)$/;"	f
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flushb	fs/fsformat.c	/^flushb(struct Block *b)$/;"	f
flushdisk	fs/fsformat.c	/^flushdisk(void)$/;"	f
fmap	lib/file.c	/^fmap(struct Fd* fd, off_t oldsize, off_t newsize)$/;"	f	file:
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
free	lib/malloc.c	/^free(void *v)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsipc	lib/fsipc.c	/^fsipc(unsigned type, void *fsreq, void *dstva, int *perm)$/;"	f	file:
fsipc_close	lib/fsipc.c	/^fsipc_close(int fileid)$/;"	f
fsipc_dirty	lib/fsipc.c	/^fsipc_dirty(int fileid, off_t offset)$/;"	f
fsipc_map	lib/fsipc.c	/^fsipc_map(int fileid, off_t offset, void *dstva)$/;"	f
fsipc_open	lib/fsipc.c	/^fsipc_open(const char *path, int omode, struct Fd *fd)$/;"	f
fsipc_remove	lib/fsipc.c	/^fsipc_remove(const char *path)$/;"	f
fsipc_set_size	lib/fsipc.c	/^fsipc_set_size(int fileid, off_t size)$/;"	f
fsipc_sync	lib/fsipc.c	/^fsipc_sync(void)$/;"	f
fsipcbuf	lib/entry.S	/^fsipcbuf:$/;"	l
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
funmap	lib/file.c	/^funmap(struct Fd* fd, off_t oldsize, off_t newsize, bool dirty)$/;"	f	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_ss	inc/mmu.h	/^	unsigned gd_ss : 16;         \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/pmap.c	/^struct Segdesc gdt[] =$/;"	v	typeref:struct:Segdesc
gdt_pd	kern/pmap.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
getblk	fs/fsformat.c	/^getblk(uint32_t bno, int clr, uint32_t type)$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
i	obj/kern/kernel.asm	/^		i = ENVX(curenv->env_id);$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/kern/kernel.asm	/^ 		i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testmalloc.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f
i386_init	kern/init.c	/^i386_init(void)$/;"	f
i386_vm_init	kern/pmap.c	/^i386_vm_init(void)$/;"	f
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_init	kern/trap.c	/^idt_init(void)$/;"	f
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idthdr	kern/trapentry.S	/^idthdr:$/;"	l
idthdr	obj/kern/kernel.asm	/^idthdr:$/;"	l
idthdr_entry	kern/trap.c	/^struct idthdr_entry {$/;"	s	file:
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
initva	user/testpmap.c	/^int n, va, r, initva, maxpa, maxva, maxnum, failures;$/;"	v
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int	user_mem_check(struct Env *env, const void *va, size_t len, int perm);$/;"	l
int	obj/kern/kernel.asm	/^int $/;"	l
int	obj/kern/kernel.asm	/^int mon_dump_pa(int argc, char **argv, struct Trapframe *tf)$/;"	l
int	obj/kern/kernel.asm	/^int mon_dump_va(int argc, char **argv, struct Trapframe *tf)$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testmalloc.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testmalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^		interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
isfree	lib/malloc.c	/^isfree(void *v, size_t n)$/;"	f	file:
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kclock_init	kern/kclock.c	/^kclock_init(void)$/;"	f
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
len	obj/kern/kernel.asm	/^	len = ROUNDUP(len, PGSIZE);$/;"	d
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testmalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	user/num.c	/^int line = 0;$/;"	v
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary, size_t size)$/;"	f	file:
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testmalloc.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/fs/fs.asm	/^	m = n;$/;"	d
m	obj/kern/kernel.asm	/^	m = n;$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^	m = n;$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^	m = n;$/;"	d
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^	m = n;$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^	m = n;$/;"	d
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^	m = n;$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^	m = n;$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^	m = n;$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^	m = n;$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^	m = n;$/;"	d
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^	m = n;$/;"	d
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^	m = n;$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^	m = n;$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^	m = n;$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^	m = n;$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^	m = n;$/;"	d
m	obj/user/testmalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testmalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/testmalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testmalloc.asm	/^	m = n;$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^	m = n;$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^	m = n;$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^	m = n;$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^	m = n;$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^	m = n;$/;"	d
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
malloc	lib/malloc.c	/^malloc(size_t n)$/;"	f
map_block	fs/fs.c	/^map_block(uint32_t blockno)$/;"	f
mark_page	user/testpmap.c	/^mark_page(int* pg, int i) {$/;"	f
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
maxnum	user/testpmap.c	/^int n, va, r, initva, maxpa, maxva, maxnum, failures;$/;"	v
maxpa	kern/pmap.c	/^static physaddr_t maxpa;	\/\/ Maximum physical address$/;"	v	file:
maxpa	obj/kern/kernel.asm	/^		maxpa = EXTPHYSMEM + extmem;$/;"	d
maxpa	obj/kern/kernel.asm	/^		maxpa = basemem;$/;"	d
maxpa	user/testpmap.c	/^int n, va, r, initva, maxpa, maxva, maxnum, failures;$/;"	v
maxva	user/testpmap.c	/^int n, va, r, initva, maxpa, maxva, maxnum, failures;$/;"	v
mbegin	lib/malloc.c	/^static uint8_t *mbegin = (uint8_t*) 0x08000000;$/;"	v	file:
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mend	lib/malloc.c	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	v	file:
mon_alloc_page	kern/monitor.c	/^mon_alloc_page(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_dump_pa	kern/monitor.c	/^int mon_dump_pa(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_dump_va	kern/monitor.c	/^int mon_dump_va(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_free_page	kern/monitor.c	/^mon_free_page(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_page_status	kern/monitor.c	/^mon_page_status(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_set_perm	kern/monitor.c	/^mon_set_perm(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_show_map	kern/monitor.c	/^mon_show_map(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mptr	lib/malloc.c	/^static uint8_t *mptr;$/;"	v	file:
mptr	obj/user/testmalloc.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/user/testmalloc.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/user/testmalloc.asm	/^		mptr = mbegin;$/;"	d
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	user/testfsipc.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon6	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon6	file:
msg2	user/testptelibrary.c	/^char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^char *msg2 = "goodbye, world\\n";$/;"	v
mygdt	kern/entry.S	/^mygdt:$/;"	l
mygdtdesc	kern/entry.S	/^mygdtdesc:$/;"	l
n	obj/fs/fs.asm	/^		n = size - offset;$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npage*sizeof(struct Page), PGSIZE);$/;"	d
n	obj/user/cat.asm	/^		n = size - offset;$/;"	d
n	obj/user/echo.asm	/^		n = size - offset;$/;"	d
n	obj/user/forktree.asm	/^		n = size - offset;$/;"	d
n	obj/user/icode.asm	/^		n = size - offset;$/;"	d
n	obj/user/idle.asm	/^		n = size - offset;$/;"	d
n	obj/user/init.asm	/^		n = size - offset;$/;"	d
n	obj/user/ls.asm	/^		n = size - offset;$/;"	d
n	obj/user/lsfd.asm	/^		n = size - offset;$/;"	d
n	obj/user/num.asm	/^		n = size - offset;$/;"	d
n	obj/user/pingpong.asm	/^		n = size - offset;$/;"	d
n	obj/user/primes.asm	/^		n = size - offset;$/;"	d
n	obj/user/primespipe.asm	/^		n = size - offset;$/;"	d
n	obj/user/sh.asm	/^		n = size - offset;$/;"	d
n	obj/user/testfdsharing.asm	/^		n = size - offset;$/;"	d
n	obj/user/testkbd.asm	/^		n = size - offset;$/;"	d
n	obj/user/testmalloc.asm	/^			n = strtol(buf + 7, 0, 0);$/;"	d
n	obj/user/testmalloc.asm	/^		n = size - offset;$/;"	d
n	obj/user/testmalloc.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/user/testpipe.asm	/^		n = size - offset;$/;"	d
n	obj/user/testpiperace.asm	/^		n = size - offset;$/;"	d
n	obj/user/testpiperace2.asm	/^		n = size - offset;$/;"	d
n	obj/user/testpteshare.asm	/^		n = size - offset;$/;"	d
n	obj/user/testshell.asm	/^		n = size - offset;$/;"	d
n	user/testpmap.c	/^int n, va, r, initva, maxpa, maxva, maxnum, failures;$/;"	v
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/trap.c	/^	long name;$/;"	m	struct:idthdr_entry	file:
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
nbitblock	fs/fsformat.c	/^uint32_t nbitblock;$/;"	v
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
nelem	fs/fsformat.c	36;"	d	file:
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = ROUNDUP(newsize, BLKSIZE) \/ BLKSIZE;$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testmalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nextb	fs/fsformat.c	/^uint32_t nextb;$/;"	v
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npage	kern/pmap.c	/^size_t npage;			\/\/ Amount of physical memory (in pages)$/;"	v
npage	obj/kern/kernel.asm	/^	npage = maxpa \/ PGSIZE;$/;"	d
num	kern/trap.c	/^	long num;$/;"	m	struct:idthdr_entry	file:
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testmalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testmalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testmalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testmalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, char *s)$/;"	f
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testmalloc.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testmalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
nwrap	obj/user/testmalloc.asm	/^	nwrap = 0;$/;"	d
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	22;"	d	file:
off_t	fs/fsformat.c	8;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	70;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = ROUNDUP(f->f_size, BLKSIZE) \/ BLKSIZE;$/;"	d
oldsize	obj/fs/fs.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/cat.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/echo.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/forktree.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/icode.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/idle.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/init.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/ls.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/lsfd.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/num.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/pingpong.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/primes.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/primespipe.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/sh.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/testfdsharing.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/testkbd.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/testmalloc.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/testpipe.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/testpiperace.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/testpiperace2.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/testpteshare.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
oldsize	obj/user/testshell.asm	/^	oldsize = fd->fd_file.file.f_size;$/;"	d
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
opencons	lib/console.c	/^opencons(void)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
out	obj/fs/fs.asm	/^out:$/;"	l
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testmalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = v;$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/kern/kernel.asm	/^	p = v;$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = v;$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = v;$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = v;$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = v;$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = v;$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = v;$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = v;$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = v;$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = v;$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = v;$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primes.asm	/^	p = v;$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = v;$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = v;$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = v;$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = v;$/;"	d
p	obj/user/testmalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/testmalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testmalloc.asm	/^	p = v;$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = v;$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = v;$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = v;$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = v;$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = v;$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = e->env_cr3;$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/fs/fs.asm	/^		padc = ' ';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^		padc = ' ';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^		padc = ' ';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^		padc = ' ';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^		padc = ' ';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^		padc = ' ';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^		padc = ' ';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^		padc = ' ';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^		padc = ' ';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^		padc = ' ';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^		padc = ' ';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^		padc = ' ';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^		padc = ' ';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testmalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/testmalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/testmalloc.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^		padc = ' ';$/;"	d
page	obj/kern/kernel.asm	/^	page = pa2page(pa);$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct Page *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct Page *pp)$/;"	f
page2ppn	kern/pmap.h	/^page2ppn(struct Page *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(struct Page **pp_store)$/;"	f
page_check	kern/pmap.c	/^page_check(void)$/;"	f	file:
page_decref	kern/pmap.c	/^page_decref(struct Page* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct Page *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct Page_list page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page_list	file:
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_id	user/testpmap.c	/^int *page_id;$/;"	v
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_initpp	kern/pmap.c	/^page_initpp(struct Page *pp)$/;"	f	file:
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct Page *pp, void *va, int perm) $/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct Page* pages;		\/\/ Virtual address of physical page array$/;"	v	typeref:struct:Page
pages	obj/kern/kernel.asm	/^	pages = boot_alloc(npage * sizeof(struct Page), PGSIZE);$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^static const char *panicstr;$/;"	v	file:
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/fs/fs.asm	/^		perm = PTE_P | PTE_U | PTE_SHARE;$/;"	d
perm	obj/kern/kernel.asm	/^	perm = strtol(argv[3], NULL, 0);$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = boot_alloc(PGSIZE, PGSIZE);$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = boot_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((uint8_t *) elfhdr + elfhdr->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr *)((uint32_t)elfhdr + elfhdr->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr *)((uint32_t)elfhdr + elfhdr->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr *)((uint32_t)elfhdr + elfhdr->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr *)((uint32_t)elfhdr + elfhdr->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr *)((uint32_t)elfhdr + elfhdr->e_phoff);$/;"	d
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipeclose	lib/pipe.c	/^pipeclose(struct Fd *fd)$/;"	f	file:
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
piperead	lib/pipe.c	/^piperead(struct Fd *fd, void *vbuf, size_t n, off_t offset)$/;"	f	file:
pipestat	lib/pipe.c	/^pipestat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
pipewrite	lib/pipe.c	/^pipewrite(struct Fd *fd, const void *vbuf, size_t n, off_t offset)$/;"	f	file:
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	Page_LIST_entry_t pp_link;	\/* free list link *\/$/;"	m	struct:Page
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:Page
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testmalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testmalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testmalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
print_expected_mark	user/testpmap.c	/^print_expected_mark(int i) {$/;"	f
print_marked_page	user/testpmap.c	/^print_marked_page(int* pg) {$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testmalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/fs/fs.asm	/^	pte = vpt[VPN(v)];$/;"	d
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(pgdir, (void *)(la + i), 1);$/;"	d
pte	obj/user/cat.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/echo.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/forktree.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = vpt[pn];$/;"	d
pte	obj/user/icode.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/idle.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/init.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/ls.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/lsfd.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/num.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/pingpong.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = vpt[pn];$/;"	d
pte	obj/user/primes.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/primes.asm	/^	pte = vpt[pn];$/;"	d
pte	obj/user/primespipe.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = vpt[pn];$/;"	d
pte	obj/user/sh.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/sh.asm	/^	pte = vpt[pn];$/;"	d
pte	obj/user/testfdsharing.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = vpt[pn];$/;"	d
pte	obj/user/testkbd.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/testmalloc.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/testpipe.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = vpt[pn];$/;"	d
pte	obj/user/testpiperace.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = vpt[VPN(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = vpt[pn];$/;"	d
pte	obj/user/testpiperace2.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = vpt[pn];$/;"	d
pte	obj/user/testpteshare.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = vpt[pn];$/;"	d
pte	obj/user/testshell.asm	/^			pte = vpt[VPN(ova + i)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = vpt[pn];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = KADDR(PTE_ADDR(boot_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(boot_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = KADDR(PTE_ADDR(boot_pgdir[PDX(va)]));$/;"	d
ptr	obj/fs/fs.asm	/^		ptr = &f->f_direct[filebno];$/;"	d
ptr	obj/fs/fs.asm	/^		ptr = (uint32_t*)blk + filebno;$/;"	d
putblk	fs/fsformat.c	/^putblk(struct Block *b)$/;"	f
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
quicktest	grade.sh	/^quicktest () {$/;"	f
r	obj/fs/fs.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/fs/fs.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/fs/fs.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/fs/fs.asm	/^	r = file_remove(path);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/fs/fs.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/user/cat.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/cat.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/cat.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/echo.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/echo.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/echo.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/forktree.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/forktree.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/forktree.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/icode.asm	/^						r = read(fdnum, UTEMP, PGSIZE);$/;"	d
r	obj/user/icode.asm	/^						r = read(fdnum, UTEMP, ph->p_offset + ph->p_filesz - i);$/;"	d
r	obj/user/icode.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/icode.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/icode.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/icode.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/idle.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/idle.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/idle.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/init.asm	/^						r = read(fdnum, UTEMP, PGSIZE);$/;"	d
r	obj/user/init.asm	/^						r = read(fdnum, UTEMP, ph->p_offset + ph->p_filesz - i);$/;"	d
r	obj/user/init.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/init.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/init.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/ls.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/ls.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/ls.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/lsfd.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/lsfd.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/lsfd.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/num.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/num.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/num.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/pingpong.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/pingpong.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/pingpong.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/primes.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/primes.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/primes.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/primespipe.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/primespipe.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/primespipe.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/sh.asm	/^						r = read(fdnum, UTEMP, PGSIZE);$/;"	d
r	obj/user/sh.asm	/^						r = read(fdnum, UTEMP, ph->p_offset + ph->p_filesz - i);$/;"	d
r	obj/user/sh.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/sh.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/sh.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testfdsharing.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testkbd.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testkbd.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testkbd.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testmalloc.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testmalloc.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testmalloc.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testmalloc.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testmalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testmalloc.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testmalloc.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testpipe.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpipe.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testpipe.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testpiperace.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpiperace.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testpiperace.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testpiperace2.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testpteshare.asm	/^						r = read(fdnum, UTEMP, PGSIZE);$/;"	d
r	obj/user/testpteshare.asm	/^						r = read(fdnum, UTEMP, ph->p_offset + ph->p_filesz - i);$/;"	d
r	obj/user/testpteshare.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpteshare.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testpteshare.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testshell.asm	/^						r = read(fdnum, UTEMP, PGSIZE);$/;"	d
r	obj/user/testshell.asm	/^						r = read(fdnum, UTEMP, ph->p_offset + ph->p_filesz - i);$/;"	d
r	obj/user/testshell.asm	/^		r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testshell.asm	/^	r = (*dev->dev_read)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testshell.asm	/^	r = (*dev->dev_write)(fd, buf, n, fd->fd_offset);$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	user/testpmap.c	/^int n, va, r, initva, maxpa, maxva, maxnum, failures;$/;"	v
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testmalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
read_bitmap	fs/fs.c	/^read_bitmap(void)$/;"	f
read_block	fs/fs.c	/^read_block(uint32_t blockno, char **blk)$/;"	f	file:
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_eip	kern/monitor.c	/^read_eip()$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_map	lib/file.c	/^read_map(int fdnum, off_t offset, void **blk)$/;"	f
read_super	fs/fs.c	/^read_super(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *av, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t va, uint32_t count, uint32_t offset)$/;"	f
ref	obj/user/testmalloc.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/user/testmalloc.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/user/testmalloc.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
remove	lib/file.c	/^remove(const char *path)$/;"	f
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, (void *) REQVA, &perm);$/;"	d
req	obj/fs/fs.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/fs/fs.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/fs/fs.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/fs/fs.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/fs/fs.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/fs/fs.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/cat.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/cat.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/cat.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/cat.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/cat.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/cat.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/echo.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/echo.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/echo.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/echo.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/echo.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/echo.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/forktree.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/forktree.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/forktree.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/forktree.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/forktree.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/forktree.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/icode.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/icode.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/icode.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/icode.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/icode.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/icode.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/idle.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/idle.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/idle.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/idle.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/idle.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/idle.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/init.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/init.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/init.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/init.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/init.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/init.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/ls.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/ls.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/ls.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/ls.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/ls.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/ls.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/lsfd.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/lsfd.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/lsfd.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/lsfd.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/lsfd.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/lsfd.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/num.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/num.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/num.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/num.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/num.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/num.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/pingpong.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/pingpong.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/pingpong.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/pingpong.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/pingpong.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/pingpong.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/primes.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/primes.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/primes.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/primes.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/primes.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/primes.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/primespipe.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/primespipe.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/primespipe.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/primespipe.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/primespipe.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/primespipe.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/sh.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/sh.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/sh.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/sh.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/sh.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/sh.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/testfdsharing.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/testfdsharing.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/testfdsharing.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/testfdsharing.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/testfdsharing.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/testfdsharing.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/testkbd.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/testkbd.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/testkbd.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/testkbd.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/testkbd.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/testkbd.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/testmalloc.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/testmalloc.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/testmalloc.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/testmalloc.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/testmalloc.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/testmalloc.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/testpipe.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/testpipe.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/testpipe.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/testpipe.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/testpipe.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/testpipe.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/testpiperace.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/testpiperace.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/testpiperace.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/testpiperace.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/testpiperace.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/testpiperace.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/testpiperace2.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/testpiperace2.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/testpiperace2.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/testpiperace2.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/testpiperace2.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/testpiperace2.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/testpteshare.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/testpteshare.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/testpteshare.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/testpteshare.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/testpteshare.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/testpteshare.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req	obj/user/testshell.asm	/^	req = (struct Fsreq_close*) fsipcbuf;$/;"	d
req	obj/user/testshell.asm	/^	req = (struct Fsreq_dirty*) fsipcbuf;$/;"	d
req	obj/user/testshell.asm	/^	req = (struct Fsreq_map*) fsipcbuf;$/;"	d
req	obj/user/testshell.asm	/^	req = (struct Fsreq_open*)fsipcbuf;$/;"	d
req	obj/user/testshell.asm	/^	req = (struct Fsreq_remove*) fsipcbuf;$/;"	d
req	obj/user/testshell.asm	/^	req = (struct Fsreq_set_size*) fsipcbuf;$/;"	d
req_fileid	inc/fs.h	/^	int req_fileid;$/;"	m	struct:Fsreq_close
req_fileid	inc/fs.h	/^	int req_fileid;$/;"	m	struct:Fsreq_dirty
req_fileid	inc/fs.h	/^	int req_fileid;$/;"	m	struct:Fsreq_map
req_fileid	inc/fs.h	/^	int req_fileid;$/;"	m	struct:Fsreq_set_size
req_offset	inc/fs.h	/^	off_t req_offset;$/;"	m	struct:Fsreq_dirty
req_offset	inc/fs.h	/^	off_t req_offset;$/;"	m	struct:Fsreq_map
req_omode	inc/fs.h	/^	int req_omode;$/;"	m	struct:Fsreq_open
req_path	inc/fs.h	/^	char req_path[MAXPATHLEN];$/;"	m	struct:Fsreq_open
req_path	inc/fs.h	/^	char req_path[MAXPATHLEN];$/;"	m	struct:Fsreq_remove
req_size	inc/fs.h	/^	off_t req_size;$/;"	m	struct:Fsreq_set_size
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testmalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^				ret = r;$/;"	d
ret	obj/fs/fs.asm	/^	ret = 0;$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^				ret = r;$/;"	d
ret	obj/user/cat.asm	/^	ret = 0;$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^				ret = r;$/;"	d
ret	obj/user/echo.asm	/^	ret = 0;$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^				ret = r;$/;"	d
ret	obj/user/forktree.asm	/^	ret = 0;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^				ret = r;$/;"	d
ret	obj/user/icode.asm	/^	ret = 0;$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^				ret = r;$/;"	d
ret	obj/user/idle.asm	/^	ret = 0;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^				ret = r;$/;"	d
ret	obj/user/init.asm	/^	ret = 0;$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^				ret = r;$/;"	d
ret	obj/user/ls.asm	/^	ret = 0;$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^				ret = r;$/;"	d
ret	obj/user/lsfd.asm	/^	ret = 0;$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^				ret = r;$/;"	d
ret	obj/user/num.asm	/^	ret = 0;$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^				ret = r;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = 0;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^				ret = r;$/;"	d
ret	obj/user/primes.asm	/^	ret = 0;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^				ret = r;$/;"	d
ret	obj/user/primespipe.asm	/^	ret = 0;$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^				ret = r;$/;"	d
ret	obj/user/sh.asm	/^	ret = 0;$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^				ret = r;$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = 0;$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^				ret = r;$/;"	d
ret	obj/user/testkbd.asm	/^	ret = 0;$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testmalloc.asm	/^				ret = r;$/;"	d
ret	obj/user/testmalloc.asm	/^	ret = 0;$/;"	d
ret	obj/user/testmalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^				ret = r;$/;"	d
ret	obj/user/testpipe.asm	/^	ret = 0;$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^				ret = r;$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = 0;$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^				ret = r;$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = 0;$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^				ret = r;$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = 0;$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^				ret = r;$/;"	d
ret	obj/user/testshell.asm	/^	ret = 0;$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon1	file:
runbochs	grade.sh	/^runbochs () {$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
runtest	grade.sh	/^runtest () {$/;"	f
runtest1	grade.sh	/^runtest1 () {$/;"	f
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testmalloc.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
segment_alloc	kern/env.c	/^segment_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
sequence	user/testpmap.c	/^int sequence[] = { 0,  1,   1,   2,   3, $/;"	v
sequence_length	user/testpmap.c	/^int sequence_length = 16;$/;"	v
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f
serve	fs/serv.c	/^serve(void)$/;"	f
serve_close	fs/serv.c	/^serve_close(envid_t envid, struct Fsreq_close *rq)$/;"	f
serve_dirty	fs/serv.c	/^serve_dirty(envid_t envid, struct Fsreq_dirty *rq)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_map	fs/serv.c	/^serve_map(envid_t envid, struct Fsreq_map *rq)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *rq)$/;"	f
serve_remove	fs/serv.c	/^serve_remove(envid_t envid, struct Fsreq_remove *rq)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *rq)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid)$/;"	f
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] = $/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] = $/;"	v	file:
size	obj/fs/fs.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/cat.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/echo.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/forktree.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/icode.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/idle.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/init.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/ls.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/lsfd.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/num.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/pingpong.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/primes.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/primespipe.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/sh.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/testfdsharing.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/testkbd.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/testmalloc.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/testpipe.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/testpiperace.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/testpiperace2.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/testpteshare.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size	obj/user/testshell.asm	/^	size = fd->fd_file.file.f_size;$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testmalloc.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testmalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static inline const char*$/;"	l
static	obj/fs/fs.asm	/^static inline int32_t$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void $/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static const char *trapname(int trapno)$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline ppn_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct Page*$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t check_va2pa(pde_t *pgdir, uintptr_t va);$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static uint16_t *crt_buf;$/;"	l
static	obj/kern/kernel.asm	/^static uint16_t crt_pos;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static void*$/;"	l
static	obj/user/cat.asm	/^static inline int32_t$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static inline int32_t$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t$/;"	l
static	obj/user/forktree.asm	/^static inline int32_t$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t$/;"	l
static	obj/user/icode.asm	/^static inline int32_t$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/idle.asm	/^static __inline void$/;"	l
static	obj/user/idle.asm	/^static inline int32_t$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/init.asm	/^static __inline envid_t$/;"	l
static	obj/user/init.asm	/^static inline int32_t$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static inline int32_t$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static inline int32_t$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static inline int32_t$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t$/;"	l
static	obj/user/pingpong.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t$/;"	l
static	obj/user/primes.asm	/^static inline int32_t$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/primespipe.asm	/^static __inline envid_t$/;"	l
static	obj/user/primespipe.asm	/^static inline int32_t$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/sh.asm	/^static __inline envid_t$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static inline int32_t$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline envid_t$/;"	l
static	obj/user/testfdsharing.asm	/^static inline int32_t$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static inline int32_t$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testmalloc.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testmalloc.asm	/^static inline int32_t$/;"	l
static	obj/user/testmalloc.asm	/^static int$/;"	l
static	obj/user/testmalloc.asm	/^static long long$/;"	l
static	obj/user/testmalloc.asm	/^static ssize_t$/;"	l
static	obj/user/testmalloc.asm	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	l
static	obj/user/testmalloc.asm	/^static uint8_t *mptr;$/;"	l
static	obj/user/testmalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/testmalloc.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpipe.asm	/^static __inline envid_t$/;"	l
static	obj/user/testpipe.asm	/^static inline int32_t$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpiperace.asm	/^static __inline envid_t$/;"	l
static	obj/user/testpiperace.asm	/^static inline int32_t$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpiperace2.asm	/^static __inline envid_t$/;"	l
static	obj/user/testpiperace2.asm	/^static inline int32_t$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpteshare.asm	/^static __inline envid_t$/;"	l
static	obj/user/testpteshare.asm	/^static inline int32_t$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/testshell.asm	/^static __inline envid_t$/;"	l
static	obj/user/testshell.asm	/^static inline int32_t$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
storeblk	fs/fsformat.c	/^storeblk(struct File *f, struct Block *b, int nblk)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strecmp	fs/test.c	/^strecmp(char *a, char *b)$/;"	f
strecmp	user/testfsipc.c	/^strecmp(const char *a, const char *b)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
stubtest	grade.sh	/^stubtest () {$/;"	f
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.c	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = (struct Super*) blk;$/;"	d
super	obj/fs/fs.asm	/^	super = (struct Super*)diskaddr(1);$/;"	d
super	obj/fs/fs.asm	/^	super = 0;$/;"	d
swizzle	fs/fsformat.c	/^swizzle(uint32_t *x)$/;"	f
swizzleblock	fs/fsformat.c	/^swizzleblock(struct Block *b)$/;"	f
swizzlefile	fs/fsformat.c	/^swizzlefile(struct File *f)$/;"	f
sync	lib/file.c	/^sync(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
test_page	user/testpmap.c	/^test_page(int* pg, int i) {$/;"	f
test_range	user/testpmap.c	/^test_range(int startva, int endva, int startn) {$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] = $/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
tot	obj/fs/fs.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/cat.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/echo.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/forktree.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/icode.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/idle.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/init.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/ls.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/lsfd.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/num.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/pingpong.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/primes.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/primespipe.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/sh.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/testfdsharing.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/testkbd.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/testmalloc.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/testpipe.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/testpiperace.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/testpiperace2.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/testpteshare.asm	/^	tot = offset + n;$/;"	d
tot	obj/user/testshell.asm	/^	tot = offset + n;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	fs/fsformat.c	/^	uint32_t type;$/;"	m	struct:Block	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(void)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(void)$/;"	f
umain	user/hello.c	/^umain(void)$/;"	f
umain	user/icode.c	/^umain(void)$/;"	f
umain	user/idle.c	/^umain(void)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(void)$/;"	f
umain	user/primes.c	/^umain(void)$/;"	f
umain	user/primespipe.c	/^umain(void)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(void)$/;"	f
umain	user/spawninit.c	/^umain(void)$/;"	f
umain	user/testfdsharing.c	/^umain(void)$/;"	f
umain	user/testfsipc.c	/^umain(void)$/;"	f
umain	user/testkbd.c	/^umain(void)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpipe.c	/^umain(void)$/;"	f
umain	user/testpiperace.c	/^umain(void)$/;"	f
umain	user/testpiperace2.c	/^umain(void)$/;"	f
umain	user/testpmap.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(void)$/;"	f
umain	user/writemotd.c	/^umain(void)$/;"	f
unmap_block	fs/fs.c	/^unmap_block(uint32_t blockno)$/;"	f
unmap_range	user/testpmap.c	/^unmap_range(int startva, int endva) {$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
usage	fs/fsformat.c	/^usage(void)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
used	fs/fsformat.c	/^	uint32_t used;$/;"	m	struct:Block	file:
usefprint	obj/user/lsfd.asm	/^		usefprint = 1;$/;"	d
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = (uintptr_t)(va + i * PGSIZE);$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^		user_mem_check_addr = (uintptr_t)va;$/;"	d
utf	obj/kern/kernel.asm	/^                        utf = (struct UTrapframe *)((void *)(tf->tf_esp) - sizeof(struct UTrapframe) - 4);$/;"	d
utf	obj/kern/kernel.asm	/^                        utf = (struct UTrapframe *)((void *)UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
v	obj/kern/kernel.asm	/^	v = boot_freemem;	$/;"	d
v	obj/user/testmalloc.asm	/^			v = (void*) strtol(buf + 5, 0, 0);$/;"	d
v	obj/user/testmalloc.asm	/^			v = malloc(n);$/;"	d
v	obj/user/testmalloc.asm	/^			v = mptr;$/;"	d
v	obj/user/testmalloc.asm	/^	v = mptr;$/;"	d
va	obj/fs/fs.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/fs/fs.asm	/^	va = fd2data(fd);$/;"	d
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/kern/kernel.asm	/^	va = ROUNDDOWN(va, PGSIZE);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testmalloc.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/testmalloc.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testmalloc.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd) + offset;$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va	user/testpmap.c	/^int n, va, r, initva, maxpa, maxva, maxnum, failures;$/;"	v
va_arg	inc/stdarg.h	14;"	d
va_end	inc/stdarg.h	17;"	d
va_is_dirty	fs/fs.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/fs.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef char *va_list;$/;"	t
va_start	inc/stdarg.h	11;"	d
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testmalloc.asm	/^void *$/;"	l
void	obj/user/testmalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testmalloc.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
volatile	obj/fs/fs.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/cat.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/echo.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/forktree.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/icode.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/idle.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/init.asm	/^	volatile struct Env *e;$/;"	t
volatile	obj/user/init.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/ls.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/lsfd.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/num.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/pingpong.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/primes.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/primespipe.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/sh.asm	/^	volatile struct Env *e;$/;"	t
volatile	obj/user/sh.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/testfdsharing.asm	/^	volatile struct Env *e;$/;"	t
volatile	obj/user/testfdsharing.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/testkbd.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/testmalloc.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/testpipe.asm	/^	volatile struct Env *e;$/;"	t
volatile	obj/user/testpipe.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/testpiperace.asm	/^	volatile struct Env *kid;$/;"	t
volatile	obj/user/testpiperace.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/testpiperace2.asm	/^	volatile struct Env *kid;$/;"	t
volatile	obj/user/testpiperace2.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/testpteshare.asm	/^	volatile struct Env *e;$/;"	t
volatile	obj/user/testpteshare.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/testshell.asm	/^	volatile struct Env *e;$/;"	t
volatile	obj/user/testshell.asm	/^volatile struct Env *env;$/;"	t
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testmalloc.asm	/^				width = 0;$/;"	d
width	obj/user/testmalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testmalloc.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon1	file:
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write_block	fs/fs.c	/^write_block(uint32_t blockno)$/;"	f
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writedirectory	fs/fsformat.c	/^writedirectory(struct File *parentdirf, char *name, int root)$/;"	f
writefile	fs/fsformat.c	/^writefile(struct File *dirf, const char *name)$/;"	f
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
